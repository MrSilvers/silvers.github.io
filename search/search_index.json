{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Silvers\u7684\u4e2a\u4eba\u535a\u5ba2 \u00b6","title":"Home"},{"location":"#silvers","text":"","title":"Silvers\u7684\u4e2a\u4eba\u535a\u5ba2"},{"location":"aboutme/","text":"\u5173\u4e8e\u6211 \u00b6 \u73b0\u5b9e\u4e3b\u4e49\u3001\u5b9e\u7528\u4e3b\u4e49\u8005 \u00b6 \u00b6 \u00b6 \u00b6 \u00b6 - \u77e5\u4e4e - CSDN\u535a\u5ba2 - \u65b0\u6d6a\u5fae\u535a -","title":"\u5173\u4e8e\u6211"},{"location":"aboutme/#_1","text":"\u73b0\u5b9e\u4e3b\u4e49\u3001\u5b9e\u7528\u4e3b\u4e49\u8005","title":"\u5173\u4e8e\u6211"},{"location":"aboutme/#_2","text":"","title":""},{"location":"aboutme/#_3","text":"","title":""},{"location":"aboutme/#_4","text":"","title":""},{"location":"aboutme/#_5","text":"","title":""},{"location":"aboutme/#_6","text":"- \u77e5\u4e4e - CSDN\u535a\u5ba2 - \u65b0\u6d6a\u5fae\u535a -","title":""},{"location":"blog/","text":"\u8bed\u8a00 \u00b6 \u5173\u4e8ecgo\u7684\u4f7f\u7528\u548c\u5b9e\u8df5 \u7a0b\u5e8f\u5185\u7684\u4efb\u52a1\u7ba1\u7406\u5668 \u7a0b\u5e8f\u5185\u7684\u6301\u4e45\u5185\u5b58\u7ba1\u7406\u5668 GO\u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u65b9\u6cd5\u548cinterface \u7b97\u6cd5 \u00b6 \u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5 \u56fe\u4e0e\u56fe\u7684\u904d\u5386 \u4e2d\u7f00\u548c\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97\u65b9\u6cd5 \u901a\u4fe1 \u00b6 SNMP\u534f\u8bae\u53ca\u7b80\u5355\u5e94\u7528 5G\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c(\u4e00) 5G\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c(\u4e8c) 5G\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c(\u4e09) 5G\u6838\u5fc3\u7f51\u9274\u6743 \u6846\u67b6 \u00b6 robot framework\u6d4b\u8bd5\u6846\u67b6\u7684\u4f7f\u7528\u548c\u4e8c\u6b21\u5f00\u53d1 Django\u7684ORM \u5176\u4ed6 \u00b6 \u767e\u5ea6\u5730\u56feAPI\u5c1d\u8bd5","title":"\u4e13\u680f"},{"location":"blog/#_1","text":"\u5173\u4e8ecgo\u7684\u4f7f\u7528\u548c\u5b9e\u8df5 \u7a0b\u5e8f\u5185\u7684\u4efb\u52a1\u7ba1\u7406\u5668 \u7a0b\u5e8f\u5185\u7684\u6301\u4e45\u5185\u5b58\u7ba1\u7406\u5668 GO\u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u65b9\u6cd5\u548cinterface","title":"\u8bed\u8a00"},{"location":"blog/#_2","text":"\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5 \u56fe\u4e0e\u56fe\u7684\u904d\u5386 \u4e2d\u7f00\u548c\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97\u65b9\u6cd5","title":"\u7b97\u6cd5"},{"location":"blog/#_3","text":"SNMP\u534f\u8bae\u53ca\u7b80\u5355\u5e94\u7528 5G\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c(\u4e00) 5G\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c(\u4e8c) 5G\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c(\u4e09) 5G\u6838\u5fc3\u7f51\u9274\u6743","title":"\u901a\u4fe1"},{"location":"blog/#_4","text":"robot framework\u6d4b\u8bd5\u6846\u67b6\u7684\u4f7f\u7528\u548c\u4e8c\u6b21\u5f00\u53d1 Django\u7684ORM","title":"\u6846\u67b6"},{"location":"blog/#_5","text":"\u767e\u5ea6\u5730\u56feAPI\u5c1d\u8bd5","title":"\u5176\u4ed6"},{"location":"idea/","text":"","title":"\u60f3\u6cd5"},{"location":"life/","text":"","title":"\u751f\u6d3b"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/","text":"Django\u7684ORM\u4f7f\u7528 \u00b6 \u4e00\u3001Django\uff08MVT\uff09\u7684ORM\u4ecb\u7ecd \u00b6 ORM \u5168\u62fcObject-Relation Mapping. \u4e2d\u6587\u610f\u4e3a \u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04. \u5728MVC/MVT\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684Model\u6a21\u5757\u4e2d\u90fd\u5305\u62ecORM. \u901a\u4fd7\u7684\u8bf4\uff0c\u4e00\u4e2a\u6a21\u578b\uff08model\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u6570\u636e\u5e93\u8868\uff0c\u4f7f\u7528ORM\u628a\u5bf9\u8868\u7684\u64cd\u4f5c\u53d8\u6210\u5bf9\u5bf9\u8c61\u7684\u64cd\u4f5c. \u5173\u7cfb\u56fe ORM \u6570\u636e\u5e93 \u7c7b \u6570\u636e\u8868 \u5bf9\u8c61 \u6570\u636e\u884c \u5c5e\u6027 \u5b57\u6bb5 \u4e8c\u3001ORM\u7684\u4f18\u52bf \u00b6 \u53ea\u9700\u8981\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b, \u4e0d\u9700\u8981\u9762\u5411\u6570\u636e\u5e93\u7f16\u5199\u4ee3\u7801. \u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\u90fd\u8f6c\u5316\u6210\u5bf9\u7c7b\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u64cd\u4f5c. \u4e0d\u7528\u7f16\u5199\u5404\u79cd\u6570\u636e\u5e93\u7684sql\u8bed\u53e5. \u5b9e\u73b0\u4e86\u6570\u636e\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u89e3\u8026, \u5c4f\u853d\u4e86\u4e0d\u540c\u6570\u636e\u5e93\u64cd\u4f5c\u4e0a\u7684\u5dee\u5f02. \u4e0d\u7528\u5173\u6ce8\u7528\u7684\u662fmysql\u3001oracle...\u7b49\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u8f7b\u677e\u66f4\u6362\u6570\u636e\u5e93, \u800c\u4e0d\u9700\u8981\u4fee\u6539\u4ee3\u7801. \u4e09\u3001Django ORM\u7684\u52a3\u52bf \u00b6 \u76f8\u6bd4SQL\u6765\u8bf4\uff0c\u7075\u6d3b\u5ea6\u4e0d\u591f\uff0c\u9650\u5236\u5f3a. \u6839\u636e\u5bf9\u8c61\u7684\u64cd\u4f5c\u8f6c\u6362\u6210SQL\u8bed\u53e5,\u6839\u636e\u67e5\u8be2\u7684\u7ed3\u679c\u8f6c\u5316\u6210\u5bf9\u8c61, \u5728\u6620\u5c04\u8fc7\u7a0b\u4e2d\u6709\u6027\u80fd\u635f\u5931. ORM\u7528\u591a\u4e86SQL\u8bed\u53e5\u5c31\u5fd8\u4e86\uff0c\u5173\u7cfb\u6570\u636e\u5e93\u76f8\u5173\u6280\u80fd\u9000\u5316... \u56db\u3001models\u7684\u5e38\u7528\u65b9\u6cd5 \u00b6 model\u5b9a\u4e49\uff1a file:models.py from django.db import models class Test ( models . Model ): name = models . CharField ( max_length = 20 ) age = models . IntegerField () 4.1 \u67e5\u8be2\u6570\u636e \u00b6 get\u65b9\u6cd5\uff1amodels.Test.objects.get(name=\"MiKe\") filter\u65b9\u6cd5\uff1amodels.Test.objects.filter(name=\"Mike\") all\u65b9\u6cd5\uff1amodels.Test.objects.all() exclude\u65b9\u6cd5\uff1amodels.Test.objects.exclude(name=\"Mike\") first\u65b9\u6cd5\uff1a\u8fd4\u56de\u7b2c\u4e00\u6761\u6570\u636e last\u65b9\u6cd5\uff1a\u8fd4\u56de\u6700\u540e\u4e00\u6761\u6570\u636e exist\u65b9\u6cd5\uff1a\u67e5\u8be2\u662f\u5426\u6709\u6570\u636e\uff0c\u6709\u8fd4\u56deTrue \u8bf4\u660e \uff1a get\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u7ecf\u8fc7Django ORM\u5c01\u88c5\u7684Test\u7c7b\u7684\u5bf9\u8c61\u6216\u8005\u629b\u51fa\u5f02\u5e38(DoesNotExist) filter\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aQuerySet\u6216\u8005'[]'(python3\u8fd4\u56de'<QuerySet []>') all\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aQuerySet exclude\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aQuerySet QuerySet\u7c7b\u578b\u5c01\u88c5\u4e86filter\u3001exclude\u3001first\u3001last\u3001exists\u65b9\u6cd5(\u4e5f\u5c31\u662f\u652f\u6301\u94fe\u5f0f\u8c03\u7528) filter\u3001all\u3001exclude\u65b9\u6cd5\u90fd\u662f\u60f0\u6027\u6267\u884c\u7684\uff0c\u53ea\u4f1a\u521b\u5efa\u67e5\u8be2\u96c6\uff0c\u800c\u4e0d\u4f1a\u4e4b\u95f4\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u53ea\u6709\u8c03\u7528\u6570\u636e\u7684\u65f6\u5019\u624d\u4f1a\u8bbf\u95ee\uff0c\u67e5\u8be2\u8fc7\u7684\u7ed3\u679c\u96c6\u4f1a\u8fdb\u884c\u7f13\u5b58\uff08\u53ef\u91cd\u7528\uff09\uff0c\u518d\u6b21\u8c03\u7528\u65f6\u4e0d\u4f1a\u518d\u8bbf\u95ee\u6570\u636e\u5e93\uff08tip\uff1a\u53ef\u4ee5\u51cf\u5c11\u6570\u636e\u5e93\u7684\u8d1f\u8377\uff09 \u4f8b\u5b501\uff1a >>> list = BookInfo.objects.all () # \u4e0d\u8bbf\u95ee\u6570\u636e\u5e93 >>> print ([ book.book_name for book in list [ 0 :2 ]]) # \u8bbf\u95ee\u6570\u636e\u5e93, \u5e76\u7f13\u5b58 >>> print ([ book.book_name for book in list [ 1 :3 ]]) # \u5148\u8bbf\u95ee\u67e5\u8be2\u96c6\u7f13\u5b58, \u4e0d\u5728\u7f13\u5b58\u53bb\u8bbf\u95ee\u6570\u636e\u5e93 \u4f8b\u5b502\uff1a re = Book.objects.filter(price=80) re.exists() #\u4f1a\u67e5\u8be2\uff0c\u4f46re\u4e0d\u4f1a\u88ab\u8d4b\u503c\uff0c\u53ea\u6709\u4f7f\u7528re\u53d8\u91cf\u7684\u65f6\u5019\u624d\u4f1a\u88ab\u8d4b\u503c 4.2 \u589e\u52a0\u6570\u636e \u00b6 \u65b9\u6cd5\u4e00\uff1a\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61 a). test = Test(name='Mike') b). test.save() \u65b9\u6cd5\u4e8c\uff1a\u65b0\u5efa\u4e00\u4e2a\u5bf9\u8c61 a). test = Test() b). test.name = 'Mike' c). test.save() \u65b9\u6cd5\u4e09\uff1acreate \u6216\u8005 get_or_create\u65b9\u6cd5 a). models.Test.objects.create(name=\"Mike\") b). models.Test.objects.get_or_create(name=\"Mike\") tip\uff1a\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u53ef\u4ee5\u9632\u6b62\u63d2\u5165\u76f8\u540c\u7684\u6570\u636e \u9002\u7528\u60c5\u666f\uff1a\u4e00\u4e2a\u5e74\u7ea7\u6709\u591a\u4e2a\u5b66\u751f\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u67d0\u4e2a\u5e74\u7ea7\u7684\u5b66\u751f\uff08\u4e0d\u8003\u8651\u5b66\u751f\u91cd\u540d\u7684\u60c5\u51b5\uff09\uff0c\u5982\u4e0b\u6240\u793a\uff1a models.py # models.py from django.db import models class Student ( models . Model ): name = models . CharField ( max_length = 20 ) grade = models . CharField ( max_length = 20 ) [ silvers@vm ~ ] $ python3 ... >>> >>> data, status = models.Student.objects.get_or_create ( name = \"Mike\" ,defaults ={ grade = \"1\" }) \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u4e3aStudent\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u4e3aTrue\u6216False,\uff0c\u65b0\u5efa\u65f6\u8fd4\u56de\u7684\u662fTrue\uff0c\u5df2\u7ecf\u5b58\u5728\u65f6\u8fd4\u56deFalse\uff0c\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4ee3\u7801\u91cf 4.3 \u5220\u9664\u6570\u636e \u00b6 delete\u65b9\u6cd5\u5355\u4e2a\u5220\u9664\uff1amodels.Test.objects.get(name=\"Mike\").delete() delete\u65b9\u6cd5\u6279\u91cf\u5220\u9664\uff1amodels.Test.objects.filter(age=18).delete() delete\u65b9\u6cd5\u5220\u9664\u5168\u90e8\uff1amodels.Test.objects.all().delete() 4.4 \u4fee\u6539\u6570\u636e \u00b6 \u65b9\u6cd5\u4e00\uff1aupdate\u65b9\u6cd5 test = models.Test.objects.filter(name='Mike').update(age=19) \u65b9\u6cd5\u4e8c\uff1aget\u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61 test = models.Test.objects.get(name='Mike') test.age = 19 test.save() \u65b9\u6cd5\u4e09\uff1aupdate_or_create\u65b9\u6cd5 \u666e\u901a\u7684\u65b9\u6cd5\u66f4\u65b0\u6216\u521b\u5efa\u6570\u636e\uff1a defaults = { 'age' : 19 } try : obj = Test . objects . get ( name = 'John' , age = 18 ) for key , value in defaults . items (): setattr ( obj , key , value ) obj . save () except Exception : new_values = { 'name' : 'John' , 'age' : 19 } obj = Test ( ** new_values ) obj . save () \u4f7f\u7528update_or_create\u65b9\u6cd5\uff1a data , status = models . Test . objects . update_or_create ( name = 'Mike' , defaults = { 'age' : 19 }) \u8bf4\u660e \uff1a \u8be5\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u662f\u4e00\u4e2a\u521b\u5efa\u7684\u6216\u8005\u662f\u88ab\u66f4\u65b0\u7684\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u662f\u72b6\u6001\uff0c\u662f\u4e00\u4e2a\u6807\u8bc6\u662f\u5426\u521b\u5efa\u4e86\u65b0\u7684\u5bf9\u8c61\u7684\u5e03\u5c14\u503c 4.5 \u4f7f\u7528Q\u548cF \u00b6 4.5.1 F()\u7684\u4f5c\u7528 \u00b6 \u64cd\u4f5c\u6570\u636e\u8868\u4e2d\u7684\u67d0\u5217\u503c\uff0cF()\u5141\u8bb8Django\u5728\u672a\u5b9e\u9645\u94fe\u63a5\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u5177\u6709\u5bf9\u6570\u636e\u5e93\u5b57\u6bb5\u7684\u503c\u7684\u5f15\u7528\uff0c\u4e0d\u7528\u83b7\u53d6\u5bf9\u8c61\u653e\u5728\u5185\u5b58\u4e2d\u518d\u5bf9\u5b57\u6bb5\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u539f\u751f\u4ea7sql\u8bed\u53e5\u64cd\u4f5c\u3002 \u4f8b\u5b501\uff1a \u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u5728\u66f4\u65b0\u6570\u636e\u65f6\u9700\u8981\u5148\u4ece\u6570\u636e\u5e93\u91cc\u5c06\u539f\u6570\u636e\u53d6\u51fa\u540e\u65b9\u5728\u5185\u5b58\u91cc\uff0c\u7136\u540e\u7f16\u8f91\u67d0\u4e9b\u5c5e\u6027\uff0c\u6700\u540e\u63d0\u4ea4\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from models import Test data = Test . objects . get ( name = 'Mike' ) data . age += 1 data . save () #sql:update test set age=xxx where name='Mike'; \u4f8b\u5b502\uff1a \u4f7f\u7528F()\u4e0d\u7528\u83b7\u53d6\u5bf9\u8c61\u653e\u5728\u5185\u5b58\u4e2d\u518d\u5bf9\u5b57\u6bb5\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u539f\u751f\u4ea7sql\u8bed\u53e5\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from django.db.models import F from models import Test data = Test . objects . get ( name = \"Mike\" ) #\u60f0\u6027\u6267\u884c data . age = F ( 'age' ) + 1 #\u5e76\u6ca1\u6709\u83b7\u53d6age\u7684\u503c data . save () #sql:update test set age=age+1 where name='Mike'; \u8bf4\u660e \uff1apython\u505a\u7684\u552f\u4e00\u7684\u4e8b\u60c5\u5c31\u662f\u901a\u8fc7Django\u7684F()\u51fd\u6570\u521b\u5efa\u4e86\u4e00\u6761SQL\u8bed\u53e5\u7136\u540e\u6267\u884c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u4f7f\u7528F()\u66f4\u65b0\u6570\u636e\u4e4b\u540e\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u6570\u636e\u6765\u4f7f\u6570\u636e\u5e93\u4e2d\u7684\u503c\u4e0e\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u4e2d\u7684\u503c\u9879\u5bf9\u5e94\uff0c\u53ef\u4ee5\u4f7f\u7528data.refresh_from_db()\u6216\u8005\u4e4b\u95f4\u518d\u6b21\u8d4b\u503c\uff1adata = models.Test.objects.get(name='Mike') \u4f8b\u5b503\uff1a \u4f7f\u7528update\u914d\u5408F()\u66f4\u65b0\u591a\u6761\u6570\u636e views.py from models import Test data = Test . objects . filter ( age = 18 ) . update ( age = F ( 'age' ) + 1 ) \u8bf4\u660e \uff1a\u8fd9\u6837\u505a\u7684\u6548\u7387\u6bd4\u5c06\u5176\u53d6\u5230\u5185\u5b58\u4e2d\u540e\u518d\u4e00\u4e2a\u4e2a\u8ba1\u7b97\u503c\u518d\u66f4\u65b0\u6570\u636e\u5e93\u7684\u6548\u7387\u4f1a\u63d0\u9ad8\u975e\u5e38\u591a 4.5.2 Q()\u7684\u4f5c\u7528 \u00b6 \u5bf9\u5bf9\u8c61\u8fdb\u884c\u590d\u6742\u67e5\u8be2\uff0c\u5e76\u652f\u6301&\uff08and\uff09,|\uff08or\uff09\uff0c~\uff08not\uff09\u64cd\u4f5c\u7b26\uff08\u64cd\u4f5c\u7b26\u4f5c\u7528\u4e8eQ\u5bf9\u8c61\u4e4b\u95f4\uff0c\u800c\u4e0d\u662fQ\u5bf9\u8c61\u4e4b\u5185\uff09 \u4f8b\u5b501\uff1a \u5f53\u6211\u4eec\u5728\u67e5\u8be2\u7684\u6761\u4ef6\u4e2d\u9700\u8981\u7ec4\u5408\u6761\u4ef6\u65f6(\u4f8b\u5982\u4e24\u4e2a\u6761\u4ef6\u201c\u4e14\u201d\u6216\u8005\u201c\u6216\u201d)\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528Q()\u67e5\u8be2\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from django.db.models import Q from models import Test q = Q ( name__startswith = \"M\" ) p = Q ( name__endswith = 'e' ) data = Test . objects . filter ( q , p ) \u8fd9\u6837\u5c31\u7ed9filter\u4f20\u9012\u4e862\u4e2aQ\u5bf9\u8c61\uff0c\u9017\u53f7\u5173\u7cfb\u662f&\uff0c\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b26\u53f7&\u6216\u8005|\u5c06\u591a\u4e2aQ()\u5bf9\u8c61\u7ec4\u5408\u8d77\u6765\u4f20\u9012\u7ed9filter()\uff0cexclude()\uff0cget()\u7b49\u51fd\u6570\u3002\u5f53\u591a\u4e2aQ()\u5bf9\u8c61\u7ec4\u5408\u8d77\u6765\u65f6\uff0cDjango\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u65b0\u7684Q() \u4f8b\u5b502\uff1a Q\u67e5\u8be2\u548c\u5173\u952e\u5b57\u67e5\u8be2\u7ec4\u5408\uff0cQ\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u5fc5\u987b\u8981\u5728\u5173\u952e\u5b57\u53c2\u6570\u4e4b\u524d\uff08python\u8bed\u6cd5\uff09\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from django.db.models import Q from models import Test data = Test . objects . filter ( Q ( name__contains = 'M' ), age = 18 ) \u8bf4\u660e \uff1aQ()\u652f\u6301\u5927\u591a\u6570filter\u652f\u6301\u7684\u53c2\u6570\u547d\u540d\u4fee\u9970\uff08__xxx\u7528\u6cd5\uff09 4.6 \u5c5e\u6027\u7c7b\u578b\u4ecb\u7ecd \u00b6 AutoField\uff1a\u81ea\u52a8\u589e\u957f\u7684IntegerField\uff0c\u901a\u5e38\u4e0d\u7528\u6307\u5b9a\uff0c\u4e0d\u6307\u5b9a\u65f6Django\u4f1a\u81ea\u52a8\u521b\u5efa\u5c5e\u6027\u540d\u4e3aid\u7684\u81ea\u52a8\u589e\u957f\u5c5e\u6027\u3002 BooleanField\uff1a\u5e03\u5c14\u5b57\u6bb5\uff0c\u503c\u4e3aTrue\u6216False\u3002 NullBooleanField\uff1a\u652f\u6301Null\u3001True\u3001False\u4e09\u79cd\u503c\u3002 CharField(max_length=\u5b57\u7b26\u957f\u5ea6)\uff1a\u5b57\u7b26\u4e32\u3002 TextField\uff1a\u5927\u6587\u672c\u5b57\u6bb5\uff0c\u4e00\u822c\u8d85\u8fc74000\u4e2a\u5b57\u7b26\u65f6\u4f7f\u7528,\u53c2\u6570max_length\u8868\u793a\u6700\u5927\u5b57\u7b26\u4e2a\u6570\u3002 IntegerField\uff1a\u6574\u6570\u3002 DecimalField(max_digits=None, decimal_places=None)\uff1a\u5341\u8fdb\u5236\u6d6e\u70b9\u6570,\u53c2\u6570max_digits\u8868\u793a\u603b\u4f4d\u6570,\u53c2\u6570decimal_places\u8868\u793a\u5c0f\u6570\u4f4d\u6570\u3002 FloatField(max_digits=None, decimal_places=None)\uff1a\u6d6e\u70b9\u6570,\u53c2\u6570max_digits\u8868\u793a\u6700\u5927\u7684\u4f4d\u6570,\u53c2\u6570decimal_places\u8868\u793a\u5c0f\u6570\u4f4d\u6570\u3002 DateField([auto_now=False | auto_now_add=False])\uff1a\u65e5\u671f\u3002 TimeField\uff1a\u65f6\u95f4\uff0c\u53c2\u6570\u540cDateField\u3002\u53c2\u6570auto_now\u8868\u793a\u6bcf\u6b21\u4fdd\u5b58\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u4e3a\u5f53\u524d\u65f6\u95f4\uff0c\u7528\u4e8e\"\u6700\u540e\u4e00\u6b21\u4fee\u6539\"\u7684\u65f6\u95f4\u6233\uff0c\u5b83\u603b\u662f\u4f7f\u7528\u5f53\u524d\u65e5\u671f\uff0c\u9ed8\u8ba4\u4e3afalse, \u53c2\u6570auto_now_add\u8868\u793a\u5f53\u5bf9\u8c61\u7b2c\u4e00\u6b21\u88ab\u521b\u5efa\u65f6\u81ea\u52a8\u8bbe\u7f6e\u5f53\u524d\u65f6\u95f4\uff0c\u7528\u4e8e\u521b\u5efa\u7684\u65f6\u95f4\u6233\uff0c\u5b83\u603b\u662f\u4f7f\u7528\u5f53\u524d\u65e5\u671f\uff0c\u9ed8\u8ba4\u4e3afalse\u3002 \u6ce8\u610f\uff1a\u53c2\u6570auto_now_add\u548cauto_now\u662f\u76f8\u4e92\u6392\u65a5\u7684\uff0c\u7ec4\u5408\u5c06\u4f1a\u53d1\u751f\u9519\u8bef\u3002 DateTimeField\uff1a\u65e5\u671f\u65f6\u95f4\uff0c\u53c2\u6570\u540cDateField\u3002 FileField\uff1a\u4e0a\u4f20\u6587\u4ef6\u5b57\u6bb5\u3002 ImageField\uff1a\u7ee7\u627f\u4e8eFileField\uff0c\u5bf9\u4e0a\u4f20\u7684\u5185\u5bb9\u8fdb\u884c\u6821\u9a8c\uff0c\u786e\u4fdd\u662f\u6709\u6548\u7684\u56fe\u7247\u3002 \u5176\u4ed6\uff1aDjango\u8fd8\u6709\u90ae\u7bb1\u3001url\u3001ip\u5730\u5740\u7b49\u5c5e\u6027\u5b57\u6bb5\uff0c\u4f46\u662f\u4e0d\u7ecf\u5e38\u4f7f\u7528\uff0c\u4e00\u822c\u5c31\u7528CharField\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f7f\u7528\u8fd9\u4e9b\u4f1a\u589e\u52a0\u5f02\u5e38\u7684\u53ef\u80fd \u6ce8\u610f\uff1aDjango\u4f1a\u81ea\u52a8\u4e3a\u8868\u521b\u5efa\u4e3b\u952e\u5b57\u6bb5 \u5982\u679c\u4f7f\u7528\u9009\u9879\u8bbe\u7f6e\u67d0\u5c5e\u6027\u4e3a\u4e3b\u952e\u5b57\u6bb5\u540e\uff0cDjango\u5c31\u4e0d\u4f1a\u518d\u521b\u5efa\u81ea\u52a8\u589e\u957f\u7684\u4e3b\u952e\u5b57\u6bb5\uff0c\u9ed8\u8ba4\u521b\u5efa\u7684\u4e3b\u952e\u5b57\u6bb5\u4e3aid\uff0c\u53ef\u4ee5\u4f7f\u7528pk\uff08primary key\uff09\u4ee3\u66ff 4.7 \u5c5e\u6027\u7c7b\u578b\u7684\u5e38\u89c1\u5173\u952e\u5b57\u53c2\u6570\u4ecb\u7ecd \u00b6 \u5916\u952e\u5f15\u7528\uff08ForeignKey\uff09\u5b57\u6bb5\u7c7b\u578b\u2014\u2014on_delete=value value\u7684\u503c\u6709\uff1a CASCADE\uff1a\u5220\u9664\u5f15\u7528\u7684\u5bf9\u8c61\u65f6\uff0c\u4e5f\u5220\u9664\u5f15\u7528\u5b83\u7684\u5bf9\u8c61 PROTECT\uff1a\u7981\u6b62\u5220\u9664\u5f15\u7528\u7684\u5bf9\u8c61\u3002SQL\u7b49\u4ef7\u7269\uff1aRESTRICT\u3002 SET_NULL\uff1a\u5c06\u5f15\u7528\u8bbe\u7f6e\u4e3aNULL\uff08\u8981\u6c42\u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a\uff09\uff0c\u5f53\u5b57\u6bb5\u8bbe\u7f6enull=True\u624d\u53ef\u4ee5\u4f7f\u7528 SET_DEFAULT\uff1a\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u3002\u53ea\u6709\u5f53\u5b57\u6bb5\u8bbe\u7f6e\u4e86default\u53c2\u6570\u65f6\u624d\u80fd\u4f7f\u7528 SQL\u7b49\u4ef7\u7269\uff1aSET DEFAULT\u3002 SET(value \u6216\u8005 \u51fd\u6570\u8fd4\u56de\u503c)\uff1a\u8bbe\u7f6e\u7ed9\u5b9a\u503c\u3002\u8fd9\u4e2a\u4e0d\u662fSQL\u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u5b8c\u5168\u7531Django\u5904\u7406\u3002 DO_NOTHING\uff1aSQL\u7b49\u4ef7\u7269\uff1aNO ACTION\u3002 to_field:\u8bbe\u7f6e\u8981\u5173\u8054\u7684\u8868\u7684\u5b57\u6bb5 to:\u8bbe\u7f6e\u8981\u5173\u8054\u7684\u8868 \u4f8b\u5b50\uff1a class Test2 (): a = ForeignKey ( 'Test' , to_field = \"name\" ) \u8be5\u793a\u4f8b\u8868\u793a\u8868Test2\u7684a\u5c5e\u6027\u5173\u8054Test\u8868\u7684name\u5c5e\u6027 4.8 filter\u7b49\u67e5\u8be2\u65b9\u6cd5\u53c2\u6570\u7684\u547d\u540d\u4fee\u9970\u4ecb\u7ecd \u00b6 __exact \u7cbe\u786e\u7b49\u4e8e like \u2018aaa\u2019 __iexact \u7cbe\u786e\u7b49\u4e8e \u5ffd\u7565\u5927\u5c0f\u5199 ilike \u2018aaa\u2019 __contains \u5305\u542b like \u2018%aaa%\u2019 __icontains \u5305\u542b \u5ffd\u7565\u5927\u5c0f\u5199 ilike \u2018%aaa%\u2019\uff0c\u4f46\u662f\u5bf9\u4e8esqlite\u6765\u8bf4\uff0ccontains\u7684\u4f5c\u7528\u6548\u679c\u7b49\u540c\u4e8eicontains\u3002 __gt \u5927\u4e8e __gte \u5927\u4e8e\u7b49\u4e8e __lt \u5c0f\u4e8e __lte \u5c0f\u4e8e\u7b49\u4e8e __in \u5b58\u5728\u4e8e\u4e00\u4e2alist\u8303\u56f4\u5185 __startswith \u4ee5\u2026\u5f00\u5934 __istartswith \u4ee5\u2026\u5f00\u5934 \u5ffd\u7565\u5927\u5c0f\u5199 __endswith \u4ee5\u2026\u7ed3\u5c3e __iendswith \u4ee5\u2026\u7ed3\u5c3e\uff0c\u5ffd\u7565\u5927\u5c0f\u5199 __range \u5728\u2026\u8303\u56f4\u5185 __year \u65e5\u671f\u5b57\u6bb5\u7684\u5e74\u4efd __month \u65e5\u671f\u5b57\u6bb5\u7684\u6708\u4efd __day \u65e5\u671f\u5b57\u6bb5\u7684\u65e5 __isnull=True/False __isnull=True \u4e0e __exact=None\u7684\u533a\u522b 4.9 \u628amodels-objects\u8f6c\u6210json\u683c\u5f0f \u00b6 \u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528values() \u4f8b\u5b501\uff1a >>> from models import Test >>> data = list ( Test.objects.filter ( name = 'Mike' ) .values ( 'name' , 'age' )) #django2.0\u4e0b.values()\u8fd4\u56de\u7684\u65f6QuerySet\u5bf9\u8c61\uff0c\u9700\u8981\u5148\u8f6c\u6210list\u518d\u53d6\u51fa\u5b57\u5178 >>> data { 'name' : 'Mike' , 'age' : 18 } \u8bf4\u660e \uff1avalues()\u63a5\u6536\u7684\u662f\u9700\u8981\u5728dict\u91cc\u751f\u6210\u7684\u952e\uff0c\u8be5\u503c\u4e0d\u662f\u6a21\u578b\u91cc\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u800c\u662f\u6570\u636e\u5e93\u91cc\u8868\u7684\u5b57\u6bb5\u540d\u5b57 \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528model_to_dict\u65b9\u6cd5 \u4f8b\u5b502\uff1a >>> from django.forms.models import model_to_dict >>> from models import Test >>> obj = Test.objects.get ( name = 'Mike' ) >>> data = model_to_dict ( obj ) >>> data { 'name' : 'Mike' , 'age' : 18 } \u8bf4\u660e \uff1a\u8fd9\u79cd\u65b9\u6cd5\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u7684\u9700\u6c42\uff0c\u4e14\u8f93\u51fa\u4e5f\u8f83\u4e3a\u5408\u7406\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570fields\u548cexclude\u6765\u914d\u7f6e\u8f93\u51fa\u7684\u5b57\u6bb5\uff0cfileds\u6307\u5b9a\u9700\u8981\u8f93\u51fa\u7684\u5b57\u6bb5\uff0cexclude\u6307\u5b9a\u4e0d\u9700\u8981\u8f93\u51fa\u7684\u5b57\u6bb5\uff0c\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u53c2\u6570\u90fd\u63a5\u6536\u4e00\u4e2alist\u3002 \uff08\u6ce8\uff1a\u8fd9\u91cc\u7684\u5b57\u6bb5\u662fmodels\u91cc\u5b9a\u4e49\u7684\u5c5e\u6027\uff09 \u65b9\u6cd5\u4e09\uff1a\u4f7f\u7528Django\u7684\u5e8f\u5217\u5316\u5de5\u5177serializers\uff08\u5e8f\u5217\u5316\u662f\u5c06\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u4e3a\u53ef\u4fdd\u6301\u6216\u4f20\u8f93\u7684\u683c\u5f0f\u7684\u8fc7\u7a0b\uff09 >>> from django.core import serializers >>> from models import Test >>> import json >>> obj_list = Test.objects.filter ( age = 18 ) >>> data = serializers.serialize ( \"json\" ,obj_list ) >>> data '[{' model ': ' app.name ', ' pk ': ' id ', ' fields ': {' name ': ' Mike ', ' age ': 18}},...]' >>> data = json.loads ( data ) >>> data [{ 'model' : 'app.name' , 'pk' : 'id' , 'fields' : { 'name' : 'Mike' , 'age' : 18 }} ,... ] >>> data_list = [] >>> for item in data: ... temp = item.get ( 'fields' ) ... data_list.append ( temp ) >>> data_list [{ 'name' : 'Mike' , 'age' : 18 } ,... ] \u8bf4\u660e \uff1a\u8fd9\u4e2a\u65b9\u6cd5\u81f3\u5c11\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u4f60\u8981\u5e8f\u5217\u5316\u6210\u4e3a\u7684\u6570\u636e\u683c\u5f0f\uff0c\u8fd9\u91cc\u662f\u2018json\u2019(django\u652f\u6301xml\u3001json\u3001yaml\u8fd93\u79cd\uff0c\u5176\u4e2dyaml\u53ef\u80fd\u9700\u8981\u7b2c\u4e09\u65b9\u5e93\u7684\u652f\u6301)\uff0c\u7b2c\u4e8c\u4e2a\u662f\u8981\u5e8f\u5217\u5316\u7684\u6570\u636e\u5bf9\u8c61\uff0c\u6570\u636e\u901a\u5e38\u662fORM\u6a21\u578b\u7684QuerySet\uff0c\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u8be5\u65b9\u6cd5\u8fd8\u63a5\u6536\u4e00\u4e2afields\u5173\u952e\u5b57(tuple or list)\u53c2\u6570\uff0c\u7528\u4e8e\u5e8f\u5217\u5316\u6307\u5b9a\u7684\u5b57\u6bb5\uff0c\u5982fields=('name','age'),\u6211\u4eec\u901a\u5e38\u53ea\u9700\u8981\u7ed3\u679c\u91cc\u952efields\u5bf9\u5e94\u7684\u503c\u3002 \u6ce8\u610f\uff1a\u5982\u679cORM\u6a21\u578b\u5177\u6709\u81ea\u5b9a\u4e49\u7684\u5b57\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u5316\u5de5\u5177\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5fc5\u987b\u81ea\u5df1\u7f16\u5199\u76f8\u5e94\u90e8\u5206\u7684\u5e8f\u5217\u5316\u4ee3\u7801\u3002 \u4e94\u3001models\u7684\u6ce8\u610f\u8981\u70b9 \u00b6 \u6d89\u53ca\u5230\u5bf9models\u7684\u64cd\u4f5c\uff08\u589e\u52a0\u3001\u5220\u9664\u3001\u67e5\u8be2\u3001\u4fee\u6539\uff09\uff0c\u5982\u679c\u4f60\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u4f20\u5165\u7684\u503c\u662f\u5408\u6cd5\u7684\u503c\uff0c\u6700\u597d\u7528try...except\u5305\u62ec\u8d77\u6765\uff0c\u4e0d\u6d89\u53ca\u5230\u6761\u4ef6\u9650\u5236\uff08\u4f20\u5165\u53c2\u6570\uff09\u7684\u53ef\u4ee5\u4e0d\u7528\u5f02\u5e38\u5904\u7406\uff0c\u5982models.Test.objects.all()\u8fd9\u79cd \u4f7f\u7528print(str(models.Test.objects.all().query))\u53ef\u4ee5\u67e5\u770b\u6267\u884cTest.objects.all()\u65f6\u6267\u884c\u7684sql\u8bed\u53e5 \u4f7f\u7528models.Test.objects.filter(field1=xxx).values('field1','field2',...,'fieldn')\u65f6\uff0cvalues\u4e2d\u7684\u5b57\u6bb5\u662f\u6570\u636e\u5e93\u4e2d\u5b9e\u9645\u7684\u5b57\u6bb5\uff0c\u800c\u4e0d\u662fmodels\u5b9a\u4e49\u7684\u8be5\u8868\u7684\u6a21\u578b\u7684\u5b57\u6bb5\u3002 \u5982\u679cfield1\u662f\u5916\u952e\u5b57\u6bb5\uff0c\u5219models.Test.objects.filter(field1__id=xxx)\u53ef\u4ee5\u6307\u5b9a\u53ea\u5173\u8054\u5230\u539f\u8868\u7684id\u800c\u4e0d\u662f\u6574\u4e2amodel\u5bf9\u8c61 get_or_create()\u65b9\u6cd5\u6709\u4e00\u4e2adefaults\u5173\u952e\u5b57\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u5f53get\u5931\u8d25\u9700\u8981create\u65f6\uff0c\u8be5\u8868\u5bf9\u5e94\u7684models\u4e2d\u5176\u4ed6\u5c5e\u6027\u7684\u521b\u5efa\u503c\uff0cdefaults\u662f\u4e00\u4e2adict\u3002 \u5f53models\u7684\u8868\u5b9a\u4e49\u6ca1\u6709\u4e3b\u952e\u65f6\uff0c\u5982\u679c\u8981\u4f7f\u7528filter\uff0c\u5e94\u8be5\u6839\u636e\u6570\u636e\u5e93\u7684\u8868\u7ed3\u6784\u548c\u81ea\u5df1\u7684\u9700\u6c42\u6307\u5b9avalues\u5b57\u6bb5\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514dDjango\u629b\u51fa\u627e\u4e0d\u5230id\u7684\u5f02\u5e38\u60c5\u51b5 django\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6bcf\u4e00\u4e2a\u4e3b\u8868\u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u662f\u5916\u952e\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u67e5\u8be2\u5230\u6240\u6709\u5173\u4e8e\u5b50\u8868\u7684\u4fe1\u606f\uff0c\u8fd9\u4e2a\u5c5e\u6027\u7684\u540d\u5b57\u5c31\u662f\u5b50\u8868\u7684\u540d\u79f0\u5c0f\u5199\u52a0\u4e0a_set\uff0c\u6bd4\u5982\u6709teacher\u8868\u548cstudent\u8868\uff0cstudent\u8868\u6709\u4e00\u4e2a\u5916\u952e\u6307\u5411teacher\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528t = teacher.objects.get(id=1).student_set.all()\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2ateacher\u7684\u6240\u6709student\uff0c\u5982\u679c\u5728\u5b9a\u4e49student\u8868\u7684teacher\u5c5e\u6027\u7684\u65f6\u5019\u6307\u5b9a\u4e86related_name\u5173\u952e\u5b57\u53c2\u6570\u7684\u503c\uff0c\u6bd4\u5982related_name='student_teacher',\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528t = teacher.objects.get(id=1).student_teacher.all()\u83b7\u53d6\u8fd9\u4e2ateacher\u7684\u6240\u6709student \u5f53\u4e00\u5f20\u8868\u7684\u591a\u4e2a\u5b57\u6bb5\u6307\u5411\u540c\u4e00\u5f20\u8868\u65f6\uff0c\u4f1a\u51fa\u9519\u3002\u56e0\u4e3a\u7cfb\u7edf\u65e0\u6cd5\u77e5\u9053\uff0c\u901a\u8fc7\u53e6\u4e00\u5f20\u8868\uff0c\u8bbf\u95eexxx_set\u5c5e\u6027\u65f6\u8bbf\u95ee\u7684\u662f\u54ea\u4e2a\u5c5e\u6027\uff0c\u8fd9\u65f6\u5c31\u8981\u4e3a\u8fd9\u4e9b\u5b57\u6bb5\u5b9a\u4e49\u4e00\u4e2arelated_name\u5c5e\u6027\uff0c\u53e6\u5916\u4e00\u5f20\u8868\u8bbf\u95ee\u8fd9\u4e2a\u8868\u65f6\uff0c\u5c31\u4f1a\u6839\u636erelated_name\u7684\u503c\u6765\u5f97\u5230\u5404\u4e2a\u5c5e\u6027 \u4e00\u822c\u60c5\u51b5\u4e0bForeignKey('table_name')\u662f\u9ed8\u8ba4\u5173\u8054\u5230table_name\u7684id\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7to_field\u5173\u952e\u5b57\u53c2\u6570\u6539\u53d8\u8fd9\u4e00\u9ed8\u8ba4\u884c\u4e3a\u3002to_field\u7684\u4f5c\u7528\u662f\u6307\u5b9a\u88ab\u5173\u8054\u5bf9\u8c61\u7684\u7528\u4e8e\u5173\u8054\u7684\u5b57\u6bb5\uff08\u5728Django\u7684ORM\u4e2d\uff0c\u8fd9\u4e2a\u88ab\u5173\u8054\u7684\u5b57\u6bb5\u5fc5\u987b\u662f\u6709unique\u5c5e\u6027\u7684\u5b57\u6bb5\uff09\u3002\u53ef\u4ee5\u89e3\u51b3\u6570\u636e\u5e93\u8868\u7684\u5916\u952e\u5173\u8054\u7684\u5b57\u6bb5\u4e0d\u662f\u8868\u7684id\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u8d4b\u503c\u7684\u65f6\u5019\u8fd8\u662f\u9700\u8981\u8d4b\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5b57\u6bb5\u503c \u4e00\u822c\u6765\u8bf4\u5c5e\u6027f = ForeignKey('A')\u5728\u6570\u636e\u5e93\u751f\u6210\u8868\u7684\u65f6\u5019\uff0c\u8be5\u6a21\u578b\u7684f\u5c5e\u6027\u4f1a\u5bf9\u5e94\u6570\u636e\u5e93\u8be5\u8868\u7684f_id\u5b57\u6bb5\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u8ba9\u6570\u636e\u5e93\u8868\u7684\u5b57\u6bb5\u4e5f\u662ff\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u5b9a\u4e49\u5c5e\u6027f\u7684\u65f6\u5019\u52a0\u4e00\u4e2a\u5173\u952e\u5b57\u53c2\u6570db_column='f',\u8fd9\u6837\u6570\u636e\u5e93\u91cc\u9762\u8be5\u6a21\u578b\u5bf9\u5e94\u7684\u8868\u7684\u5b57\u6bb5\u5c31\u662ff\u4e86 \u516d\u3001Django\u4e2d\u4f7f\u7528\u539f\u751fSQL\u64cd\u4f5c\u6570\u636e\u5e93 \u00b6 \u5c3d\u7ba1ORM\u5f88\u597d\u7528\uff0c\u5355\u5f88\u591a\u60c5\u51b5\u4e0b\u6709\u5f88\u5927\u5c40\u9650\u6027\uff0c\u5e38\u5e38\u8fd8\u662f\u4f1a\u9700\u8981\u7528\u5230\u539f\u751fsql\u67e5\u8be2\u3002\u4e0b\u9762\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u7528\u7684django\u539f\u751fsql\u67e5\u8be2\u5c01\u88c5\u7684\u65b9\u6cd5 def insert ( sql , params ): result = { 'status' : True } cursor = connection . cursor () try : rowcount = cursor . execute ( sql , params ) except Exception as e : result [ 'status' ] = False else : if not rowcount : result [ 'status' ] = False else : transation . commit () finally : cursor () . close () return result def query ( sql , params ): \"\"\" \u8fd4\u56de\u4e00\u884c\u6570\u636e :param sql: sql\u8bed\u53e5 :param params: sql\u8bed\u53e5\u53c2\u6570 :return: \u4f8b\u5982\uff1a{\"id\": id, \"username\": 'username', \"first_name\": 'first_name'} \"\"\" result = { 'status' : True } cursor = connection . cursor () try : cursor . execute ( sql , params ) except Exception as e : result [ 'status' ] = False print str ( e . message ) else : if not rowcount : result [ 'status' ] = False else : desc = cursor . description data_dict = dict ( zip ([ col [ 0 ] for col in desc ], cursor . fetchone ())) result [ 'data' ] = data_dict finally : cursor . close () return result def queryAll ( sql ): \"\"\" \u8fd4\u56de\u5168\u90e8\u6570\u636e :param sql: sql\u8bed\u53e5 :return: \u4f8b\u5982\uff1a[{\"id\": id, \"username\": 'username', \"first_name\": 'first_name'}] \"\"\" result = { 'status' : True } cursor = connection . cursor () try : cursor . execute ( sql ) except Exception as e : result [ 'status' ] = False else : if not rowcount : result [ 'status' ] = False else : desc = cursor . description object_list = [ dict ( zip ([ col [ 0 ] for col in desc ], row )) for row in cursor . fetchall () ] finally : cursor . close () return object_list","title":"Django\u7684ORM\u4f7f\u7528"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#djangoorm","text":"","title":"Django\u7684ORM\u4f7f\u7528"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#djangomvtorm","text":"ORM \u5168\u62fcObject-Relation Mapping. \u4e2d\u6587\u610f\u4e3a \u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04. \u5728MVC/MVT\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684Model\u6a21\u5757\u4e2d\u90fd\u5305\u62ecORM. \u901a\u4fd7\u7684\u8bf4\uff0c\u4e00\u4e2a\u6a21\u578b\uff08model\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u6570\u636e\u5e93\u8868\uff0c\u4f7f\u7528ORM\u628a\u5bf9\u8868\u7684\u64cd\u4f5c\u53d8\u6210\u5bf9\u5bf9\u8c61\u7684\u64cd\u4f5c. \u5173\u7cfb\u56fe ORM \u6570\u636e\u5e93 \u7c7b \u6570\u636e\u8868 \u5bf9\u8c61 \u6570\u636e\u884c \u5c5e\u6027 \u5b57\u6bb5","title":"\u4e00\u3001Django\uff08MVT\uff09\u7684ORM\u4ecb\u7ecd"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#orm","text":"\u53ea\u9700\u8981\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b, \u4e0d\u9700\u8981\u9762\u5411\u6570\u636e\u5e93\u7f16\u5199\u4ee3\u7801. \u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\u90fd\u8f6c\u5316\u6210\u5bf9\u7c7b\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u64cd\u4f5c. \u4e0d\u7528\u7f16\u5199\u5404\u79cd\u6570\u636e\u5e93\u7684sql\u8bed\u53e5. \u5b9e\u73b0\u4e86\u6570\u636e\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u89e3\u8026, \u5c4f\u853d\u4e86\u4e0d\u540c\u6570\u636e\u5e93\u64cd\u4f5c\u4e0a\u7684\u5dee\u5f02. \u4e0d\u7528\u5173\u6ce8\u7528\u7684\u662fmysql\u3001oracle...\u7b49\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u8f7b\u677e\u66f4\u6362\u6570\u636e\u5e93, \u800c\u4e0d\u9700\u8981\u4fee\u6539\u4ee3\u7801.","title":"\u4e8c\u3001ORM\u7684\u4f18\u52bf"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#django-orm","text":"\u76f8\u6bd4SQL\u6765\u8bf4\uff0c\u7075\u6d3b\u5ea6\u4e0d\u591f\uff0c\u9650\u5236\u5f3a. \u6839\u636e\u5bf9\u8c61\u7684\u64cd\u4f5c\u8f6c\u6362\u6210SQL\u8bed\u53e5,\u6839\u636e\u67e5\u8be2\u7684\u7ed3\u679c\u8f6c\u5316\u6210\u5bf9\u8c61, \u5728\u6620\u5c04\u8fc7\u7a0b\u4e2d\u6709\u6027\u80fd\u635f\u5931. ORM\u7528\u591a\u4e86SQL\u8bed\u53e5\u5c31\u5fd8\u4e86\uff0c\u5173\u7cfb\u6570\u636e\u5e93\u76f8\u5173\u6280\u80fd\u9000\u5316...","title":"\u4e09\u3001Django ORM\u7684\u52a3\u52bf"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#models","text":"model\u5b9a\u4e49\uff1a file:models.py from django.db import models class Test ( models . Model ): name = models . CharField ( max_length = 20 ) age = models . IntegerField ()","title":"\u56db\u3001models\u7684\u5e38\u7528\u65b9\u6cd5"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#41","text":"get\u65b9\u6cd5\uff1amodels.Test.objects.get(name=\"MiKe\") filter\u65b9\u6cd5\uff1amodels.Test.objects.filter(name=\"Mike\") all\u65b9\u6cd5\uff1amodels.Test.objects.all() exclude\u65b9\u6cd5\uff1amodels.Test.objects.exclude(name=\"Mike\") first\u65b9\u6cd5\uff1a\u8fd4\u56de\u7b2c\u4e00\u6761\u6570\u636e last\u65b9\u6cd5\uff1a\u8fd4\u56de\u6700\u540e\u4e00\u6761\u6570\u636e exist\u65b9\u6cd5\uff1a\u67e5\u8be2\u662f\u5426\u6709\u6570\u636e\uff0c\u6709\u8fd4\u56deTrue \u8bf4\u660e \uff1a get\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u7ecf\u8fc7Django ORM\u5c01\u88c5\u7684Test\u7c7b\u7684\u5bf9\u8c61\u6216\u8005\u629b\u51fa\u5f02\u5e38(DoesNotExist) filter\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aQuerySet\u6216\u8005'[]'(python3\u8fd4\u56de'<QuerySet []>') all\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aQuerySet exclude\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aQuerySet QuerySet\u7c7b\u578b\u5c01\u88c5\u4e86filter\u3001exclude\u3001first\u3001last\u3001exists\u65b9\u6cd5(\u4e5f\u5c31\u662f\u652f\u6301\u94fe\u5f0f\u8c03\u7528) filter\u3001all\u3001exclude\u65b9\u6cd5\u90fd\u662f\u60f0\u6027\u6267\u884c\u7684\uff0c\u53ea\u4f1a\u521b\u5efa\u67e5\u8be2\u96c6\uff0c\u800c\u4e0d\u4f1a\u4e4b\u95f4\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u53ea\u6709\u8c03\u7528\u6570\u636e\u7684\u65f6\u5019\u624d\u4f1a\u8bbf\u95ee\uff0c\u67e5\u8be2\u8fc7\u7684\u7ed3\u679c\u96c6\u4f1a\u8fdb\u884c\u7f13\u5b58\uff08\u53ef\u91cd\u7528\uff09\uff0c\u518d\u6b21\u8c03\u7528\u65f6\u4e0d\u4f1a\u518d\u8bbf\u95ee\u6570\u636e\u5e93\uff08tip\uff1a\u53ef\u4ee5\u51cf\u5c11\u6570\u636e\u5e93\u7684\u8d1f\u8377\uff09 \u4f8b\u5b501\uff1a >>> list = BookInfo.objects.all () # \u4e0d\u8bbf\u95ee\u6570\u636e\u5e93 >>> print ([ book.book_name for book in list [ 0 :2 ]]) # \u8bbf\u95ee\u6570\u636e\u5e93, \u5e76\u7f13\u5b58 >>> print ([ book.book_name for book in list [ 1 :3 ]]) # \u5148\u8bbf\u95ee\u67e5\u8be2\u96c6\u7f13\u5b58, \u4e0d\u5728\u7f13\u5b58\u53bb\u8bbf\u95ee\u6570\u636e\u5e93 \u4f8b\u5b502\uff1a re = Book.objects.filter(price=80) re.exists() #\u4f1a\u67e5\u8be2\uff0c\u4f46re\u4e0d\u4f1a\u88ab\u8d4b\u503c\uff0c\u53ea\u6709\u4f7f\u7528re\u53d8\u91cf\u7684\u65f6\u5019\u624d\u4f1a\u88ab\u8d4b\u503c","title":"4.1 \u67e5\u8be2\u6570\u636e"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#42","text":"\u65b9\u6cd5\u4e00\uff1a\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61 a). test = Test(name='Mike') b). test.save() \u65b9\u6cd5\u4e8c\uff1a\u65b0\u5efa\u4e00\u4e2a\u5bf9\u8c61 a). test = Test() b). test.name = 'Mike' c). test.save() \u65b9\u6cd5\u4e09\uff1acreate \u6216\u8005 get_or_create\u65b9\u6cd5 a). models.Test.objects.create(name=\"Mike\") b). models.Test.objects.get_or_create(name=\"Mike\") tip\uff1a\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u53ef\u4ee5\u9632\u6b62\u63d2\u5165\u76f8\u540c\u7684\u6570\u636e \u9002\u7528\u60c5\u666f\uff1a\u4e00\u4e2a\u5e74\u7ea7\u6709\u591a\u4e2a\u5b66\u751f\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u67d0\u4e2a\u5e74\u7ea7\u7684\u5b66\u751f\uff08\u4e0d\u8003\u8651\u5b66\u751f\u91cd\u540d\u7684\u60c5\u51b5\uff09\uff0c\u5982\u4e0b\u6240\u793a\uff1a models.py # models.py from django.db import models class Student ( models . Model ): name = models . CharField ( max_length = 20 ) grade = models . CharField ( max_length = 20 ) [ silvers@vm ~ ] $ python3 ... >>> >>> data, status = models.Student.objects.get_or_create ( name = \"Mike\" ,defaults ={ grade = \"1\" }) \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u4e3aStudent\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u4e3aTrue\u6216False,\uff0c\u65b0\u5efa\u65f6\u8fd4\u56de\u7684\u662fTrue\uff0c\u5df2\u7ecf\u5b58\u5728\u65f6\u8fd4\u56deFalse\uff0c\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4ee3\u7801\u91cf","title":"4.2 \u589e\u52a0\u6570\u636e"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#43","text":"delete\u65b9\u6cd5\u5355\u4e2a\u5220\u9664\uff1amodels.Test.objects.get(name=\"Mike\").delete() delete\u65b9\u6cd5\u6279\u91cf\u5220\u9664\uff1amodels.Test.objects.filter(age=18).delete() delete\u65b9\u6cd5\u5220\u9664\u5168\u90e8\uff1amodels.Test.objects.all().delete()","title":"4.3 \u5220\u9664\u6570\u636e"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#44","text":"\u65b9\u6cd5\u4e00\uff1aupdate\u65b9\u6cd5 test = models.Test.objects.filter(name='Mike').update(age=19) \u65b9\u6cd5\u4e8c\uff1aget\u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61 test = models.Test.objects.get(name='Mike') test.age = 19 test.save() \u65b9\u6cd5\u4e09\uff1aupdate_or_create\u65b9\u6cd5 \u666e\u901a\u7684\u65b9\u6cd5\u66f4\u65b0\u6216\u521b\u5efa\u6570\u636e\uff1a defaults = { 'age' : 19 } try : obj = Test . objects . get ( name = 'John' , age = 18 ) for key , value in defaults . items (): setattr ( obj , key , value ) obj . save () except Exception : new_values = { 'name' : 'John' , 'age' : 19 } obj = Test ( ** new_values ) obj . save () \u4f7f\u7528update_or_create\u65b9\u6cd5\uff1a data , status = models . Test . objects . update_or_create ( name = 'Mike' , defaults = { 'age' : 19 }) \u8bf4\u660e \uff1a \u8be5\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u662f\u4e00\u4e2a\u521b\u5efa\u7684\u6216\u8005\u662f\u88ab\u66f4\u65b0\u7684\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u662f\u72b6\u6001\uff0c\u662f\u4e00\u4e2a\u6807\u8bc6\u662f\u5426\u521b\u5efa\u4e86\u65b0\u7684\u5bf9\u8c61\u7684\u5e03\u5c14\u503c","title":"4.4 \u4fee\u6539\u6570\u636e"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#45-qf","text":"","title":"4.5 \u4f7f\u7528Q\u548cF"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#451-f","text":"\u64cd\u4f5c\u6570\u636e\u8868\u4e2d\u7684\u67d0\u5217\u503c\uff0cF()\u5141\u8bb8Django\u5728\u672a\u5b9e\u9645\u94fe\u63a5\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u5177\u6709\u5bf9\u6570\u636e\u5e93\u5b57\u6bb5\u7684\u503c\u7684\u5f15\u7528\uff0c\u4e0d\u7528\u83b7\u53d6\u5bf9\u8c61\u653e\u5728\u5185\u5b58\u4e2d\u518d\u5bf9\u5b57\u6bb5\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u539f\u751f\u4ea7sql\u8bed\u53e5\u64cd\u4f5c\u3002 \u4f8b\u5b501\uff1a \u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u5728\u66f4\u65b0\u6570\u636e\u65f6\u9700\u8981\u5148\u4ece\u6570\u636e\u5e93\u91cc\u5c06\u539f\u6570\u636e\u53d6\u51fa\u540e\u65b9\u5728\u5185\u5b58\u91cc\uff0c\u7136\u540e\u7f16\u8f91\u67d0\u4e9b\u5c5e\u6027\uff0c\u6700\u540e\u63d0\u4ea4\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from models import Test data = Test . objects . get ( name = 'Mike' ) data . age += 1 data . save () #sql:update test set age=xxx where name='Mike'; \u4f8b\u5b502\uff1a \u4f7f\u7528F()\u4e0d\u7528\u83b7\u53d6\u5bf9\u8c61\u653e\u5728\u5185\u5b58\u4e2d\u518d\u5bf9\u5b57\u6bb5\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u539f\u751f\u4ea7sql\u8bed\u53e5\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from django.db.models import F from models import Test data = Test . objects . get ( name = \"Mike\" ) #\u60f0\u6027\u6267\u884c data . age = F ( 'age' ) + 1 #\u5e76\u6ca1\u6709\u83b7\u53d6age\u7684\u503c data . save () #sql:update test set age=age+1 where name='Mike'; \u8bf4\u660e \uff1apython\u505a\u7684\u552f\u4e00\u7684\u4e8b\u60c5\u5c31\u662f\u901a\u8fc7Django\u7684F()\u51fd\u6570\u521b\u5efa\u4e86\u4e00\u6761SQL\u8bed\u53e5\u7136\u540e\u6267\u884c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u4f7f\u7528F()\u66f4\u65b0\u6570\u636e\u4e4b\u540e\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u6570\u636e\u6765\u4f7f\u6570\u636e\u5e93\u4e2d\u7684\u503c\u4e0e\u7a0b\u5e8f\uff08\u5185\u5b58\uff09\u4e2d\u7684\u503c\u9879\u5bf9\u5e94\uff0c\u53ef\u4ee5\u4f7f\u7528data.refresh_from_db()\u6216\u8005\u4e4b\u95f4\u518d\u6b21\u8d4b\u503c\uff1adata = models.Test.objects.get(name='Mike') \u4f8b\u5b503\uff1a \u4f7f\u7528update\u914d\u5408F()\u66f4\u65b0\u591a\u6761\u6570\u636e views.py from models import Test data = Test . objects . filter ( age = 18 ) . update ( age = F ( 'age' ) + 1 ) \u8bf4\u660e \uff1a\u8fd9\u6837\u505a\u7684\u6548\u7387\u6bd4\u5c06\u5176\u53d6\u5230\u5185\u5b58\u4e2d\u540e\u518d\u4e00\u4e2a\u4e2a\u8ba1\u7b97\u503c\u518d\u66f4\u65b0\u6570\u636e\u5e93\u7684\u6548\u7387\u4f1a\u63d0\u9ad8\u975e\u5e38\u591a","title":"4.5.1 F()\u7684\u4f5c\u7528"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#452-q","text":"\u5bf9\u5bf9\u8c61\u8fdb\u884c\u590d\u6742\u67e5\u8be2\uff0c\u5e76\u652f\u6301&\uff08and\uff09,|\uff08or\uff09\uff0c~\uff08not\uff09\u64cd\u4f5c\u7b26\uff08\u64cd\u4f5c\u7b26\u4f5c\u7528\u4e8eQ\u5bf9\u8c61\u4e4b\u95f4\uff0c\u800c\u4e0d\u662fQ\u5bf9\u8c61\u4e4b\u5185\uff09 \u4f8b\u5b501\uff1a \u5f53\u6211\u4eec\u5728\u67e5\u8be2\u7684\u6761\u4ef6\u4e2d\u9700\u8981\u7ec4\u5408\u6761\u4ef6\u65f6(\u4f8b\u5982\u4e24\u4e2a\u6761\u4ef6\u201c\u4e14\u201d\u6216\u8005\u201c\u6216\u201d)\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528Q()\u67e5\u8be2\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from django.db.models import Q from models import Test q = Q ( name__startswith = \"M\" ) p = Q ( name__endswith = 'e' ) data = Test . objects . filter ( q , p ) \u8fd9\u6837\u5c31\u7ed9filter\u4f20\u9012\u4e862\u4e2aQ\u5bf9\u8c61\uff0c\u9017\u53f7\u5173\u7cfb\u662f&\uff0c\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b26\u53f7&\u6216\u8005|\u5c06\u591a\u4e2aQ()\u5bf9\u8c61\u7ec4\u5408\u8d77\u6765\u4f20\u9012\u7ed9filter()\uff0cexclude()\uff0cget()\u7b49\u51fd\u6570\u3002\u5f53\u591a\u4e2aQ()\u5bf9\u8c61\u7ec4\u5408\u8d77\u6765\u65f6\uff0cDjango\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u65b0\u7684Q() \u4f8b\u5b502\uff1a Q\u67e5\u8be2\u548c\u5173\u952e\u5b57\u67e5\u8be2\u7ec4\u5408\uff0cQ\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u5fc5\u987b\u8981\u5728\u5173\u952e\u5b57\u53c2\u6570\u4e4b\u524d\uff08python\u8bed\u6cd5\uff09\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a views.py from django.db.models import Q from models import Test data = Test . objects . filter ( Q ( name__contains = 'M' ), age = 18 ) \u8bf4\u660e \uff1aQ()\u652f\u6301\u5927\u591a\u6570filter\u652f\u6301\u7684\u53c2\u6570\u547d\u540d\u4fee\u9970\uff08__xxx\u7528\u6cd5\uff09","title":"4.5.2 Q()\u7684\u4f5c\u7528"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#46","text":"AutoField\uff1a\u81ea\u52a8\u589e\u957f\u7684IntegerField\uff0c\u901a\u5e38\u4e0d\u7528\u6307\u5b9a\uff0c\u4e0d\u6307\u5b9a\u65f6Django\u4f1a\u81ea\u52a8\u521b\u5efa\u5c5e\u6027\u540d\u4e3aid\u7684\u81ea\u52a8\u589e\u957f\u5c5e\u6027\u3002 BooleanField\uff1a\u5e03\u5c14\u5b57\u6bb5\uff0c\u503c\u4e3aTrue\u6216False\u3002 NullBooleanField\uff1a\u652f\u6301Null\u3001True\u3001False\u4e09\u79cd\u503c\u3002 CharField(max_length=\u5b57\u7b26\u957f\u5ea6)\uff1a\u5b57\u7b26\u4e32\u3002 TextField\uff1a\u5927\u6587\u672c\u5b57\u6bb5\uff0c\u4e00\u822c\u8d85\u8fc74000\u4e2a\u5b57\u7b26\u65f6\u4f7f\u7528,\u53c2\u6570max_length\u8868\u793a\u6700\u5927\u5b57\u7b26\u4e2a\u6570\u3002 IntegerField\uff1a\u6574\u6570\u3002 DecimalField(max_digits=None, decimal_places=None)\uff1a\u5341\u8fdb\u5236\u6d6e\u70b9\u6570,\u53c2\u6570max_digits\u8868\u793a\u603b\u4f4d\u6570,\u53c2\u6570decimal_places\u8868\u793a\u5c0f\u6570\u4f4d\u6570\u3002 FloatField(max_digits=None, decimal_places=None)\uff1a\u6d6e\u70b9\u6570,\u53c2\u6570max_digits\u8868\u793a\u6700\u5927\u7684\u4f4d\u6570,\u53c2\u6570decimal_places\u8868\u793a\u5c0f\u6570\u4f4d\u6570\u3002 DateField([auto_now=False | auto_now_add=False])\uff1a\u65e5\u671f\u3002 TimeField\uff1a\u65f6\u95f4\uff0c\u53c2\u6570\u540cDateField\u3002\u53c2\u6570auto_now\u8868\u793a\u6bcf\u6b21\u4fdd\u5b58\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u4e3a\u5f53\u524d\u65f6\u95f4\uff0c\u7528\u4e8e\"\u6700\u540e\u4e00\u6b21\u4fee\u6539\"\u7684\u65f6\u95f4\u6233\uff0c\u5b83\u603b\u662f\u4f7f\u7528\u5f53\u524d\u65e5\u671f\uff0c\u9ed8\u8ba4\u4e3afalse, \u53c2\u6570auto_now_add\u8868\u793a\u5f53\u5bf9\u8c61\u7b2c\u4e00\u6b21\u88ab\u521b\u5efa\u65f6\u81ea\u52a8\u8bbe\u7f6e\u5f53\u524d\u65f6\u95f4\uff0c\u7528\u4e8e\u521b\u5efa\u7684\u65f6\u95f4\u6233\uff0c\u5b83\u603b\u662f\u4f7f\u7528\u5f53\u524d\u65e5\u671f\uff0c\u9ed8\u8ba4\u4e3afalse\u3002 \u6ce8\u610f\uff1a\u53c2\u6570auto_now_add\u548cauto_now\u662f\u76f8\u4e92\u6392\u65a5\u7684\uff0c\u7ec4\u5408\u5c06\u4f1a\u53d1\u751f\u9519\u8bef\u3002 DateTimeField\uff1a\u65e5\u671f\u65f6\u95f4\uff0c\u53c2\u6570\u540cDateField\u3002 FileField\uff1a\u4e0a\u4f20\u6587\u4ef6\u5b57\u6bb5\u3002 ImageField\uff1a\u7ee7\u627f\u4e8eFileField\uff0c\u5bf9\u4e0a\u4f20\u7684\u5185\u5bb9\u8fdb\u884c\u6821\u9a8c\uff0c\u786e\u4fdd\u662f\u6709\u6548\u7684\u56fe\u7247\u3002 \u5176\u4ed6\uff1aDjango\u8fd8\u6709\u90ae\u7bb1\u3001url\u3001ip\u5730\u5740\u7b49\u5c5e\u6027\u5b57\u6bb5\uff0c\u4f46\u662f\u4e0d\u7ecf\u5e38\u4f7f\u7528\uff0c\u4e00\u822c\u5c31\u7528CharField\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f7f\u7528\u8fd9\u4e9b\u4f1a\u589e\u52a0\u5f02\u5e38\u7684\u53ef\u80fd \u6ce8\u610f\uff1aDjango\u4f1a\u81ea\u52a8\u4e3a\u8868\u521b\u5efa\u4e3b\u952e\u5b57\u6bb5 \u5982\u679c\u4f7f\u7528\u9009\u9879\u8bbe\u7f6e\u67d0\u5c5e\u6027\u4e3a\u4e3b\u952e\u5b57\u6bb5\u540e\uff0cDjango\u5c31\u4e0d\u4f1a\u518d\u521b\u5efa\u81ea\u52a8\u589e\u957f\u7684\u4e3b\u952e\u5b57\u6bb5\uff0c\u9ed8\u8ba4\u521b\u5efa\u7684\u4e3b\u952e\u5b57\u6bb5\u4e3aid\uff0c\u53ef\u4ee5\u4f7f\u7528pk\uff08primary key\uff09\u4ee3\u66ff","title":"4.6 \u5c5e\u6027\u7c7b\u578b\u4ecb\u7ecd"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#47","text":"\u5916\u952e\u5f15\u7528\uff08ForeignKey\uff09\u5b57\u6bb5\u7c7b\u578b\u2014\u2014on_delete=value value\u7684\u503c\u6709\uff1a CASCADE\uff1a\u5220\u9664\u5f15\u7528\u7684\u5bf9\u8c61\u65f6\uff0c\u4e5f\u5220\u9664\u5f15\u7528\u5b83\u7684\u5bf9\u8c61 PROTECT\uff1a\u7981\u6b62\u5220\u9664\u5f15\u7528\u7684\u5bf9\u8c61\u3002SQL\u7b49\u4ef7\u7269\uff1aRESTRICT\u3002 SET_NULL\uff1a\u5c06\u5f15\u7528\u8bbe\u7f6e\u4e3aNULL\uff08\u8981\u6c42\u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a\uff09\uff0c\u5f53\u5b57\u6bb5\u8bbe\u7f6enull=True\u624d\u53ef\u4ee5\u4f7f\u7528 SET_DEFAULT\uff1a\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u3002\u53ea\u6709\u5f53\u5b57\u6bb5\u8bbe\u7f6e\u4e86default\u53c2\u6570\u65f6\u624d\u80fd\u4f7f\u7528 SQL\u7b49\u4ef7\u7269\uff1aSET DEFAULT\u3002 SET(value \u6216\u8005 \u51fd\u6570\u8fd4\u56de\u503c)\uff1a\u8bbe\u7f6e\u7ed9\u5b9a\u503c\u3002\u8fd9\u4e2a\u4e0d\u662fSQL\u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u5b8c\u5168\u7531Django\u5904\u7406\u3002 DO_NOTHING\uff1aSQL\u7b49\u4ef7\u7269\uff1aNO ACTION\u3002 to_field:\u8bbe\u7f6e\u8981\u5173\u8054\u7684\u8868\u7684\u5b57\u6bb5 to:\u8bbe\u7f6e\u8981\u5173\u8054\u7684\u8868 \u4f8b\u5b50\uff1a class Test2 (): a = ForeignKey ( 'Test' , to_field = \"name\" ) \u8be5\u793a\u4f8b\u8868\u793a\u8868Test2\u7684a\u5c5e\u6027\u5173\u8054Test\u8868\u7684name\u5c5e\u6027","title":"4.7 \u5c5e\u6027\u7c7b\u578b\u7684\u5e38\u89c1\u5173\u952e\u5b57\u53c2\u6570\u4ecb\u7ecd"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#48-filter","text":"__exact \u7cbe\u786e\u7b49\u4e8e like \u2018aaa\u2019 __iexact \u7cbe\u786e\u7b49\u4e8e \u5ffd\u7565\u5927\u5c0f\u5199 ilike \u2018aaa\u2019 __contains \u5305\u542b like \u2018%aaa%\u2019 __icontains \u5305\u542b \u5ffd\u7565\u5927\u5c0f\u5199 ilike \u2018%aaa%\u2019\uff0c\u4f46\u662f\u5bf9\u4e8esqlite\u6765\u8bf4\uff0ccontains\u7684\u4f5c\u7528\u6548\u679c\u7b49\u540c\u4e8eicontains\u3002 __gt \u5927\u4e8e __gte \u5927\u4e8e\u7b49\u4e8e __lt \u5c0f\u4e8e __lte \u5c0f\u4e8e\u7b49\u4e8e __in \u5b58\u5728\u4e8e\u4e00\u4e2alist\u8303\u56f4\u5185 __startswith \u4ee5\u2026\u5f00\u5934 __istartswith \u4ee5\u2026\u5f00\u5934 \u5ffd\u7565\u5927\u5c0f\u5199 __endswith \u4ee5\u2026\u7ed3\u5c3e __iendswith \u4ee5\u2026\u7ed3\u5c3e\uff0c\u5ffd\u7565\u5927\u5c0f\u5199 __range \u5728\u2026\u8303\u56f4\u5185 __year \u65e5\u671f\u5b57\u6bb5\u7684\u5e74\u4efd __month \u65e5\u671f\u5b57\u6bb5\u7684\u6708\u4efd __day \u65e5\u671f\u5b57\u6bb5\u7684\u65e5 __isnull=True/False __isnull=True \u4e0e __exact=None\u7684\u533a\u522b","title":"4.8 filter\u7b49\u67e5\u8be2\u65b9\u6cd5\u53c2\u6570\u7684\u547d\u540d\u4fee\u9970\u4ecb\u7ecd"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#49-models-objectsjson","text":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528values() \u4f8b\u5b501\uff1a >>> from models import Test >>> data = list ( Test.objects.filter ( name = 'Mike' ) .values ( 'name' , 'age' )) #django2.0\u4e0b.values()\u8fd4\u56de\u7684\u65f6QuerySet\u5bf9\u8c61\uff0c\u9700\u8981\u5148\u8f6c\u6210list\u518d\u53d6\u51fa\u5b57\u5178 >>> data { 'name' : 'Mike' , 'age' : 18 } \u8bf4\u660e \uff1avalues()\u63a5\u6536\u7684\u662f\u9700\u8981\u5728dict\u91cc\u751f\u6210\u7684\u952e\uff0c\u8be5\u503c\u4e0d\u662f\u6a21\u578b\u91cc\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u800c\u662f\u6570\u636e\u5e93\u91cc\u8868\u7684\u5b57\u6bb5\u540d\u5b57 \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528model_to_dict\u65b9\u6cd5 \u4f8b\u5b502\uff1a >>> from django.forms.models import model_to_dict >>> from models import Test >>> obj = Test.objects.get ( name = 'Mike' ) >>> data = model_to_dict ( obj ) >>> data { 'name' : 'Mike' , 'age' : 18 } \u8bf4\u660e \uff1a\u8fd9\u79cd\u65b9\u6cd5\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u7684\u9700\u6c42\uff0c\u4e14\u8f93\u51fa\u4e5f\u8f83\u4e3a\u5408\u7406\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570fields\u548cexclude\u6765\u914d\u7f6e\u8f93\u51fa\u7684\u5b57\u6bb5\uff0cfileds\u6307\u5b9a\u9700\u8981\u8f93\u51fa\u7684\u5b57\u6bb5\uff0cexclude\u6307\u5b9a\u4e0d\u9700\u8981\u8f93\u51fa\u7684\u5b57\u6bb5\uff0c\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u53c2\u6570\u90fd\u63a5\u6536\u4e00\u4e2alist\u3002 \uff08\u6ce8\uff1a\u8fd9\u91cc\u7684\u5b57\u6bb5\u662fmodels\u91cc\u5b9a\u4e49\u7684\u5c5e\u6027\uff09 \u65b9\u6cd5\u4e09\uff1a\u4f7f\u7528Django\u7684\u5e8f\u5217\u5316\u5de5\u5177serializers\uff08\u5e8f\u5217\u5316\u662f\u5c06\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u4e3a\u53ef\u4fdd\u6301\u6216\u4f20\u8f93\u7684\u683c\u5f0f\u7684\u8fc7\u7a0b\uff09 >>> from django.core import serializers >>> from models import Test >>> import json >>> obj_list = Test.objects.filter ( age = 18 ) >>> data = serializers.serialize ( \"json\" ,obj_list ) >>> data '[{' model ': ' app.name ', ' pk ': ' id ', ' fields ': {' name ': ' Mike ', ' age ': 18}},...]' >>> data = json.loads ( data ) >>> data [{ 'model' : 'app.name' , 'pk' : 'id' , 'fields' : { 'name' : 'Mike' , 'age' : 18 }} ,... ] >>> data_list = [] >>> for item in data: ... temp = item.get ( 'fields' ) ... data_list.append ( temp ) >>> data_list [{ 'name' : 'Mike' , 'age' : 18 } ,... ] \u8bf4\u660e \uff1a\u8fd9\u4e2a\u65b9\u6cd5\u81f3\u5c11\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u4f60\u8981\u5e8f\u5217\u5316\u6210\u4e3a\u7684\u6570\u636e\u683c\u5f0f\uff0c\u8fd9\u91cc\u662f\u2018json\u2019(django\u652f\u6301xml\u3001json\u3001yaml\u8fd93\u79cd\uff0c\u5176\u4e2dyaml\u53ef\u80fd\u9700\u8981\u7b2c\u4e09\u65b9\u5e93\u7684\u652f\u6301)\uff0c\u7b2c\u4e8c\u4e2a\u662f\u8981\u5e8f\u5217\u5316\u7684\u6570\u636e\u5bf9\u8c61\uff0c\u6570\u636e\u901a\u5e38\u662fORM\u6a21\u578b\u7684QuerySet\uff0c\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u8be5\u65b9\u6cd5\u8fd8\u63a5\u6536\u4e00\u4e2afields\u5173\u952e\u5b57(tuple or list)\u53c2\u6570\uff0c\u7528\u4e8e\u5e8f\u5217\u5316\u6307\u5b9a\u7684\u5b57\u6bb5\uff0c\u5982fields=('name','age'),\u6211\u4eec\u901a\u5e38\u53ea\u9700\u8981\u7ed3\u679c\u91cc\u952efields\u5bf9\u5e94\u7684\u503c\u3002 \u6ce8\u610f\uff1a\u5982\u679cORM\u6a21\u578b\u5177\u6709\u81ea\u5b9a\u4e49\u7684\u5b57\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e8f\u5217\u5316\u5de5\u5177\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5fc5\u987b\u81ea\u5df1\u7f16\u5199\u76f8\u5e94\u90e8\u5206\u7684\u5e8f\u5217\u5316\u4ee3\u7801\u3002","title":"4.9 \u628amodels-objects\u8f6c\u6210json\u683c\u5f0f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#models_1","text":"\u6d89\u53ca\u5230\u5bf9models\u7684\u64cd\u4f5c\uff08\u589e\u52a0\u3001\u5220\u9664\u3001\u67e5\u8be2\u3001\u4fee\u6539\uff09\uff0c\u5982\u679c\u4f60\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u4f20\u5165\u7684\u503c\u662f\u5408\u6cd5\u7684\u503c\uff0c\u6700\u597d\u7528try...except\u5305\u62ec\u8d77\u6765\uff0c\u4e0d\u6d89\u53ca\u5230\u6761\u4ef6\u9650\u5236\uff08\u4f20\u5165\u53c2\u6570\uff09\u7684\u53ef\u4ee5\u4e0d\u7528\u5f02\u5e38\u5904\u7406\uff0c\u5982models.Test.objects.all()\u8fd9\u79cd \u4f7f\u7528print(str(models.Test.objects.all().query))\u53ef\u4ee5\u67e5\u770b\u6267\u884cTest.objects.all()\u65f6\u6267\u884c\u7684sql\u8bed\u53e5 \u4f7f\u7528models.Test.objects.filter(field1=xxx).values('field1','field2',...,'fieldn')\u65f6\uff0cvalues\u4e2d\u7684\u5b57\u6bb5\u662f\u6570\u636e\u5e93\u4e2d\u5b9e\u9645\u7684\u5b57\u6bb5\uff0c\u800c\u4e0d\u662fmodels\u5b9a\u4e49\u7684\u8be5\u8868\u7684\u6a21\u578b\u7684\u5b57\u6bb5\u3002 \u5982\u679cfield1\u662f\u5916\u952e\u5b57\u6bb5\uff0c\u5219models.Test.objects.filter(field1__id=xxx)\u53ef\u4ee5\u6307\u5b9a\u53ea\u5173\u8054\u5230\u539f\u8868\u7684id\u800c\u4e0d\u662f\u6574\u4e2amodel\u5bf9\u8c61 get_or_create()\u65b9\u6cd5\u6709\u4e00\u4e2adefaults\u5173\u952e\u5b57\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u5f53get\u5931\u8d25\u9700\u8981create\u65f6\uff0c\u8be5\u8868\u5bf9\u5e94\u7684models\u4e2d\u5176\u4ed6\u5c5e\u6027\u7684\u521b\u5efa\u503c\uff0cdefaults\u662f\u4e00\u4e2adict\u3002 \u5f53models\u7684\u8868\u5b9a\u4e49\u6ca1\u6709\u4e3b\u952e\u65f6\uff0c\u5982\u679c\u8981\u4f7f\u7528filter\uff0c\u5e94\u8be5\u6839\u636e\u6570\u636e\u5e93\u7684\u8868\u7ed3\u6784\u548c\u81ea\u5df1\u7684\u9700\u6c42\u6307\u5b9avalues\u5b57\u6bb5\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514dDjango\u629b\u51fa\u627e\u4e0d\u5230id\u7684\u5f02\u5e38\u60c5\u51b5 django\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6bcf\u4e00\u4e2a\u4e3b\u8868\u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u662f\u5916\u952e\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u67e5\u8be2\u5230\u6240\u6709\u5173\u4e8e\u5b50\u8868\u7684\u4fe1\u606f\uff0c\u8fd9\u4e2a\u5c5e\u6027\u7684\u540d\u5b57\u5c31\u662f\u5b50\u8868\u7684\u540d\u79f0\u5c0f\u5199\u52a0\u4e0a_set\uff0c\u6bd4\u5982\u6709teacher\u8868\u548cstudent\u8868\uff0cstudent\u8868\u6709\u4e00\u4e2a\u5916\u952e\u6307\u5411teacher\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528t = teacher.objects.get(id=1).student_set.all()\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2ateacher\u7684\u6240\u6709student\uff0c\u5982\u679c\u5728\u5b9a\u4e49student\u8868\u7684teacher\u5c5e\u6027\u7684\u65f6\u5019\u6307\u5b9a\u4e86related_name\u5173\u952e\u5b57\u53c2\u6570\u7684\u503c\uff0c\u6bd4\u5982related_name='student_teacher',\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528t = teacher.objects.get(id=1).student_teacher.all()\u83b7\u53d6\u8fd9\u4e2ateacher\u7684\u6240\u6709student \u5f53\u4e00\u5f20\u8868\u7684\u591a\u4e2a\u5b57\u6bb5\u6307\u5411\u540c\u4e00\u5f20\u8868\u65f6\uff0c\u4f1a\u51fa\u9519\u3002\u56e0\u4e3a\u7cfb\u7edf\u65e0\u6cd5\u77e5\u9053\uff0c\u901a\u8fc7\u53e6\u4e00\u5f20\u8868\uff0c\u8bbf\u95eexxx_set\u5c5e\u6027\u65f6\u8bbf\u95ee\u7684\u662f\u54ea\u4e2a\u5c5e\u6027\uff0c\u8fd9\u65f6\u5c31\u8981\u4e3a\u8fd9\u4e9b\u5b57\u6bb5\u5b9a\u4e49\u4e00\u4e2arelated_name\u5c5e\u6027\uff0c\u53e6\u5916\u4e00\u5f20\u8868\u8bbf\u95ee\u8fd9\u4e2a\u8868\u65f6\uff0c\u5c31\u4f1a\u6839\u636erelated_name\u7684\u503c\u6765\u5f97\u5230\u5404\u4e2a\u5c5e\u6027 \u4e00\u822c\u60c5\u51b5\u4e0bForeignKey('table_name')\u662f\u9ed8\u8ba4\u5173\u8054\u5230table_name\u7684id\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7to_field\u5173\u952e\u5b57\u53c2\u6570\u6539\u53d8\u8fd9\u4e00\u9ed8\u8ba4\u884c\u4e3a\u3002to_field\u7684\u4f5c\u7528\u662f\u6307\u5b9a\u88ab\u5173\u8054\u5bf9\u8c61\u7684\u7528\u4e8e\u5173\u8054\u7684\u5b57\u6bb5\uff08\u5728Django\u7684ORM\u4e2d\uff0c\u8fd9\u4e2a\u88ab\u5173\u8054\u7684\u5b57\u6bb5\u5fc5\u987b\u662f\u6709unique\u5c5e\u6027\u7684\u5b57\u6bb5\uff09\u3002\u53ef\u4ee5\u89e3\u51b3\u6570\u636e\u5e93\u8868\u7684\u5916\u952e\u5173\u8054\u7684\u5b57\u6bb5\u4e0d\u662f\u8868\u7684id\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u8d4b\u503c\u7684\u65f6\u5019\u8fd8\u662f\u9700\u8981\u8d4b\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5b57\u6bb5\u503c \u4e00\u822c\u6765\u8bf4\u5c5e\u6027f = ForeignKey('A')\u5728\u6570\u636e\u5e93\u751f\u6210\u8868\u7684\u65f6\u5019\uff0c\u8be5\u6a21\u578b\u7684f\u5c5e\u6027\u4f1a\u5bf9\u5e94\u6570\u636e\u5e93\u8be5\u8868\u7684f_id\u5b57\u6bb5\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u8ba9\u6570\u636e\u5e93\u8868\u7684\u5b57\u6bb5\u4e5f\u662ff\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u5b9a\u4e49\u5c5e\u6027f\u7684\u65f6\u5019\u52a0\u4e00\u4e2a\u5173\u952e\u5b57\u53c2\u6570db_column='f',\u8fd9\u6837\u6570\u636e\u5e93\u91cc\u9762\u8be5\u6a21\u578b\u5bf9\u5e94\u7684\u8868\u7684\u5b57\u6bb5\u5c31\u662ff\u4e86","title":"\u4e94\u3001models\u7684\u6ce8\u610f\u8981\u70b9"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/Django%E7%9A%84ORM/#djangosql","text":"\u5c3d\u7ba1ORM\u5f88\u597d\u7528\uff0c\u5355\u5f88\u591a\u60c5\u51b5\u4e0b\u6709\u5f88\u5927\u5c40\u9650\u6027\uff0c\u5e38\u5e38\u8fd8\u662f\u4f1a\u9700\u8981\u7528\u5230\u539f\u751fsql\u67e5\u8be2\u3002\u4e0b\u9762\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u7528\u7684django\u539f\u751fsql\u67e5\u8be2\u5c01\u88c5\u7684\u65b9\u6cd5 def insert ( sql , params ): result = { 'status' : True } cursor = connection . cursor () try : rowcount = cursor . execute ( sql , params ) except Exception as e : result [ 'status' ] = False else : if not rowcount : result [ 'status' ] = False else : transation . commit () finally : cursor () . close () return result def query ( sql , params ): \"\"\" \u8fd4\u56de\u4e00\u884c\u6570\u636e :param sql: sql\u8bed\u53e5 :param params: sql\u8bed\u53e5\u53c2\u6570 :return: \u4f8b\u5982\uff1a{\"id\": id, \"username\": 'username', \"first_name\": 'first_name'} \"\"\" result = { 'status' : True } cursor = connection . cursor () try : cursor . execute ( sql , params ) except Exception as e : result [ 'status' ] = False print str ( e . message ) else : if not rowcount : result [ 'status' ] = False else : desc = cursor . description data_dict = dict ( zip ([ col [ 0 ] for col in desc ], cursor . fetchone ())) result [ 'data' ] = data_dict finally : cursor . close () return result def queryAll ( sql ): \"\"\" \u8fd4\u56de\u5168\u90e8\u6570\u636e :param sql: sql\u8bed\u53e5 :return: \u4f8b\u5982\uff1a[{\"id\": id, \"username\": 'username', \"first_name\": 'first_name'}] \"\"\" result = { 'status' : True } cursor = connection . cursor () try : cursor . execute ( sql ) except Exception as e : result [ 'status' ] = False else : if not rowcount : result [ 'status' ] = False else : desc = cursor . description object_list = [ dict ( zip ([ col [ 0 ] for col in desc ], row )) for row in cursor . fetchall () ] finally : cursor . close () return object_list","title":"\u516d\u3001Django\u4e2d\u4f7f\u7528\u539f\u751fSQL\u64cd\u4f5c\u6570\u636e\u5e93"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/GO%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%BB%93%E6%9E%84%E4%BD%93%E6%96%B9%E6%B3%95%E5%92%8Cinterface/","text":"\u5173\u4e8eGo\u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u65b9\u6cd5\u548c\u63a5\u53e3 \u00b6 \u505aGo\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9047\u5230Go\u8bed\u8a00\u4e2d\u7684\u7ed3\u6784\u4f53\u65b9\u6cd5\u548cinterface\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u53d1\u73b0\u4e24\u8005\u4e4b\u95f4\u770b\u8d77\u6765\u5f88\u50cf\uff0c\u4f46\u7528\u8d77\u6765\u5374\u4e0d\u4e00\u6837\uff0c\u7ecf\u8fc7\u5927\u91cf\u7684\u8d44\u6599\u67e5\u9605\u548c\u601d\u8003\uff0c\u6574\u7406\u548c\u8bb0\u5f55\u4e86\u5173\u4e8e\u7ed3\u6784\u4f53\u65b9\u6cd5\u548cinterface\u7684\u4e00\u4e9b\u7406\u89e3\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u4e00\u4e9b\u4eba\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\u548c\u7528\u6cd5\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u7684\u4f8b\u5b50\u548c\u4f8b\u5b50\u4e2d\u8868\u73b0\u7684\u95ee\u9898 \u4e00\u3001\u7ed3\u6784\u4f53\u65b9\u6cd5 \u00b6 \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3aPerson\u7684\u7ed3\u6784\u4f53\uff0c\u6211\u4eec\u6682\u65f6\u53ef\u628a\u5b83\u89c6\u4e3aPerson\u7c7b type Person struct { name string } \u5b83\u53ea\u6709\u4e00\u4e2aname\u6210\u5458\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9name\u8fd9\u4e2a\u6210\u5458\u53d8\u91cf\u8fdb\u884cset\u548cget\uff0c\u7528Java\u91cc\u9762\u5c31\u662f\u5b9a\u4e49getName\u548csetName\u65b9\u6cd5\uff1b\u5728GO\u91cc\u9762\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0GetName\u65b9\u6cd5\uff1a func ( p Person ) GetName () string { return p . name } \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53bb\u8fd9\u6837\u5b9a\u4e49SetName\u65b9\u6cd5 func ( p Person ) SetName ( name string ) { p . name = name } \u6211\u4eec\u5199\u4e00\u4e2a\u4f8b\u5b50\u53bb\u5b9e\u4f8b\u5316Person\u7c7b\u5e76\u4e14\u8c03\u7528GetName\u548cSetName\u65b9\u6cd5 func main () { var Tom Person // \u58f0\u660e\u4e00\u4e2aPerson Tom . SetName ( \"Tom\" ) fmt . Println ( Tom . GetName ()) } \u8fd0\u884c\u4ee3\u7801\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go silvers@HP-ZHAN:~/Desktop$ \u7ed3\u679c\u4ec0\u4e48\u4e5f\u6ca1\u6709\u6253\u5370\uff0c\u6211\u4eec\u5148\u4e0d\u6025\u7740\u89e3\u91ca\uff0c\u6211\u4eec\u5c1d\u8bd5\u628a\u521a\u521a\u5b9a\u4e49\u7684SetName\u65b9\u6cd5\u6539\u4e00\u4e0b\uff1a func ( p * Person ) SetName ( name string ) { p . name = name } \u548c\u521a\u521a\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f\u6211\u4eec\u628a\u65b9\u6cd5\u7684\u63a5\u6536\u8005\uff08\u6216\u8005\u53eb\u65b9\u6cd5\u7684\u7ed1\u5b9a\u5bf9\u8c61/\u76ee\u6807\uff09\u6539\u6210\u4e86Person\u7c7b\u578b\u7684\u6307\u9488\uff0c\u7ecf\u5e38\u7528C\u8bed\u8a00\u7684\u4eba\u53ef\u80fd\u9a6c\u4e0a\u660e\u767d\u4e86\u521a\u521a\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6253\u5370\u4efb\u4f55\u6570\u636e\uff0c\u4e0b\u9762\u6211\u4eec\u7ee7\u7eed\u53bb\u8fd0\u884c\u4e00\u4e0b\u4ee3\u7801\uff0c\u7ed3\u679c\u5982\u4e0b silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go Tom silvers@HP-ZHAN:~/Desktop$ \u6211\u4eecSetName\u65b9\u6cd5\u4f7f\u7528\u4e86Person\u7c7b\u578b\u7684\u6307\u9488\u4f5c\u4e3a\u63a5\u6536\u8005\uff0c\u6216\u8005\u8bf4SetName\u548cPerson\u7c7b\u578b\u7684\u6307\u9488\u7ed1\u5b9a\u540e\uff0c\u8fd4\u56de\u4e86\u671f\u671b\u7684\u7ed3\u679c\u3002\u4e0b\u9762\u6211\u5bf9\u6b64\u8fdb\u884c\u4e00\u4e9b\u89e3\u91ca\uff1a \u7ad9\u5728\u9762\u5411\u5bf9\u8c61\u7684\u89d2\u5ea6\u8bf4\uff0c\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u53ef\u4ee5\u8bfb/\u5199\u672c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0cjava\u4e2d\uff0c\u7c7b\u628a\u6210\u5458\u53d8\u91cf\u548c\u65b9\u6cd5\u90fd\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u5f88\u5bb9\u6613\u7684\u5b9e\u73b0\u4e86\u5bf9\u6210\u5458\u53d8\u91cf\u8bfb\u53d6\u548c\u4fee\u6539\u63a7\u5236\uff0c\u4f46GO\u91cc\u9762\u6ca1\u6709\u7c7b\u7684\u6982\u5ff5\uff0c\u5b83\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u7c7b\u7684\u6982\u5ff5\uff0c\u4f46\u7ed3\u6784\u4f53\u91cc\u9762\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49\u65b9\u6cd5\uff0c\u56e0\u6b64GO\u4e0d\u80fd\u5411java\u4e00\u6837\u628a\u5b9e\u73b0\u6210\u5458\u65b9\u6cd5\u548c\u6210\u5458\u53d8\u91cf\u5c01\u88c5\u5728\u4e00\u8d77\uff0cGO\u91c7\u7528\u7684\u662f\u7c7b\u4f3c\u4e8e\u201c\u7ed1\u5b9a\u201d\u7684\u7b56\u7565\uff0c\u4f8b\u5982\u521a\u521a\u4e3e\u4f8b\u7684: func (p Person) SetName() { p.name = name } \u8fd9\u79cd\u5206\u79bb\u5f0f\u7684\u2018\u6210\u5458\u65b9\u6cd5\u2019\u8bbf\u95ee\u6210\u5458\u53d8\u91cf\u5fc5\u7136\u4f1a\u4ea7\u751f\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u95ee\u9898\uff0c\u6ce8\u610f\u5230\u5b9e\u9645\u8c03\u7528\u7ed3\u6784\u4f53\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5148\u58f0\u660e\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\uff0c\u7136\u540e\u76f4\u63a5\u4f7f\u7528\u2018.\u2019\u64cd\u4f5c\u7b26\u8c03\u7528\u7ed3\u6784\u4f53\u65b9\u6cd5\uff1a var Tom Person // \u58f0\u660e\u4e00\u4e2aPerson Tom . SetName ( \"Tom\" ) \u8fd9\u4e2aTom\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u662fmain\u65b9\u6cd5\u5185\uff0c\u8c03\u7528SetName\u65b9\u6cd5\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u628aTom\u5f53\u4f5c\u5b9e\u53c2\u4f20\u9012\u7ed9SetName\u65b9\u6cd5\uff0c\u8fd9\u65f6SetName\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u60f3\u8c61\u6210\u662f SetName(Tom, \"Tom\") \u6362\u6210\u8fd9\u6837\u5c31\u597d\u7406\u89e3\u4e86\uff0cTom\u662f\u5b9e\u53c2\uff0c\u800cSetName\u65b9\u6cd5\u7684\u4fee\u6539\u7684\u662f\u5f62\u53c2p\u7684name\u5c5e\u6027\uff0c\u8fd9\u79cd\u503c\u4f20\u9012\u7684\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u53c2Tom\uff0c\u4e5f\u5c31\u662f\u8bf4Tom\u4f20\u9012\u5230SetName\u65b9\u6cd5\u7684\u65f6\u5019\uff0cSetName\u62f7\u8d1d\u4e86\u4e00\u4efdTom\u7684\u5185\u5bb9\u5230p\u53d8\u91cf\uff0c\u6240\u4ee5\u4fee\u6539\u7684\u64cd\u4f5c\u4e4b\u4fee\u6539\u4e86\u62f7\u8d1d\u7684\u5185\u5bb9\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u53c2Tom\uff0c\u6240\u4ee5\u6211\u4eec\u7b2c\u4e00\u6b21\u6253\u5370\u7684\u65f6\u5019\u4ec0\u4e48\u4e5f\u6ca1\u6709\u6253\u5370\u51fa\u6765\u3002 \u7ec6\u5fc3\u7684\u670b\u53cb\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u7b2c\u4e8c\u6b21\u7684\u6253\u5370\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8c03\u7528SetName\u7684\u5f62\u5f0f\u6ca1\u6709\u53d8\uff0c\u8fd8\u662f\uff1a var Tom Person // \u58f0\u660e\u4e00\u4e2aPerson Tom . SetName ( \"Tom\" ) \u6309\u7167\u521a\u521a\u7684\u7406\u89e3\uff0cSetName\u65b9\u6cd5\u5e94\u8be5\u63a5\u6536\u4e00\u4e2aPerson\u7c7b\u578b\u7684\u6307\u9488\uff0c\u4f46\u6211\u4eec\u8fd9\u91cc\u8c03\u7528\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u6307\u9488\uff0c\u6211\u4eec\u8fd8\u662fPerson\u7c7b\u578b\u7684Tom\u53d8\u91cf\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u7c7b\u578b\u4e0d\u5c31\u4e0d\u5339\u914d\u4e86\u5417\uff1f\u6211\u4eec\u600e\u4e48\u53ef\u4ee5\u7528\u6307\u9488\u7c7b\u578b\u7684\u5f62\u53c2\u63a5\u6536\u4e00\u4e2a\u975e\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\uff1f \u5176\u5b9e\u6211\u521a\u521a\u53ea\u662f\u8fd9\u6837\u7c7b\u6bd4\uff0c\u8bd5\u56fe\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\uff0c\u5e76\u4e0d\u4ee3\u8868Go\u4e00\u5b9a\u662f\u8fd9\u6837\u5b9e\u73b0\u7684\uff0c\u4f46\u5982\u679c\u4e00\u5b9a\u8981\u6309\u7167\u6211\u521a\u624d\u7684\u7c7b\u6bd4\u6765\u89e3\u91ca\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a \u5728\u4f7f\u7528Tom\u8c03\u7528SetName\u65b9\u6cd5\u7684\u65f6\u5019\uff0cGo\u81ea\u52a8\u4e3a\u6211\u4eec\u53d6\u4e86Tom\u7684\u5730\u5740\u4f20\u9012\u7ed9SetName\u3002\u8fd9\u79cd\u53d6\u5730\u5740\u7684\u64cd\u4f5c\u7684\u4ee3\u4ef7\u662f\u5f88\u5c0f\u7684\uff0c\u800c\u4e14\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u53bb\u5b9e\u73b0\u3002\u8fd9\u65f6\uff0cSetName\u7684\u53c2\u6570\u5217\u8868\u53d8\u4e3a: SetName(&Tom, \"Tom\") \u6240\u4ee5\u53ef\u4ee5\u6b63\u786e\u7684\u4f7f\u7528\u3002\u53cd\u8fc7\u6765\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\uff0c\u5982\u679c\u5b9a\u4e49\u7684\u662f func (p Person) SetName() { p.name = name } \u4f46\u662f\u8c03\u7528\u7684\u65f6\u5019\u4f7f\u7528\u6307\u9488\u4e0d\u5c31\u53ef\u4ee5\u4e86\uff1f\u5982\u6211\u4eec\u8fd9\u6837\u8c03\u7528\uff1a var Tom * Person = & Person {} Tom . SetName ( \"Tom\" ) fmt . Println ( Tom . GetName ()) \u8fd0\u884c\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go silvers@HP-ZHAN:~/Desktop$ \u7ed3\u679c\u4ee4\u4eba\u9057\u61be\u3002\u4e00\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a\u5728\u628a\u53c2\u6570\u4f20\u9012\u7ed9SetName\u7684\u65f6\u5019\uff0cGo\u53c8\u2018\u806a\u660e\u7684\u2019\u5e2e\u4f60\u628a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u503c\u53d6\u51fa\u6765\u4e86\uff0c\u540c\u65f6\u628a\u503c\u62f7\u8d1d\u4e00\u4efd\u7ed9\u5f62\u53c2p\uff0c\u6240\u4ee5\u4f60\u5bf9Tom\u7684\u4fee\u6539\u6ca1\u6709\u751f\u6548\uff0c\u4e5f\u6ca1\u6709\u5f15\u53d1\u7c7b\u578b\u9519\u8bef\u3002 \u5176\u5b9e\u7ad9\u5728\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u770b\uff0c\u4ed6\u4eec\u5e0c\u671b\u6211\u4eec\u4f7f\u7528\u6307\u9488\u63a5\u6536\u8005\u53bb\u63a7\u5236\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u7684\u53ef\u5199\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u5199\u64cd\u4f5c\u7684\u7ed3\u6784\u4f53\u65b9\u6cd5\u4f7f\u7528\u975e\u6307\u9488\u7c7b\u578b\u4f5c\u4e3a\u63a5\u6536\u8005\uff0c\u6216\u8005\u5904\u4e8e\u8282\u7ea6\u5185\u5b58\u8003\u8651\uff0c\u53ef\u80fd\u4e5f\u4f1a\u5b9a\u4e49\u4e00\u4e9b\u4f7f\u7528\u6307\u9488\u7c7b\u578b\u4f5c\u4e3a\u63a5\u6536\u8005\u7684\u65b9\u6cd5\u3002 \u4e8c\u3001\u5173\u4e8einterface \u00b6 \u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e0bgo\u91cc\u9762\u7684interface \u9996\u5148\u6211\u4eec\u65b0\u5b9a\u4e49\u4e00\u4e2ainterface type Student interface { GetClass () string SetClass ( class string ) } \u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\uff1a type Person struct { name string class string } \u7136\u540e\u6211\u4eec\u5b9e\u73b0Student\u8fd9\u4e2ainterface\uff0c\u6709\u4e86\u4e0a\u9762\u7684\u77e5\u8bc6\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u51faget\u65b9\u6cd5\u548c\u6070\u5f53\u7684set\u65b9\u6cd5 func ( p Person ) GetClass () string { return p . class } func ( p * Person ) SetClass ( class string ) { p . class = class } \u4e0b\u9762\u6211\u4eec\u5728main\u91cc\u9762\u8c03\u7528 func main (){ var Tom Student = Person {} Tom . SetClass ( \"12\" ) fmt . Println ( Tom . GetClass ()) } \u63a5\u7740\u6211\u4eec\u8fd0\u884c\u4e00\u4e0b\u4ee3\u7801\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go # command-line-arguments ./Go_Understandable.go:42: cannot use Person literal ( type Person ) as type Student in assignment: Person does not implement Student ( SetClass method has pointer receiver ) silvers@HP-ZHAN:~/Desktop$ \u53d1\u73b0\u62a5\u9519\u4e86\uff0c\u67e5\u770b\u539f\u56e0\uff1aPerson does not implement Student (SetClass method has pointer receiver)\uff0c\u610f\u601d\u5c31\u662fPerson\u6ca1\u6709\u5b9e\u73b0Student\u63a5\u53e3\uff0c\u5176\u4e2d\u8fd8\u6307\u51fa\u4e86SetClass\u9700\u8981\u2018\u7ed1\u5b9a\u2019\u7684\u662f\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u8005\u3002\u6309\u7167\u7b2c\u4e00\u8282\u7684\u7406\u89e3\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u7ed3\u6784\u4f53\u53d8\u91cf\u8c03\u7528SetClass\u65b9\u6cd5\u5e94\u8be5\u6ca1\u6709\u95ee\u9898\uff0c\u5982\u4e0b\uff1a func main (){ var p = Person {} var Tom = p Tom . SetClass ( \"12\" ) fmt . Println ( Tom . GetClass ()) } \u7ed3\u679c\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go 12 silvers@HP-ZHAN:~/Desktop$ \u7b26\u5408\u9884\u671f\u3002\u4f46\u4e3a\u4ec0\u4e48\u6362\u6210interface\u5c31\u4e0d\u884c\u4e86\u5462\uff1f \u518d\u770b\u4e00\u4e2a\u8c03\u7528\u7684\u4f8b\u5b50\uff1a func main (){ var p = & Person {} var Tom Student = p Tom . SetClass ( \"12\" ) fmt . Println ( Tom . GetClass ()) } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go 12 silvers@HP-ZHAN:~/Desktop$ \u7ed3\u679c\u6b63\u786e\uff0c\u6211\u4eec\u53d1\u73b0\u4e24\u6b21\u7684\u4e0d\u540c\u70b9\u4ec5\u4ec5\u5728\u4e0e\u8c03\u7528SetClass\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u8c03\u7528\u8005\u662f\u4e00\u4e2a\u6307\u9488\u8fd8\u662f\u4e00\u4e2ainterface\u53d8\u91cf\u3002\u4e0b\u9762\u6211\u5c1d\u8bd5\u8fdb\u884c\u4e00\u4e9b\u89e3\u91ca\uff1a \u6211\u4eec\u628a\u521d\u59cb\u5316\u7684\u7ed3\u6784\u4f53\u8d4b\u503c\u7ed9interface\u7684\u65f6\u5019\uff1a var Tom Student = Person{} \u5b9e\u9645\u4e0a\u8fdb\u884c\u4e86\u4e00\u6b21\u503c\u7684\u62f7\u8d1d\uff0c\u8fd9\u6761\u8bed\u53e5\u6267\u884c\u5b8c\u540e\uff0c\u5185\u5b58\u91cc\u73b0\u5728\u5b58\u5728\u4e24\u4efd\u521d\u59cb\u5316\u540e\u7684Person\uff0c\u4e00\u4e2a\u662f\u8d4b\u503c\u64cd\u4f5c\u4e4b\u524d\u521b\u5efa\u7684Person\u7c7b\u578b\u7684\u533f\u540d\u53d8\u91cf\uff0c\u53e6\u4e00\u4e2a\u662f\u8d4b\u503c\u64cd\u4f5c\u62f7\u8d1d\u7684Person\u3002\u8c03\u7528\u7684\u65f6\u5019\uff0c\u6309\u7167\u7b2c\u4e00\u8282\u7684\u7c7b\u6bd4\uff0cSetClass\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u7684\u5e94\u8be5\u662f\u8fd9\u6837\u7684SetClass(&Tom, \"12\")\uff0c\u95ee\u9898\u5c31\u51fa\u73b0\u5728\u8fd9\u91cc\u4e86\uff1a\u9488\u5bf9\u4e8e\u62f7\u8d1d\u7684Tom\uff08\u5185\u5bb9\u662fPerson\uff09\uff0c\u6211\u4eec\u5bf9\u5b83\u7684\u4efb\u4f55\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230\u6211\u4eec\u6700\u539f\u59cb\u7684Person\uff08\u8d4b\u503c\u524d\u521b\u5efa\u7684Person\u7c7b\u578b\u7684\u533f\u540d\u53d8\u91cf\uff09\uff0c\u8fd9\u548c\u4e0a\u4e00\u8282\u8c08\u5230\u7684\u201c\u7ed3\u6784\u4f53\u65b9\u6cd5\u901a\u8fc7\u8bbe\u5b9a\u63a5\u6536\u8005\u662f\u6307\u9488\u7c7b\u578b\u8fd8\u662f\u666e\u901a\u7ed3\u6784\u4f53\u7c7b\u578b\u6765\u63a7\u5236\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u7684\u5199\u5165\u6743\u9650\u201d\u8fd9\u4e00\u8bbe\u8ba1\u903b\u8f91\u51b2\u7a81\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u5728\u8fd9\u91cc\u5c31\u62a5\u9519\u4e86\u3002 \u800c\u4f7f\u7528\uff1a var p = &Person{} var Tom Student = p \u8fd9\u79cd\u60c5\u51b5\uff0c\u5b9e\u9645\u4e0a\u4e5f\u8fdb\u884c\u4e86\u4e00\u6b21\u62f7\u8d1d\u64cd\u4f5c\uff0c\u53ea\u662f\u8fd9\u6b21\u62f7\u8d1d\u7684\u5185\u5bb9\u662f\u6307\u5411Person\u7ed3\u6784\u4f53\u521d\u59cb\u5316\u540e\u7684\u5730\u5740\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c*Tom\u548c*p\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff09\uff0c\u6240\u4ee5\uff0c\u5bf9\u4e8eTom\u7684\u64cd\u4f5c\u540c\u6837\u53ef\u4ee5\u4f5c\u7528\u4e8ep\uff0c\u7b26\u5408\u201c\u7ed3\u6784\u4f53\u65b9\u6cd5\u901a\u8fc7\u8bbe\u5b9a\u63a5\u6536\u8005\u662f\u6307\u9488\u7c7b\u578b\u8fd8\u662f\u666e\u901a\u7ed3\u6784\u4f53\u7c7b\u578b\u6765\u63a7\u5236\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u7684\u5199\u5165\u6743\u9650\u201d\u8fd9\u4e00\u8bbe\u8ba1\u903b\u8f91\uff0c\u56e0\u6b64\u8fd9\u79cd\u7528\u6cd5\u53ef\u884c\u3002","title":"\u5173\u4e8eGo\u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u65b9\u6cd5\u548c\u63a5\u53e3"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/GO%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%BB%93%E6%9E%84%E4%BD%93%E6%96%B9%E6%B3%95%E5%92%8Cinterface/#go","text":"\u505aGo\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9047\u5230Go\u8bed\u8a00\u4e2d\u7684\u7ed3\u6784\u4f53\u65b9\u6cd5\u548cinterface\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u53d1\u73b0\u4e24\u8005\u4e4b\u95f4\u770b\u8d77\u6765\u5f88\u50cf\uff0c\u4f46\u7528\u8d77\u6765\u5374\u4e0d\u4e00\u6837\uff0c\u7ecf\u8fc7\u5927\u91cf\u7684\u8d44\u6599\u67e5\u9605\u548c\u601d\u8003\uff0c\u6574\u7406\u548c\u8bb0\u5f55\u4e86\u5173\u4e8e\u7ed3\u6784\u4f53\u65b9\u6cd5\u548cinterface\u7684\u4e00\u4e9b\u7406\u89e3\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u4e00\u4e9b\u4eba\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\u548c\u7528\u6cd5\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u7684\u4f8b\u5b50\u548c\u4f8b\u5b50\u4e2d\u8868\u73b0\u7684\u95ee\u9898","title":"\u5173\u4e8eGo\u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u65b9\u6cd5\u548c\u63a5\u53e3"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/GO%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%BB%93%E6%9E%84%E4%BD%93%E6%96%B9%E6%B3%95%E5%92%8Cinterface/#_1","text":"\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3aPerson\u7684\u7ed3\u6784\u4f53\uff0c\u6211\u4eec\u6682\u65f6\u53ef\u628a\u5b83\u89c6\u4e3aPerson\u7c7b type Person struct { name string } \u5b83\u53ea\u6709\u4e00\u4e2aname\u6210\u5458\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9name\u8fd9\u4e2a\u6210\u5458\u53d8\u91cf\u8fdb\u884cset\u548cget\uff0c\u7528Java\u91cc\u9762\u5c31\u662f\u5b9a\u4e49getName\u548csetName\u65b9\u6cd5\uff1b\u5728GO\u91cc\u9762\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0GetName\u65b9\u6cd5\uff1a func ( p Person ) GetName () string { return p . name } \u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53bb\u8fd9\u6837\u5b9a\u4e49SetName\u65b9\u6cd5 func ( p Person ) SetName ( name string ) { p . name = name } \u6211\u4eec\u5199\u4e00\u4e2a\u4f8b\u5b50\u53bb\u5b9e\u4f8b\u5316Person\u7c7b\u5e76\u4e14\u8c03\u7528GetName\u548cSetName\u65b9\u6cd5 func main () { var Tom Person // \u58f0\u660e\u4e00\u4e2aPerson Tom . SetName ( \"Tom\" ) fmt . Println ( Tom . GetName ()) } \u8fd0\u884c\u4ee3\u7801\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go silvers@HP-ZHAN:~/Desktop$ \u7ed3\u679c\u4ec0\u4e48\u4e5f\u6ca1\u6709\u6253\u5370\uff0c\u6211\u4eec\u5148\u4e0d\u6025\u7740\u89e3\u91ca\uff0c\u6211\u4eec\u5c1d\u8bd5\u628a\u521a\u521a\u5b9a\u4e49\u7684SetName\u65b9\u6cd5\u6539\u4e00\u4e0b\uff1a func ( p * Person ) SetName ( name string ) { p . name = name } \u548c\u521a\u521a\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f\u6211\u4eec\u628a\u65b9\u6cd5\u7684\u63a5\u6536\u8005\uff08\u6216\u8005\u53eb\u65b9\u6cd5\u7684\u7ed1\u5b9a\u5bf9\u8c61/\u76ee\u6807\uff09\u6539\u6210\u4e86Person\u7c7b\u578b\u7684\u6307\u9488\uff0c\u7ecf\u5e38\u7528C\u8bed\u8a00\u7684\u4eba\u53ef\u80fd\u9a6c\u4e0a\u660e\u767d\u4e86\u521a\u521a\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6253\u5370\u4efb\u4f55\u6570\u636e\uff0c\u4e0b\u9762\u6211\u4eec\u7ee7\u7eed\u53bb\u8fd0\u884c\u4e00\u4e0b\u4ee3\u7801\uff0c\u7ed3\u679c\u5982\u4e0b silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go Tom silvers@HP-ZHAN:~/Desktop$ \u6211\u4eecSetName\u65b9\u6cd5\u4f7f\u7528\u4e86Person\u7c7b\u578b\u7684\u6307\u9488\u4f5c\u4e3a\u63a5\u6536\u8005\uff0c\u6216\u8005\u8bf4SetName\u548cPerson\u7c7b\u578b\u7684\u6307\u9488\u7ed1\u5b9a\u540e\uff0c\u8fd4\u56de\u4e86\u671f\u671b\u7684\u7ed3\u679c\u3002\u4e0b\u9762\u6211\u5bf9\u6b64\u8fdb\u884c\u4e00\u4e9b\u89e3\u91ca\uff1a \u7ad9\u5728\u9762\u5411\u5bf9\u8c61\u7684\u89d2\u5ea6\u8bf4\uff0c\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u53ef\u4ee5\u8bfb/\u5199\u672c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0cjava\u4e2d\uff0c\u7c7b\u628a\u6210\u5458\u53d8\u91cf\u548c\u65b9\u6cd5\u90fd\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u5f88\u5bb9\u6613\u7684\u5b9e\u73b0\u4e86\u5bf9\u6210\u5458\u53d8\u91cf\u8bfb\u53d6\u548c\u4fee\u6539\u63a7\u5236\uff0c\u4f46GO\u91cc\u9762\u6ca1\u6709\u7c7b\u7684\u6982\u5ff5\uff0c\u5b83\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u7c7b\u7684\u6982\u5ff5\uff0c\u4f46\u7ed3\u6784\u4f53\u91cc\u9762\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49\u65b9\u6cd5\uff0c\u56e0\u6b64GO\u4e0d\u80fd\u5411java\u4e00\u6837\u628a\u5b9e\u73b0\u6210\u5458\u65b9\u6cd5\u548c\u6210\u5458\u53d8\u91cf\u5c01\u88c5\u5728\u4e00\u8d77\uff0cGO\u91c7\u7528\u7684\u662f\u7c7b\u4f3c\u4e8e\u201c\u7ed1\u5b9a\u201d\u7684\u7b56\u7565\uff0c\u4f8b\u5982\u521a\u521a\u4e3e\u4f8b\u7684: func (p Person) SetName() { p.name = name } \u8fd9\u79cd\u5206\u79bb\u5f0f\u7684\u2018\u6210\u5458\u65b9\u6cd5\u2019\u8bbf\u95ee\u6210\u5458\u53d8\u91cf\u5fc5\u7136\u4f1a\u4ea7\u751f\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u95ee\u9898\uff0c\u6ce8\u610f\u5230\u5b9e\u9645\u8c03\u7528\u7ed3\u6784\u4f53\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5148\u58f0\u660e\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\uff0c\u7136\u540e\u76f4\u63a5\u4f7f\u7528\u2018.\u2019\u64cd\u4f5c\u7b26\u8c03\u7528\u7ed3\u6784\u4f53\u65b9\u6cd5\uff1a var Tom Person // \u58f0\u660e\u4e00\u4e2aPerson Tom . SetName ( \"Tom\" ) \u8fd9\u4e2aTom\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u662fmain\u65b9\u6cd5\u5185\uff0c\u8c03\u7528SetName\u65b9\u6cd5\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u628aTom\u5f53\u4f5c\u5b9e\u53c2\u4f20\u9012\u7ed9SetName\u65b9\u6cd5\uff0c\u8fd9\u65f6SetName\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u60f3\u8c61\u6210\u662f SetName(Tom, \"Tom\") \u6362\u6210\u8fd9\u6837\u5c31\u597d\u7406\u89e3\u4e86\uff0cTom\u662f\u5b9e\u53c2\uff0c\u800cSetName\u65b9\u6cd5\u7684\u4fee\u6539\u7684\u662f\u5f62\u53c2p\u7684name\u5c5e\u6027\uff0c\u8fd9\u79cd\u503c\u4f20\u9012\u7684\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u53c2Tom\uff0c\u4e5f\u5c31\u662f\u8bf4Tom\u4f20\u9012\u5230SetName\u65b9\u6cd5\u7684\u65f6\u5019\uff0cSetName\u62f7\u8d1d\u4e86\u4e00\u4efdTom\u7684\u5185\u5bb9\u5230p\u53d8\u91cf\uff0c\u6240\u4ee5\u4fee\u6539\u7684\u64cd\u4f5c\u4e4b\u4fee\u6539\u4e86\u62f7\u8d1d\u7684\u5185\u5bb9\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u53c2Tom\uff0c\u6240\u4ee5\u6211\u4eec\u7b2c\u4e00\u6b21\u6253\u5370\u7684\u65f6\u5019\u4ec0\u4e48\u4e5f\u6ca1\u6709\u6253\u5370\u51fa\u6765\u3002 \u7ec6\u5fc3\u7684\u670b\u53cb\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u7b2c\u4e8c\u6b21\u7684\u6253\u5370\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8c03\u7528SetName\u7684\u5f62\u5f0f\u6ca1\u6709\u53d8\uff0c\u8fd8\u662f\uff1a var Tom Person // \u58f0\u660e\u4e00\u4e2aPerson Tom . SetName ( \"Tom\" ) \u6309\u7167\u521a\u521a\u7684\u7406\u89e3\uff0cSetName\u65b9\u6cd5\u5e94\u8be5\u63a5\u6536\u4e00\u4e2aPerson\u7c7b\u578b\u7684\u6307\u9488\uff0c\u4f46\u6211\u4eec\u8fd9\u91cc\u8c03\u7528\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u6307\u9488\uff0c\u6211\u4eec\u8fd8\u662fPerson\u7c7b\u578b\u7684Tom\u53d8\u91cf\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u7c7b\u578b\u4e0d\u5c31\u4e0d\u5339\u914d\u4e86\u5417\uff1f\u6211\u4eec\u600e\u4e48\u53ef\u4ee5\u7528\u6307\u9488\u7c7b\u578b\u7684\u5f62\u53c2\u63a5\u6536\u4e00\u4e2a\u975e\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\uff1f \u5176\u5b9e\u6211\u521a\u521a\u53ea\u662f\u8fd9\u6837\u7c7b\u6bd4\uff0c\u8bd5\u56fe\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\uff0c\u5e76\u4e0d\u4ee3\u8868Go\u4e00\u5b9a\u662f\u8fd9\u6837\u5b9e\u73b0\u7684\uff0c\u4f46\u5982\u679c\u4e00\u5b9a\u8981\u6309\u7167\u6211\u521a\u624d\u7684\u7c7b\u6bd4\u6765\u89e3\u91ca\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a \u5728\u4f7f\u7528Tom\u8c03\u7528SetName\u65b9\u6cd5\u7684\u65f6\u5019\uff0cGo\u81ea\u52a8\u4e3a\u6211\u4eec\u53d6\u4e86Tom\u7684\u5730\u5740\u4f20\u9012\u7ed9SetName\u3002\u8fd9\u79cd\u53d6\u5730\u5740\u7684\u64cd\u4f5c\u7684\u4ee3\u4ef7\u662f\u5f88\u5c0f\u7684\uff0c\u800c\u4e14\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u53bb\u5b9e\u73b0\u3002\u8fd9\u65f6\uff0cSetName\u7684\u53c2\u6570\u5217\u8868\u53d8\u4e3a: SetName(&Tom, \"Tom\") \u6240\u4ee5\u53ef\u4ee5\u6b63\u786e\u7684\u4f7f\u7528\u3002\u53cd\u8fc7\u6765\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\uff0c\u5982\u679c\u5b9a\u4e49\u7684\u662f func (p Person) SetName() { p.name = name } \u4f46\u662f\u8c03\u7528\u7684\u65f6\u5019\u4f7f\u7528\u6307\u9488\u4e0d\u5c31\u53ef\u4ee5\u4e86\uff1f\u5982\u6211\u4eec\u8fd9\u6837\u8c03\u7528\uff1a var Tom * Person = & Person {} Tom . SetName ( \"Tom\" ) fmt . Println ( Tom . GetName ()) \u8fd0\u884c\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go silvers@HP-ZHAN:~/Desktop$ \u7ed3\u679c\u4ee4\u4eba\u9057\u61be\u3002\u4e00\u6837\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a\u5728\u628a\u53c2\u6570\u4f20\u9012\u7ed9SetName\u7684\u65f6\u5019\uff0cGo\u53c8\u2018\u806a\u660e\u7684\u2019\u5e2e\u4f60\u628a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u503c\u53d6\u51fa\u6765\u4e86\uff0c\u540c\u65f6\u628a\u503c\u62f7\u8d1d\u4e00\u4efd\u7ed9\u5f62\u53c2p\uff0c\u6240\u4ee5\u4f60\u5bf9Tom\u7684\u4fee\u6539\u6ca1\u6709\u751f\u6548\uff0c\u4e5f\u6ca1\u6709\u5f15\u53d1\u7c7b\u578b\u9519\u8bef\u3002 \u5176\u5b9e\u7ad9\u5728\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u770b\uff0c\u4ed6\u4eec\u5e0c\u671b\u6211\u4eec\u4f7f\u7528\u6307\u9488\u63a5\u6536\u8005\u53bb\u63a7\u5236\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u7684\u53ef\u5199\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u5199\u64cd\u4f5c\u7684\u7ed3\u6784\u4f53\u65b9\u6cd5\u4f7f\u7528\u975e\u6307\u9488\u7c7b\u578b\u4f5c\u4e3a\u63a5\u6536\u8005\uff0c\u6216\u8005\u5904\u4e8e\u8282\u7ea6\u5185\u5b58\u8003\u8651\uff0c\u53ef\u80fd\u4e5f\u4f1a\u5b9a\u4e49\u4e00\u4e9b\u4f7f\u7528\u6307\u9488\u7c7b\u578b\u4f5c\u4e3a\u63a5\u6536\u8005\u7684\u65b9\u6cd5\u3002","title":"\u4e00\u3001\u7ed3\u6784\u4f53\u65b9\u6cd5"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/GO%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%BB%93%E6%9E%84%E4%BD%93%E6%96%B9%E6%B3%95%E5%92%8Cinterface/#interface","text":"\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e0bgo\u91cc\u9762\u7684interface \u9996\u5148\u6211\u4eec\u65b0\u5b9a\u4e49\u4e00\u4e2ainterface type Student interface { GetClass () string SetClass ( class string ) } \u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\uff1a type Person struct { name string class string } \u7136\u540e\u6211\u4eec\u5b9e\u73b0Student\u8fd9\u4e2ainterface\uff0c\u6709\u4e86\u4e0a\u9762\u7684\u77e5\u8bc6\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u51faget\u65b9\u6cd5\u548c\u6070\u5f53\u7684set\u65b9\u6cd5 func ( p Person ) GetClass () string { return p . class } func ( p * Person ) SetClass ( class string ) { p . class = class } \u4e0b\u9762\u6211\u4eec\u5728main\u91cc\u9762\u8c03\u7528 func main (){ var Tom Student = Person {} Tom . SetClass ( \"12\" ) fmt . Println ( Tom . GetClass ()) } \u63a5\u7740\u6211\u4eec\u8fd0\u884c\u4e00\u4e0b\u4ee3\u7801\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go # command-line-arguments ./Go_Understandable.go:42: cannot use Person literal ( type Person ) as type Student in assignment: Person does not implement Student ( SetClass method has pointer receiver ) silvers@HP-ZHAN:~/Desktop$ \u53d1\u73b0\u62a5\u9519\u4e86\uff0c\u67e5\u770b\u539f\u56e0\uff1aPerson does not implement Student (SetClass method has pointer receiver)\uff0c\u610f\u601d\u5c31\u662fPerson\u6ca1\u6709\u5b9e\u73b0Student\u63a5\u53e3\uff0c\u5176\u4e2d\u8fd8\u6307\u51fa\u4e86SetClass\u9700\u8981\u2018\u7ed1\u5b9a\u2019\u7684\u662f\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u8005\u3002\u6309\u7167\u7b2c\u4e00\u8282\u7684\u7406\u89e3\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u7ed3\u6784\u4f53\u53d8\u91cf\u8c03\u7528SetClass\u65b9\u6cd5\u5e94\u8be5\u6ca1\u6709\u95ee\u9898\uff0c\u5982\u4e0b\uff1a func main (){ var p = Person {} var Tom = p Tom . SetClass ( \"12\" ) fmt . Println ( Tom . GetClass ()) } \u7ed3\u679c\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go 12 silvers@HP-ZHAN:~/Desktop$ \u7b26\u5408\u9884\u671f\u3002\u4f46\u4e3a\u4ec0\u4e48\u6362\u6210interface\u5c31\u4e0d\u884c\u4e86\u5462\uff1f \u518d\u770b\u4e00\u4e2a\u8c03\u7528\u7684\u4f8b\u5b50\uff1a func main (){ var p = & Person {} var Tom Student = p Tom . SetClass ( \"12\" ) fmt . Println ( Tom . GetClass ()) } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a silvers@HP-ZHAN:~/Desktop$ go run Go_Understandable.go 12 silvers@HP-ZHAN:~/Desktop$ \u7ed3\u679c\u6b63\u786e\uff0c\u6211\u4eec\u53d1\u73b0\u4e24\u6b21\u7684\u4e0d\u540c\u70b9\u4ec5\u4ec5\u5728\u4e0e\u8c03\u7528SetClass\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u8c03\u7528\u8005\u662f\u4e00\u4e2a\u6307\u9488\u8fd8\u662f\u4e00\u4e2ainterface\u53d8\u91cf\u3002\u4e0b\u9762\u6211\u5c1d\u8bd5\u8fdb\u884c\u4e00\u4e9b\u89e3\u91ca\uff1a \u6211\u4eec\u628a\u521d\u59cb\u5316\u7684\u7ed3\u6784\u4f53\u8d4b\u503c\u7ed9interface\u7684\u65f6\u5019\uff1a var Tom Student = Person{} \u5b9e\u9645\u4e0a\u8fdb\u884c\u4e86\u4e00\u6b21\u503c\u7684\u62f7\u8d1d\uff0c\u8fd9\u6761\u8bed\u53e5\u6267\u884c\u5b8c\u540e\uff0c\u5185\u5b58\u91cc\u73b0\u5728\u5b58\u5728\u4e24\u4efd\u521d\u59cb\u5316\u540e\u7684Person\uff0c\u4e00\u4e2a\u662f\u8d4b\u503c\u64cd\u4f5c\u4e4b\u524d\u521b\u5efa\u7684Person\u7c7b\u578b\u7684\u533f\u540d\u53d8\u91cf\uff0c\u53e6\u4e00\u4e2a\u662f\u8d4b\u503c\u64cd\u4f5c\u62f7\u8d1d\u7684Person\u3002\u8c03\u7528\u7684\u65f6\u5019\uff0c\u6309\u7167\u7b2c\u4e00\u8282\u7684\u7c7b\u6bd4\uff0cSetClass\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u7684\u5e94\u8be5\u662f\u8fd9\u6837\u7684SetClass(&Tom, \"12\")\uff0c\u95ee\u9898\u5c31\u51fa\u73b0\u5728\u8fd9\u91cc\u4e86\uff1a\u9488\u5bf9\u4e8e\u62f7\u8d1d\u7684Tom\uff08\u5185\u5bb9\u662fPerson\uff09\uff0c\u6211\u4eec\u5bf9\u5b83\u7684\u4efb\u4f55\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230\u6211\u4eec\u6700\u539f\u59cb\u7684Person\uff08\u8d4b\u503c\u524d\u521b\u5efa\u7684Person\u7c7b\u578b\u7684\u533f\u540d\u53d8\u91cf\uff09\uff0c\u8fd9\u548c\u4e0a\u4e00\u8282\u8c08\u5230\u7684\u201c\u7ed3\u6784\u4f53\u65b9\u6cd5\u901a\u8fc7\u8bbe\u5b9a\u63a5\u6536\u8005\u662f\u6307\u9488\u7c7b\u578b\u8fd8\u662f\u666e\u901a\u7ed3\u6784\u4f53\u7c7b\u578b\u6765\u63a7\u5236\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u7684\u5199\u5165\u6743\u9650\u201d\u8fd9\u4e00\u8bbe\u8ba1\u903b\u8f91\u51b2\u7a81\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u5728\u8fd9\u91cc\u5c31\u62a5\u9519\u4e86\u3002 \u800c\u4f7f\u7528\uff1a var p = &Person{} var Tom Student = p \u8fd9\u79cd\u60c5\u51b5\uff0c\u5b9e\u9645\u4e0a\u4e5f\u8fdb\u884c\u4e86\u4e00\u6b21\u62f7\u8d1d\u64cd\u4f5c\uff0c\u53ea\u662f\u8fd9\u6b21\u62f7\u8d1d\u7684\u5185\u5bb9\u662f\u6307\u5411Person\u7ed3\u6784\u4f53\u521d\u59cb\u5316\u540e\u7684\u5730\u5740\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c*Tom\u548c*p\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff09\uff0c\u6240\u4ee5\uff0c\u5bf9\u4e8eTom\u7684\u64cd\u4f5c\u540c\u6837\u53ef\u4ee5\u4f5c\u7528\u4e8ep\uff0c\u7b26\u5408\u201c\u7ed3\u6784\u4f53\u65b9\u6cd5\u901a\u8fc7\u8bbe\u5b9a\u63a5\u6536\u8005\u662f\u6307\u9488\u7c7b\u578b\u8fd8\u662f\u666e\u901a\u7ed3\u6784\u4f53\u7c7b\u578b\u6765\u63a7\u5236\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u7684\u5199\u5165\u6743\u9650\u201d\u8fd9\u4e00\u8bbe\u8ba1\u903b\u8f91\uff0c\u56e0\u6b64\u8fd9\u79cd\u7528\u6cd5\u53ef\u884c\u3002","title":"\u4e8c\u3001\u5173\u4e8einterface"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E4%B8%AD%E7%BC%80%E5%92%8C%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95/","text":"","title":"\u4e2d\u7f00\u548c\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97\u65b9\u6cd5"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B3%E4%BA%8Ecgo%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E5%AE%9E%E8%B7%B5/","text":"","title":"\u5173\u4e8ecgo\u7684\u4f7f\u7528\u548c\u5b9e\u8df5"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/","text":"\u90e8\u5206\u5185\u5bb9\u548c\u56fe\u7247\u53c2\u8003\u300a\u738b\u9053\u6570\u636e\u7ed3\u67842020\u300b \u4e00\u3001\u56fe\u7684\u57fa\u672c\u6982\u5ff5 \u00b6 1.1 \u56fe\u7684\u5b9a\u4e49 \u00b6 \u56fe G \u7531\u9876\u70b9\u96c6 Y \u548c\u8fb9\u96c6 E \u7ec4\u6210\uff0c\u8bb0\u4e3a G=(V, E) \uff0c\u5176 \u4e2d V(G)\u8868\u793a\u56fe G \u4e2d\u9876\u70b9\u7684\u6709\u9650\u975e\u7a7a\u96c6\uff1b E(G)\u8868\u793a\u56fe G \u4e2d\u9876\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb ( \u4e5f\u5c31\u662f\u8fb9) \u96c6\u5408\u3002\u82e5 V= {V1 , V2,..., Vn}\uff0c\u5219\u7528|V|\u8868\u793a\u56fe G \u4e2d\u9876\u70b9\u7684\u4e2a\u6570\uff0c\u56fe\u7684\u9876\u70b9\u4e2a\u6570\u4e5f\u79f0\u56fe G \u7684\u9636\uff0cE = {(u,v) | u \u03b5 V, v \u03b5 V}\uff0c\u7528 |E| \u8868\u793a \u56fe G \u4e2d\u8fb9\u7684\u6761\u6570 \u6ce8\u610f\uff1a \u7ebf\u6027\u8868\u53ef\u4ee5\u662f\u7a7a\u8868\uff0c\u6811\u53ef\u4ee5\u662f\u7a7a\u6811\uff0c\u4f46\u4e0d\u5b58\u5728\u7a7a\u56fe 1.2 \u56fe\u7684\u5206\u7c7b \u00b6 1.2.1 \u6709\u5411\u56fe \u00b6 \u82e5 E \u662f\u6709\u5411\u8fb9(\u4e5f\u79f0\u5f27)\u7684\u6709\u9650\u96c6\u5408\u65f6\uff0c\u5219\u56fe G \u4e3a\u6709\u5411\u56fe \u3002 \u5f27\u662f\u9876\u70b9\u7684\u6709\u5e8f\u5bf9\uff0c\u8bb0\u4e3a< v, w >\uff0c\u5176\u4e2d v\uff0cw \u662f\u9876\u70b9\uff0c v \u79f0\u4e3a\u5f27\u5c3e\uff0cw \u79f0\u4e3a\u5f27 \u5934\uff0c< v, w >\u79f0\u4e3a\u4ece\u9876\u70b9 v \u5230\u9876\u70b9 w \u7684\u5f27\uff0c\u4e5f\u79f0 v \u90bb\u63a5\u5230 w\uff0c\u6216 w \u90bb\u63a5\u81ea \u03bd \u3002 \u5982\u4e0b\u6240\u793a\u7684\u6709\u5411\u56fe G1 \u53ef\u8868\u793a\u4e3a G1 = (V1, E1) V1={1,2,3} E1 = {< 1, 2>, <2, 1 >, <2, 3>} 1.2.2 \u65e0\u5411\u56fe \u00b6 \u82e5 E \u662f\u65e0\u5411\u8fb9 (\u7b80\u79f0 \u8fb9 )\u7684\u6709\u9650\u96c6\u5408\u65f6\uff0c\u5219\u56fe G \u4e3a\u65e0\u5411\u56fe \u3002 \u8fb9\u662f\u9876\u70b9\u7684\u65e0\u5e8f\u5bf9\uff0c\u8bb0\u4e3a ( v, w)\u6216(w, v)\uff0c\u56e0\u4e3a(v, w) = (w, v)\uff0c\u5176\u4e2d v, w \u662f\u9876 \u70b9\u3002\u53ef\u4ee5\u8bf4\u9876\u70b9 w \u548c\u9876\u70b9 v \u4e92 \u4e3a\u90bb\u63a5\u70b9\u3002\u8fb9( v, w)\u4f9d\u9644\u4e8e\u9876\u70b9 w \u548c v ,\u6216\u8005\u8bf4\u8fb9(\u03bd, w)\u548c\u9876\u70b9 v, w \u76f8\u5173\u8054\u3002 \u5982\u4e0b\u6240\u793a\u7684\u65e0\u5411\u56fe G2 \u53ef\u8868\u793a\u4e3a G2 = (V2, E2) V2= {1, 2,3,4} E2 = {(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)} 1.3 \u56fe\u7684\u6027\u8d28 \u00b6 1.3.1 \u8fde\u901a\u56fe \u00b6 \u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5\u4ece\u9876\u70b9 v \u5230\u9876\u70b9 w \u6709 \u8def\u5f84 \u5b58\u5728\uff0c\u5219\u79f0 v \u548c w \u662f\u8fde\u901a\u7684 \u3002 \u82e5\u56fe G \u4e2d\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u90fd\u662f\u8fde\u901a\u7684\uff0c\u5219\u79f0\u56fe G \u4e3a\u8fde\u901a\u56fe\uff0c\u5426\u5219\u79f0\u4e3a\u975e\u8fde\u901a\u56fe\u3002 \u82e5\u4e00\u4e2a\u56fe\u6709 n \u4e2a\u9876\u70b9\uff0c\u5e76\u4e14\u8fb9\u6570\u5c0f\u4e8e n - 1 \uff0c\u5219\u6b64\u56fe\u5fc5\u662f\u975e\u8fde\u901a\u56fe \u4e8c\u3001\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\u53ca\u57fa\u672c\u64cd\u4f5c \u00b6 \u56fe\u7684\u5b58\u50a8\u5fc5\u987b\u8981\u5b8c\u6574\u3001\u51c6\u786e\u5730\u53cd\u6620\u9876\u70b9\u96c6\u548c\u8fb9\u96c6\u7684\u4fe1\u606f \u3002 \u6839\u636e\u4e0d\u540c\u56fe\u7684\u7ed3\u6784\u548c\u7b97\u6cd5 , \u91c7\u7528\u4e0d\u540c\u7684\u5b58\u50a8\u65b9\u5f0f\u5c06\u5bf9\u7a0b\u5e8f\u7684\u6548\u7387\u4ea7\u751f\u76f8\u5f53\u5927\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u6240\u9009\u7684\u5b58\u50a8\u7ed3\u6784\u5e94\u9002\u5408\u4e8e\u6b32\u6c42\u89e3\u7684\u95ee\u9898 \u3002 \u5e38\u89c1\u7684\u56fe\u7684\u5b58\u50a8\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u90bb\u63a5\u77e9\u9635 \u3001 \u90bb\u63a5\u8868 \u3001\u90bb\u63a5\u591a\u91cd\u8868\u3001\u5341\u5b57\u94fe\u8868 2.1 \u90bb\u63a5\u77e9\u9635 \u00b6 \u6240\u8c13\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u662f\u6307\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u56fe\u4e2d\u9876\u70b9\u7684\u4fe1\u606f\uff0c\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u56fe\u4e2d\u8fb9\u7684\u4fe1\u606f\uff08\u5373\u5404\u9876\u70b9\u4e4b\u95f4\u7684\u90bb\u63a5\u5173\u7cfb\uff09\uff0c\u5b58\u50a8\u9876\u70b9\u4e4b\u95f4\u90bb\u63a5\u5173\u7cfb\u7684\u4e8c\u7ef4\u6570\u7ec4\u79f0\u4e3a\u90bb\u63a5\u77e9\u9635\u3002 \u6709\u5411\u56fe\u3001\u65e0\u5411\u56fe\u5bf9\u5e94\u7684\u90bb\u63a5\u77e9\u9635\u5982\u4e0b\u56fe\u6240\u793a \u56fe\u7684\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\u7ed3\u6784\u5b9a\u4e49\u5982\u4e0b : #define MaxVertexNum 100 //\u9876\u70b9\u6570\u76ee\u7684\u6700\u5927\u503c typedef char VertexType ; //\u9876\u70b9\u7684\u6570\u636e\u7c7b\u578b typedef int EdgeType ; //\u5e26\u6743\u56fe\u4e2d\u8fb9\u4e0a\u6743\u503c\u7684\u6570\u636e\u7c7b\u578b typedef struct { VertexType Vex [ MaxVertexNum ] ; //\u9876\u70b9\u8868 EdgeType Edge [ MaxVertexNum ] [ MaxVertexNum ] ; //\u90bb\u63a5\u77e9\u9635,\u8fb9\u8868 int vexnum , arcnum ; //\u56fe\u7684\u5f53\u524d\u9876\u70b9\u6570\u548c\u5f27\u6570 } MGraph ; 2.2 \u90bb\u63a5\u8868 \u00b6 \u6240\u8c13\u90bb\u63a5\u8868\uff0c\u662f\u6307\u5bf9\u56fe G \u4e2d\u7684\u6bcf\u4e2a\u9876\u70b9 Vi \u5efa\u7acb\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u7b2c i \u4e2a\u5355\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u8868\u793a\u4f9d\u9644\u4e8e\u9876\u70b9 Vi \u7684\u8fb9 (\u5bf9\u4e8e\u6709\u5411\u56fe\u5219\u662f\u4ee5\u9876\u70b9 Vi \u4e3a\u5c3e\u7684\u5f27)\uff0c\u8fd9\u4e2a\u5355\u94fe\u8868\u5c31\u79f0\u4e3a\u9876\u70b9 Vi \u7684\u8fb9\u8868 (\u5bf9\u4e8e\u6709\u5411\u56fe\u5219\u79f0\u4e3a\u51fa\u8fb9\u8868) \u3002 \u8fb9\u8868\u7684\u5934\u6307\u9488\u548c\u9876\u70b9\u7684\u6570\u636e\u4fe1\u606f\u91c7\u7528\u987a\u5e8f\u5b58\u50a8(\u79f0\u4e3a\u9876\u70b9\u8868)\uff0c\u6240\u4ee5\u5728\u90bb\u63a5\u8868\u4e2d\u5b58\u5728\u4e24\u79cd\u7ed3\u70b9\uff1a \u9876\u70b9\u8868\u7ed3\u70b9\u548c\u8fb9\u8868\u7ed3\u70b9 \uff0c\u5982\u4e0b\u6240\u793a \u9876\u70b9\u8868\u7ed3\u70b9\u7531\u9876\u70b9\u57df( data ) \u548c\u6307\u5411\u7b2c\u4e00\u6761\u90bb\u6309\u8fb9\u7684\u6307\u9488 ( firstarc )\u6784\u6210\uff0c\u8fb9\u8868(\u90bb\u63a5\u8868)\u7ed3\u70b9\u7531\u90bb\u63a5\u70b9\u57df( adjvex )\u548c\u6307\u5411\u4e0b\u4e00\u6761\u90bb\u63a5\u8fb9\u7684\u6307\u9488\u57df (nextarc )\u6784\u6210 \u3002 \u65e0\u5411\u56fe\u548c\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\u7684\u5b9e\u4f8b\u5206\u522b\u5982\u4e0b\u6240\u793a \u56fe\u7684\u90bb\u63a5\u8868\u5b58\u50a8\u7ed3\u6784\u5b9a\u4e49\u5982\u4e0b : #define MaxVertexNum 20 //\u56fe\u4e2d\u9876\u70b9\u6570\u76ee\u7684\u6700\u5927\u503c typedef struct ArcNode { int adjvex ; //\u9876\u70b9\u7f16\u53f7 struct ArcNode * next ; //\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u90bb\u8fb9 } ArcNode ; typedef struct VNode { VertexType data ; //\u9876\u70b9\u6570\u636e ArcNode * first ; //\u9876\u70b9\u7684\u7b2c\u4e00\u6761\u90bb\u8fb9 } VNode , AdjList [ MaxVertexNum ]; typedef struct { AdjList vertices ; int vexnum , arcnum ; //\u9876\u70b9\u603b\u6570\u548c\u8fb9\u603b\u6570 } ALGraph ; 2.3 \u56fe\u7684\u57fa\u672c\u64cd\u4f5c \u00b6 \u56fe\u7684\u57fa\u672c\u64cd\u4f5c\u662f\u72ec\u7acb\u4e8e\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\u7684\u3002\u800c\u5bf9\u4e8e\u4e0d\u540c\u7684\u5b58\u50a8\u65b9\u5f0f \uff0c \u64cd\u4f5c\u7b97\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u4f1a\u6709\u7740\u4e0d\u540c\u7684\u6027\u80fd \u3002\u5728\u8bbe\u8ba1\u5177\u4f53\u7b97\u6cd5\u7684\u5b9e\u73b0\u65f6\uff0c\u5e94\u8003\u8651\u91c7\u7528\u4f55\u79cd\u5b58\u50a8\u65b9\u5f0f\u7684\u7b97\u6cd5\u6548\u7387\u4f1a\u66f4\u9ad8 \u3002 \u56fe\u7684\u57fa\u672c\u64cd\u4f5c\u4e3b\u8981\u5305\u62ec(\u62bd\u8c61\u8003\u8651\uff0c\u5ffd\u7565\u5404\u53d8\u91cf\u7684\u7c7b\u578b\uff09: Adjacent (G, x , y ):\u5224\u65ad\u56fe G \u662f\u5426\u5b58\u5728\u8fb9< x, y>\u6216(x,y) Neighbors (G, x ) :\u5217\u51fa\u56fe G \u4e2d\u4e0e\u7ed3\u70b9 x \u90bb\u63a5\u7684\u8fb9 InsertVertex (G, x ) : \u5728\u56fe G \u4e2d\u63d2\u5165\u9876\u70b9 x DeleteVertex (G, x ) : \u4ece\u56fe G \u4e2d\u5220\u9664\u9876\u70b9 x AddEdge (G, x , y ): \u82e5\u65e0\u5411\u8fb9 (x, y) \u6216\u6709\u5411\u8fb9< x, y>\u4e0d\u5b58\u5728\uff0c\u5219\u5411\u56fe G \u4e2d\u6dfb\u52a0\u8be5\u8fb9\u3002 RemoveEdge (G, x , y ) : \u82e5\u65e0\u5411\u8fb9(x,y)\u6216\u6709\u5411\u8fb9< x, y>\u5b58\u5728\uff0c\u5219\u4ece\u56fe G \u4e2d\u5220\u9664\u8be5\u8fb9\u3002 FirstNeighbor (G, x ) : \u6c42\u56fe G \u4e2d\u9876\u70b9 x \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u82e5\u6709\u5219\u8fd4\u56de\u9876\u70b9\u53f7\u3002\u82e5 x \u6ca1\u6709\u90bb\u63a5\u70b9\u6216\u56fe\u4e2d\u4e0d\u5b58\u5728 x \uff0c\u5219\u8fd4\u56de-1 NextNeighbor (G, x , y ) :\u5047\u8bbe \u56fe G \u4e2d\u9876\u70b9 y \u662f\u9876\u70b9 x \u7684\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u8fd4\u56de\u9664 y \u5916\u9876\u70b9 x \u7684\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u7684\u9876\u70b9\u53f7\uff0c \u82e5 y \u662f x \u7684\u6700\u540e\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u5219\u8fd4\u56de-1 Get_edge_value (G , x , y ): \u83b7\u53d6\u56fe G \u4e2d\u8fb9(x,y)\u6216< x, y>\u5bf9\u5e94\u7684\u6743\u503c Set_edge_value(G , x , y , v ): \u8bbe\u7f6e\u56fe G \u4e2d\u8fb9(x,y)\u6216< x, y>\u5bf9\u5e94\u7684\u6743\u503c\u4e3a v \u4e09\u3001\u56fe\u7684\u904d\u5386 \u00b6 \u56fe\u7684\u904d\u5386\u662f\u6307\u4ece\u56fe\u4e2d\u7684\u67d0\u4e00\u9876\u70b9\u51fa\u53d1\uff0c\u6309\u7167\u67d0\u79cd\u641c\u7d22\u65b9\u6cd5\u6cbf\u7740\u56fe\u4e2d\u7684\u8fb9\u5bf9\u56fe\u4e2d\u7684\u6240\u6709\u9876\u70b9\u8bbf\u95ee\u4e00\u6b21\u4e14\u4ec5\u8bbf\u95ee\u4e00\u6b21 \u3002 \u56fe\u7684\u904d\u5386\u7b97\u6cd5\u4e3b\u8981\u6709\u4e24\u79cd\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u548c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 3.1 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 \u00b6 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22( Breadth-First-Search BFS ) \u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\u7b97\u6cd5\u3002\u57fa\u672c\u601d\u60f3\u662f\uff1a\u9996\u5148\u8bbf\u95ee\u8d77\u59cb\u9876\u70b9 v\uff0c\u63a5\u7740\u7531 v \u51fa\u53d1\uff0c\u4f9d\u6b21\u8bbf\u95ee v \u7684\u5404\u4e2a\u672a\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u9876\u70b9 W1,W2,...,Wi\uff0c\u7136\u540e\u4f9d\u6b21\u8bbf\u95ee W1 , W2,..., Wi \u7684\u6240\u6709\u672a\u88ab\u9632\u95ee\u8fc7\u7684\u90bb\u63a5\u9876\u70b9\uff1b\u518d\u4ece\u8fd9\u4e9b\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u51fa\u53d1\uff0c\u8bbf\u95ee\u5b83\u4eec\u6240\u6709\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u9876\u70b9\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u8fc7\u4e3a\u6b62 \u3002 \u82e5\u6b64\u65f6\u56fe\u4e2d\u5c1a\u6709\u9876\u70b9\u672a\u88ab\u8bbf\u95ee,\u5219\u53e6\u9009\u56fe\u4e2d\u4e00\u4e2a\u672a\u66fe\u88ab\u8bbf\u95ee\u7684\u9876\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u5230\u4e3a\u6b62 \u3002 \u5047\u8bbe\u6709\u4e0b\u56fe\u6240\u793a\u7684\u65e0\u5411\u56fe \u5047\u8bbe\u4ece a \u7ed3\u70b9\u5f00\u59cb\u8bbf\u95ee\uff0ca \u5148\u5165\u961f \u3002 \u6b64\u65f6\u961f\u5217\u975e\u7a7a\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 a \uff0c\u7531\u4e8e b \uff0cc \u4e0e a \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u8fc7\uff0c\u4e8e\u662f\u4f9d\u6b21\u8bbf\u95ee b\uff0cc \uff0c\u5e76\u5c06 b, c \u4f9d\u6b21\u5165\u961f \u3002\u961f\u5217\u975e\u7a7a\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 b \uff0c\u4f9d\u6b21\u8bbf\u95ee\u4e0e b \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 d, e \uff0c\u5e76\u5c06 d,e \u5165\u961f(\u6ce8\u610f : a \u4e0e b \u4e5f\u90bb\u63a5\uff0c\u4f46 a \u5df1\u7f6e\u8bbf\u95ee\u6807\u8bb0\uff0c\u6545\u4e0d\u518d\u91cd\u590d\u8bbf\u95ee) \u3002\u6b64\u65f6\u961f\u5217\u975e\u7a7a\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 c\uff0c\u8bbf \u95ee\u4e0e c \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 f , g\uff0c \u5e76\u5c06 f , g \u5165\u961f\u3002\u6b64\u65f6\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 d \uff0c\u4f46\u4e0e d \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9\u4e3a\u7a7a\uff0c\u6545\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u7ee7\u7eed\u53d6\u51fa\u961f\u5934\u5143\u7d20 e \uff0c\u5c06 h \u5165\u961f\u5217......\u6700\u7ec8\u53d6\u51fa\u961f\u5934\u5143\u7d20 h \u540e\uff0c \u961f\u5217\u4e3a\u7a7a\uff0c\u4ece\u800c\u5faa\u73af\u81ea\u52a8\u8df3\u51fa \u3002\u904d\u5386\u7ed3\u679c\u4e3a abcdefgh \u7b97\u6cd5\u5b9e\u73b0 \u00b6 //@Author: mrsilvers@163.com //@Date: 2021-01-06 18:07:43 #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> /*\u56fe\u76f8\u5173\u7ed3\u6784\u5b9a\u4e49*/ #define MaxVertexNum 20 typedef int VertexType ; typedef struct ArcNode { int adjvex ; //\u9876\u70b9\u7f16\u53f7 struct ArcNode * next ; //\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u90bb\u8fb9 } ArcNode ; typedef struct VNode { VertexType data ; //\u9876\u70b9\u6570\u636e ArcNode * first ; //\u9876\u70b9\u7684\u7b2c\u4e00\u6761\u90bb\u8fb9 } VNode , AdjList [ 20 ]; typedef struct { AdjList vertices ; int vexnum , arcnum ; //\u9876\u70b9\u603b\u6570\u548c\u8fb9\u603b\u6570 } ALGraph ; /*\u961f\u5217\u76f8\u5173\u7ed3\u6784\u5b9a\u4e49*/ typedef int ElemType ; //\u94fe\u961f\u5217\u5b9a\u4e49 typedef struct Qnode { ElemType data ; struct Qnode * next ; } Qnode , * Queuep ; typedef struct { Queuep front ; Queuep rear ; } linkQueue ; //\u9876\u70b9\u7ed3\u679c\u8f93\u51fa\u51fd\u6570 void visit ( ALGraph * g , int v ){ printf ( \"\u904d\u5386\u5230\u9876\u70b9\uff1a%d \\n \" , g -> vertices [ v ]. data ); } bool visited [ MaxVertexNum ]; //\u8f85\u52a9\u6570\u7ec4 linkQueue l ; //\u961f\u5217 /*\u961f\u5217\u64cd\u4f5c\u65b9\u6cd5\u5b9e\u73b0*/ //\u5e26\u5934\u8282\u70b9\u94fe\u8868\u65b9\u6cd5\u5b9e\u73b0 void InitQueue ( linkQueue & l ){ printf ( \"\u521d\u59cb\u5316\u961f\u5217... \\n \" ); l . front = l . rear = ( Queuep ) malloc ( sizeof ( Qnode )); if ( ! l . front ){ perror ( \"InitQueue:\" ); exit ( -1 ); } l . front -> next = NULL ; } void EnQueue ( linkQueue & l , ElemType d ){ printf ( \"\u5143\u7d20 %d \u5165\u961f\u5217... \\n \" , d ); Queuep p ; p = ( Queuep ) malloc ( sizeof ( Qnode )); if ( ! p ){ perror ( \"EnQueue:\" ); exit ( 1 ); } p -> next = NULL ; p -> data = d ; l . rear -> next = p ; l . rear = p ; } void DeQueue ( linkQueue & l , ElemType & d ){ printf ( \"\u5143\u7d20 %d \u51fa\u961f\u5217... \\n \" , d ); Queuep p ; if ( l . front == l . rear ){ perror ( \"DeQueue:\" ); exit ( 1 ); } p = l . front -> next ; d = p -> data ; l . front -> next = p -> next ; if ( p == l . rear ) l . rear = l . front ; free ( p ); } bool IsEmpty ( linkQueue & l ){ if ( l . front == l . rear ){ return true ; } return false ; } /*\u56fe\u7684\u64cd\u4f5c\u65b9\u6cd5\u5b9e\u73b0*/ //\u8fd4\u56de\u56feG\u4e2d\u9876\u70b9v\u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u5728G\u7684\u9876\u70b9\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6ei\uff0c\u82e5v\u6ca1\u6709\u90bb\u63a5\u70b9\u6216\u8005\u56fe\u4e2d\u4e0d\u5b58\u5728v\uff0c\u5219\u8fd4\u56de-1 int FirstNeighbor ( ALGraph & g , int v ){ VNode vv ; //\u5224\u65ad\u56feg\u662f\u5426\u5b58\u5728\u9876\u70b9v if ( v < g . vexnum && v >= 0 ){ vv = g . vertices [ v ]; if ( vv . first -> adjvex < g . vexnum ){ //\u5224\u65ad\u8be5\u8fb9\u8fde\u63a5\u7684\u9876\u70b9\u662f\u5426\u5728\u56feg\u5185 printf ( \"\u9876\u70b9 %d \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f %d \\n \" , v , vv . first -> adjvex ); return vv . first -> adjvex ; } } return -1 ; } //i\u662f\u56feG\u4e2d\u9876\u70b9v\u7684\u4e00\u4e2a\u90bb\u63a5\u70b9(\u7f16\u53f7)\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u9664(\u7f16\u53f7\u662f)\u90bb\u63a5\u70b9i\u5916\u7684\u9876\u70b9v\u7684\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u7684\u7f16\u53f7\uff0c\u82e5i\u662fv\u7684\u6700\u540e\u4e00\u4e2a\u90bb\u63a5\u70b9(\u7f16\u53f7)\uff0c\u5219\u8fd4\u56de-1 int NextNeighbor ( ALGraph & g , int v , int i ){ ArcNode arc ; VNode vv ; //\u5224\u65ad\u56feg\u662f\u5426\u5b58\u5728\u9876\u70b9v if ( v < g . vexnum && v >= 0 ){ vv = g . vertices [ v ]; arc = * ( vv . first ); //\u9876\u70b9v\u7684\u7b2c\u4e00\u6761\u90bb\u8fb9 while ( arc . next != NULL ){ if ( arc . adjvex == i ){ if ( arc . next != NULL ){ printf ( \"\u9876\u70b9 %d \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 %d \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f %d \\n \" , v , i , arc . next -> adjvex ); sleep ( 1 ); return arc . next -> adjvex ; } break ; } arc = * ( arc . next ); } } return -1 ; } //\u6839\u636e\u9876\u70b9\u6570\u636e\u8fd4\u56de\u9876\u70b9\u5728\u9876\u70b9\u8868\u4e2d\u7684\u7d22\u5f15 int getIndex ( ALGraph * g , int data ){ for ( int i = 0 ; i < g -> vexnum ; i ++ ){ if ( g -> vertices [ i ]. data == data ){ printf ( \"\u6570\u636e %d \u7684\u9876\u70b9\u5e8f\u53f7\uff1a%d \\n \" , data , i ); return i ; } } return -1 ; } //\u521b\u5efa\u56fe void CreateGraph ( ALGraph & g ){ int i , index ; int temp_data ; ArcNode * arcnode ; printf ( \"\u8bf7\u8f93\u5165\u9876\u70b9\u603b\u6570\uff0820\u4e2a\u4ee5\u5185\uff09\uff1a\" ); scanf ( \"%d\" , & ( g . vexnum )); printf ( \"\u8bf7\u8f93\u5165\u603b\u7684\u8fb9\u6570\uff08190\u6761\u4ee5\u5185\uff09\uff1a\" ); scanf ( \"%d\" , & ( g . arcnum )); printf ( \" \\n\\n \u521b\u5efa\u9876\u70b9\u6570\u636e... \\n\\n \" ); for ( i = 0 ; i < g . vexnum ; i ++ ){ printf ( \"\u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a %d \u7684\u9876\u70b9\u7684\u6570\u636e: \" , i + 1 ); scanf ( \"%d\" , & ( g . vertices [ i ]. data )); g . vertices [ i ]. first = NULL ; } printf ( \" \\n\\n \u786e\u5b9a\u9876\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u5173\u7cfb... \\n\\n \" ); for ( i = 0 ; i < g . vexnum ; i ++ ){ for ( int j = 0 ; j < g . vexnum -1 ; j ++ ){ //\u4e00\u4e2a\u9876\u70b9\u6700\u591a\u6709:\uff08\u6700\u5927\u9876\u70b9\u6570-1\uff09\u4e2a\u90bb\u63a5\u70b9 printf ( \"(%d/%d)\u8f93\u5165\u6570\u636e\u4e3a %d \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9(\u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165): \" , i + 1 , g . vexnum , g . vertices [ i ]. data ); scanf ( \"%d\" , & temp_data ); if ( temp_data == 88 ){ break ; } index = getIndex ( & g , temp_data ); arcnode = ( ArcNode * ) malloc ( sizeof ( ArcNode )); if ( ! arcnode ){ perror ( \"CreateGraph:\" ); exit ( 1 ); } arcnode -> adjvex = index ; //\u5934\u63d2\u6cd5\u5efa\u7acb\u94fe\u8868 arcnode -> next = g . vertices [ i ]. first ; g . vertices [ i ]. first = arcnode ; } } printf ( \"\u56fe\u521b\u5efa\u5b8c\u6210... \\n\\n \" ); } //\u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\u6838\u5fc3 void BFS ( ALGraph * g , int v ){ int w ; visit ( g , v ) ; visited [ v ] = true ; EnQueue ( l , v ); while ( ! IsEmpty ( l )){ DeQueue ( l , v ); for ( w = FirstNeighbor ( * g , v ); w >= 0 ; w = NextNeighbor ( * g , v , w )){ if ( ! visited [ w ]){ visit ( g , w ); visited [ w ] = true ; EnQueue ( l , w ); } } } } //\u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\u5b9e\u73b0 void BFSTraverse ( ALGraph g ){ printf ( \"\u5f00\u59cb\u904d\u5386\u56fe\uff08\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff09... \\n\\n \" ); int i ; for ( i = 0 ; i < g . vexnum ; i ++ ){ visited [ i ] = false ; } InitQueue ( l ); for ( i = 0 ; i < g . vexnum ; i ++ ){ if ( ! visited [ i ]) BFS ( & g , i ); } } int main (){ ALGraph g ; CreateGraph ( g ); BFSTraverse ( g ); return 0 ; } \u7531\u4e8e\u4f7f\u7528\u4e86\u5f15\u7528\u7c7b\u578b\uff0c\u4ee3\u7801\u9700\u4fdd\u5b58\u4e3a.cpp\u6587\u4ef6\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u7ed3\u679c\u5982\u4e0b silvers@HP-ZHAN:/tmp$ ./testt \u8bf7\u8f93\u5165\u9876\u70b9\u603b\u6570\uff0820\u4e2a\u4ee5\u5185\uff09\uff1a6 \u8bf7\u8f93\u5165\u603b\u7684\u8fb9\u6570\uff08190\u6761\u4ee5\u5185\uff09\uff1a7 \u521b\u5efa\u9876\u70b9\u6570\u636e... \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 1 \u7684\u9876\u70b9\u7684\u6570\u636e: 1 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 2 \u7684\u9876\u70b9\u7684\u6570\u636e: 2 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 3 \u7684\u9876\u70b9\u7684\u6570\u636e: 3 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 4 \u7684\u9876\u70b9\u7684\u6570\u636e: 4 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 5 \u7684\u9876\u70b9\u7684\u6570\u636e: 5 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 6 \u7684\u9876\u70b9\u7684\u6570\u636e: 6 \u786e\u5b9a\u9876\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u5173\u7cfb... ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 6 \u6570\u636e 6 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a5 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 \u56fe\u521b\u5efa\u5b8c\u6210... \u5f00\u59cb\u904d\u5386\u56fe\uff08\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff09... \u521d\u59cb\u5316\u961f\u5217... \u904d\u5386\u5230\u9876\u70b9\uff1a1 \u5143\u7d20 0 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 0 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a4 \u5143\u7d20 3 \u5165\u961f\u5217... \u9876\u70b9 0 \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 3 \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a2 \u5143\u7d20 1 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 3 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u5143\u7d20 3 \u51fa\u961f\u5217... \u9876\u70b9 1 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a5 \u5143\u7d20 4 \u5165\u961f\u5217... \u5143\u7d20 1 \u51fa\u961f\u5217... \u9876\u70b9 4 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a3 \u5143\u7d20 2 \u5165\u961f\u5217... \u5143\u7d20 2 \u51fa\u961f\u5217... \u9876\u70b9 2 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a6 \u5143\u7d20 5 \u5165\u961f\u5217... \u5143\u7d20 5 \u51fa\u961f\u5217... \u9876\u70b9 5 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 5 silvers@HP-ZHAN:/tmp$ \u8fd9\u7ec4\u8f93\u5165\u521b\u5efa\u7684\u56fe\u6b63\u662f\u524d\u97622.2\u8282\u7684\u6709\u5411\u56feG\uff0c\u7a0b\u5e8f\u91cc\u9762\u4f7f\u752888\u8868\u793a\u505c\u6b62\u5f53\u524d\u9876\u70b9\u8fb9\u5173\u7cfb\u7684\u5efa\u7acb 3.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u00b6 \u57fa\u672c\u601d\u60f3\u5982\u4e0b\uff1a\u9996\u5148\u8bbf\u95ee\u56fe\u4e2d\u67d0 \u4e00\u8d77\u59cb\u9876\u70b9 \u03bd \uff0c\u7136\u540e\u7531 v \u51fa\u53d1\uff0c\u8bbf\u95ee\u4e0e v \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u4efb\u4e00\u9876\u70b9 W1\uff0c\u518d\u8bbf\u95ee\u4e0e W1 \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u4efb\u4e00\u9876\u70b9 W2 ...... \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b \u3002\u5f53\u4e0d\u80fd\u518d\u7ee7\u7eed\u5411\u4e0b\u8bbf\u95ee\u65f6\uff0c\u4f9d\u6b21\u9000\u56de\u5230\u6700\u8fd1\u88ab\u7684\u95ee\u7684\u9876\u70b9\uff0c\u82e5\u5b83\u8fd8\u6709\u90bb\u63a5\u9876\u70b9\u672a\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5219\u4ece\u8be5\u70b9\u5f00\u59cb\u7ee7\u7eed\u4e0a\u8ff0\u641c\u7d22\u8fc7\u7a0b\uff0c \u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u5747\u88ab\u5207\u95ee\u8fc7\u4e3a\u6b62\u3002 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u904d\u5386\u8fc7\u7a0b\uff1a \u9996\u5148\u8bbf\u95ee a, \u5e76\u7f6e a \u8bbf\u95ee\u6807\u8bb0\uff1b\u7136\u540e\u8bbf\u95ee\u4e0e a \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 b \uff0c\u7f6e b \u8bbf\u95ee\u6807\u8bb0\uff1b\u7136\u540e\u8bbf\u95ee\u4e0e b \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 d\uff0c\u7f6e d \u8bbf\u95ee\u6807\u8bb0\u3002\u6b64\u65f6 d \u5df1\u6ca1\u6709\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u70b9\uff0c\u6545\u8fd4\u56de\u4e0a\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9 b \uff0c\u8bbf\u95ee\u4e0e\u5176\u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 e\uff0c\u7f6e e \u8bbf\u95ee\u6807\u8bb0......\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u7684\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u4e00\u6b21\u3002\u904d\u5386\u7ed3\u679c\u4e3a abdehcfg \u7b97\u6cd5\u5b9e\u73b0 \u00b6 //\u6df1\u5ea6\u4f18\u5148\u6838\u5fc3\u7b97\u6cd5 void DFS ( ALGraph * g , int v ){ visit ( g , v ); visited [ v ] = true ; for ( int w = FirstNeighbor ( * g , v ); w >= 0 ; w = NextNeighbor ( * g , v , w )){ if ( ! visited [ w ]){ DFS ( g , w ); } } } //\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7b97\u6cd5\u5b9e\u73b0 void DFSTraverse ( ALGraph g ){ printf ( \" \\n\\n \u5f00\u59cb\u904d\u5386\u56fe\uff08\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff09... \\n\\n \" ); for ( int i = 0 ; i < g . vexnum ; i ++ ){ visited [ i ] = false ; } for ( int i = 0 ; i < g . vexnum ; i ++ ){ if ( ! visited [ i ]){ DFS ( & g , i ); } } } \u8bfb\u8005\u53ef\u4ee5\u628a\u4e0a\u8ff0\u4ee3\u7801\u52a0\u5165\u52303.1\u8282\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7b97\u6cd5\u7684\u4ee3\u7801\u4e2d\uff0c\u5728main\u51fd\u6570\u4e2d\u52a0\u5165\u51fd\u6570DFSTraverse\u7684\u8c03\u7528\u5373\u53ef\u3002 \u4e0b\u9762\u662f\u5408\u5e76\u540e\u7684\u4ee3\u7801\u7f16\u8bd1\u8fd0\u884c\u7684\u7ed3\u679c\uff0c\u6570\u636e\u4f9d\u7136\u4f7f\u7528\u524d\u97622.2\u8282\u7684\u6709\u5411\u56feG silvers@HP-ZHAN:/tmp$ ./testt \u8bf7\u8f93\u5165\u9876\u70b9\u603b\u6570\uff0820\u4e2a\u4ee5\u5185\uff09\uff1a6 \u8bf7\u8f93\u5165\u603b\u7684\u8fb9\u6570\uff08190\u6761\u4ee5\u5185\uff09\uff1a7 \u521b\u5efa\u9876\u70b9\u6570\u636e... \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 1 \u7684\u9876\u70b9\u7684\u6570\u636e: 1 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 2 \u7684\u9876\u70b9\u7684\u6570\u636e: 2 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 3 \u7684\u9876\u70b9\u7684\u6570\u636e: 3 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 4 \u7684\u9876\u70b9\u7684\u6570\u636e: 4 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 5 \u7684\u9876\u70b9\u7684\u6570\u636e: 5 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 6 \u7684\u9876\u70b9\u7684\u6570\u636e: 6 \u786e\u5b9a\u9876\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u5173\u7cfb... ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 6 \u6570\u636e 6 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a5 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 \u56fe\u521b\u5efa\u5b8c\u6210... \u5f00\u59cb\u904d\u5386\u56fe\uff08\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff09... \u521d\u59cb\u5316\u961f\u5217... \u904d\u5386\u5230\u9876\u70b9\uff1a1 \u5143\u7d20 0 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 0 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a4 \u5143\u7d20 3 \u5165\u961f\u5217... \u9876\u70b9 0 \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 3 \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a2 \u5143\u7d20 1 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 3 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u5143\u7d20 3 \u51fa\u961f\u5217... \u9876\u70b9 1 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a5 \u5143\u7d20 4 \u5165\u961f\u5217... \u5143\u7d20 1 \u51fa\u961f\u5217... \u9876\u70b9 4 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a3 \u5143\u7d20 2 \u5165\u961f\u5217... \u5143\u7d20 2 \u51fa\u961f\u5217... \u9876\u70b9 2 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a6 \u5143\u7d20 5 \u5165\u961f\u5217... \u5143\u7d20 5 \u51fa\u961f\u5217... \u9876\u70b9 5 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 5 \u5f00\u59cb\u904d\u5386\u56fe\uff08\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff09... \u904d\u5386\u5230\u9876\u70b9\uff1a1 \u9876\u70b9 0 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a4 \u9876\u70b9 3 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a2 \u9876\u70b9 1 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a5 \u9876\u70b9 4 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u9876\u70b9 0 \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 3 \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a3 \u9876\u70b9 2 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a6 \u9876\u70b9 5 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 5 silvers@HP-ZHAN:/tmp$","title":"\u56fe\u4e0e\u56fe\u7684\u904d\u5386"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#_1","text":"","title":"\u4e00\u3001\u56fe\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#11","text":"\u56fe G \u7531\u9876\u70b9\u96c6 Y \u548c\u8fb9\u96c6 E \u7ec4\u6210\uff0c\u8bb0\u4e3a G=(V, E) \uff0c\u5176 \u4e2d V(G)\u8868\u793a\u56fe G \u4e2d\u9876\u70b9\u7684\u6709\u9650\u975e\u7a7a\u96c6\uff1b E(G)\u8868\u793a\u56fe G \u4e2d\u9876\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb ( \u4e5f\u5c31\u662f\u8fb9) \u96c6\u5408\u3002\u82e5 V= {V1 , V2,..., Vn}\uff0c\u5219\u7528|V|\u8868\u793a\u56fe G \u4e2d\u9876\u70b9\u7684\u4e2a\u6570\uff0c\u56fe\u7684\u9876\u70b9\u4e2a\u6570\u4e5f\u79f0\u56fe G \u7684\u9636\uff0cE = {(u,v) | u \u03b5 V, v \u03b5 V}\uff0c\u7528 |E| \u8868\u793a \u56fe G \u4e2d\u8fb9\u7684\u6761\u6570 \u6ce8\u610f\uff1a \u7ebf\u6027\u8868\u53ef\u4ee5\u662f\u7a7a\u8868\uff0c\u6811\u53ef\u4ee5\u662f\u7a7a\u6811\uff0c\u4f46\u4e0d\u5b58\u5728\u7a7a\u56fe","title":"1.1 \u56fe\u7684\u5b9a\u4e49"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#12","text":"","title":"1.2 \u56fe\u7684\u5206\u7c7b"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#121","text":"\u82e5 E \u662f\u6709\u5411\u8fb9(\u4e5f\u79f0\u5f27)\u7684\u6709\u9650\u96c6\u5408\u65f6\uff0c\u5219\u56fe G \u4e3a\u6709\u5411\u56fe \u3002 \u5f27\u662f\u9876\u70b9\u7684\u6709\u5e8f\u5bf9\uff0c\u8bb0\u4e3a< v, w >\uff0c\u5176\u4e2d v\uff0cw \u662f\u9876\u70b9\uff0c v \u79f0\u4e3a\u5f27\u5c3e\uff0cw \u79f0\u4e3a\u5f27 \u5934\uff0c< v, w >\u79f0\u4e3a\u4ece\u9876\u70b9 v \u5230\u9876\u70b9 w \u7684\u5f27\uff0c\u4e5f\u79f0 v \u90bb\u63a5\u5230 w\uff0c\u6216 w \u90bb\u63a5\u81ea \u03bd \u3002 \u5982\u4e0b\u6240\u793a\u7684\u6709\u5411\u56fe G1 \u53ef\u8868\u793a\u4e3a G1 = (V1, E1) V1={1,2,3} E1 = {< 1, 2>, <2, 1 >, <2, 3>}","title":"1.2.1 \u6709\u5411\u56fe"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#122","text":"\u82e5 E \u662f\u65e0\u5411\u8fb9 (\u7b80\u79f0 \u8fb9 )\u7684\u6709\u9650\u96c6\u5408\u65f6\uff0c\u5219\u56fe G \u4e3a\u65e0\u5411\u56fe \u3002 \u8fb9\u662f\u9876\u70b9\u7684\u65e0\u5e8f\u5bf9\uff0c\u8bb0\u4e3a ( v, w)\u6216(w, v)\uff0c\u56e0\u4e3a(v, w) = (w, v)\uff0c\u5176\u4e2d v, w \u662f\u9876 \u70b9\u3002\u53ef\u4ee5\u8bf4\u9876\u70b9 w \u548c\u9876\u70b9 v \u4e92 \u4e3a\u90bb\u63a5\u70b9\u3002\u8fb9( v, w)\u4f9d\u9644\u4e8e\u9876\u70b9 w \u548c v ,\u6216\u8005\u8bf4\u8fb9(\u03bd, w)\u548c\u9876\u70b9 v, w \u76f8\u5173\u8054\u3002 \u5982\u4e0b\u6240\u793a\u7684\u65e0\u5411\u56fe G2 \u53ef\u8868\u793a\u4e3a G2 = (V2, E2) V2= {1, 2,3,4} E2 = {(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)}","title":"1.2.2 \u65e0\u5411\u56fe"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#13","text":"","title":"1.3 \u56fe\u7684\u6027\u8d28"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#131","text":"\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5\u4ece\u9876\u70b9 v \u5230\u9876\u70b9 w \u6709 \u8def\u5f84 \u5b58\u5728\uff0c\u5219\u79f0 v \u548c w \u662f\u8fde\u901a\u7684 \u3002 \u82e5\u56fe G \u4e2d\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u90fd\u662f\u8fde\u901a\u7684\uff0c\u5219\u79f0\u56fe G \u4e3a\u8fde\u901a\u56fe\uff0c\u5426\u5219\u79f0\u4e3a\u975e\u8fde\u901a\u56fe\u3002 \u82e5\u4e00\u4e2a\u56fe\u6709 n \u4e2a\u9876\u70b9\uff0c\u5e76\u4e14\u8fb9\u6570\u5c0f\u4e8e n - 1 \uff0c\u5219\u6b64\u56fe\u5fc5\u662f\u975e\u8fde\u901a\u56fe","title":"1.3.1 \u8fde\u901a\u56fe"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#_2","text":"\u56fe\u7684\u5b58\u50a8\u5fc5\u987b\u8981\u5b8c\u6574\u3001\u51c6\u786e\u5730\u53cd\u6620\u9876\u70b9\u96c6\u548c\u8fb9\u96c6\u7684\u4fe1\u606f \u3002 \u6839\u636e\u4e0d\u540c\u56fe\u7684\u7ed3\u6784\u548c\u7b97\u6cd5 , \u91c7\u7528\u4e0d\u540c\u7684\u5b58\u50a8\u65b9\u5f0f\u5c06\u5bf9\u7a0b\u5e8f\u7684\u6548\u7387\u4ea7\u751f\u76f8\u5f53\u5927\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u6240\u9009\u7684\u5b58\u50a8\u7ed3\u6784\u5e94\u9002\u5408\u4e8e\u6b32\u6c42\u89e3\u7684\u95ee\u9898 \u3002 \u5e38\u89c1\u7684\u56fe\u7684\u5b58\u50a8\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u90bb\u63a5\u77e9\u9635 \u3001 \u90bb\u63a5\u8868 \u3001\u90bb\u63a5\u591a\u91cd\u8868\u3001\u5341\u5b57\u94fe\u8868","title":"\u4e8c\u3001\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\u53ca\u57fa\u672c\u64cd\u4f5c"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#21","text":"\u6240\u8c13\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u662f\u6307\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u56fe\u4e2d\u9876\u70b9\u7684\u4fe1\u606f\uff0c\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u56fe\u4e2d\u8fb9\u7684\u4fe1\u606f\uff08\u5373\u5404\u9876\u70b9\u4e4b\u95f4\u7684\u90bb\u63a5\u5173\u7cfb\uff09\uff0c\u5b58\u50a8\u9876\u70b9\u4e4b\u95f4\u90bb\u63a5\u5173\u7cfb\u7684\u4e8c\u7ef4\u6570\u7ec4\u79f0\u4e3a\u90bb\u63a5\u77e9\u9635\u3002 \u6709\u5411\u56fe\u3001\u65e0\u5411\u56fe\u5bf9\u5e94\u7684\u90bb\u63a5\u77e9\u9635\u5982\u4e0b\u56fe\u6240\u793a \u56fe\u7684\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\u7ed3\u6784\u5b9a\u4e49\u5982\u4e0b : #define MaxVertexNum 100 //\u9876\u70b9\u6570\u76ee\u7684\u6700\u5927\u503c typedef char VertexType ; //\u9876\u70b9\u7684\u6570\u636e\u7c7b\u578b typedef int EdgeType ; //\u5e26\u6743\u56fe\u4e2d\u8fb9\u4e0a\u6743\u503c\u7684\u6570\u636e\u7c7b\u578b typedef struct { VertexType Vex [ MaxVertexNum ] ; //\u9876\u70b9\u8868 EdgeType Edge [ MaxVertexNum ] [ MaxVertexNum ] ; //\u90bb\u63a5\u77e9\u9635,\u8fb9\u8868 int vexnum , arcnum ; //\u56fe\u7684\u5f53\u524d\u9876\u70b9\u6570\u548c\u5f27\u6570 } MGraph ;","title":"2.1 \u90bb\u63a5\u77e9\u9635"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#22","text":"\u6240\u8c13\u90bb\u63a5\u8868\uff0c\u662f\u6307\u5bf9\u56fe G \u4e2d\u7684\u6bcf\u4e2a\u9876\u70b9 Vi \u5efa\u7acb\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u7b2c i \u4e2a\u5355\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u8868\u793a\u4f9d\u9644\u4e8e\u9876\u70b9 Vi \u7684\u8fb9 (\u5bf9\u4e8e\u6709\u5411\u56fe\u5219\u662f\u4ee5\u9876\u70b9 Vi \u4e3a\u5c3e\u7684\u5f27)\uff0c\u8fd9\u4e2a\u5355\u94fe\u8868\u5c31\u79f0\u4e3a\u9876\u70b9 Vi \u7684\u8fb9\u8868 (\u5bf9\u4e8e\u6709\u5411\u56fe\u5219\u79f0\u4e3a\u51fa\u8fb9\u8868) \u3002 \u8fb9\u8868\u7684\u5934\u6307\u9488\u548c\u9876\u70b9\u7684\u6570\u636e\u4fe1\u606f\u91c7\u7528\u987a\u5e8f\u5b58\u50a8(\u79f0\u4e3a\u9876\u70b9\u8868)\uff0c\u6240\u4ee5\u5728\u90bb\u63a5\u8868\u4e2d\u5b58\u5728\u4e24\u79cd\u7ed3\u70b9\uff1a \u9876\u70b9\u8868\u7ed3\u70b9\u548c\u8fb9\u8868\u7ed3\u70b9 \uff0c\u5982\u4e0b\u6240\u793a \u9876\u70b9\u8868\u7ed3\u70b9\u7531\u9876\u70b9\u57df( data ) \u548c\u6307\u5411\u7b2c\u4e00\u6761\u90bb\u6309\u8fb9\u7684\u6307\u9488 ( firstarc )\u6784\u6210\uff0c\u8fb9\u8868(\u90bb\u63a5\u8868)\u7ed3\u70b9\u7531\u90bb\u63a5\u70b9\u57df( adjvex )\u548c\u6307\u5411\u4e0b\u4e00\u6761\u90bb\u63a5\u8fb9\u7684\u6307\u9488\u57df (nextarc )\u6784\u6210 \u3002 \u65e0\u5411\u56fe\u548c\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\u7684\u5b9e\u4f8b\u5206\u522b\u5982\u4e0b\u6240\u793a \u56fe\u7684\u90bb\u63a5\u8868\u5b58\u50a8\u7ed3\u6784\u5b9a\u4e49\u5982\u4e0b : #define MaxVertexNum 20 //\u56fe\u4e2d\u9876\u70b9\u6570\u76ee\u7684\u6700\u5927\u503c typedef struct ArcNode { int adjvex ; //\u9876\u70b9\u7f16\u53f7 struct ArcNode * next ; //\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u90bb\u8fb9 } ArcNode ; typedef struct VNode { VertexType data ; //\u9876\u70b9\u6570\u636e ArcNode * first ; //\u9876\u70b9\u7684\u7b2c\u4e00\u6761\u90bb\u8fb9 } VNode , AdjList [ MaxVertexNum ]; typedef struct { AdjList vertices ; int vexnum , arcnum ; //\u9876\u70b9\u603b\u6570\u548c\u8fb9\u603b\u6570 } ALGraph ;","title":"2.2 \u90bb\u63a5\u8868"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#23","text":"\u56fe\u7684\u57fa\u672c\u64cd\u4f5c\u662f\u72ec\u7acb\u4e8e\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\u7684\u3002\u800c\u5bf9\u4e8e\u4e0d\u540c\u7684\u5b58\u50a8\u65b9\u5f0f \uff0c \u64cd\u4f5c\u7b97\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u4f1a\u6709\u7740\u4e0d\u540c\u7684\u6027\u80fd \u3002\u5728\u8bbe\u8ba1\u5177\u4f53\u7b97\u6cd5\u7684\u5b9e\u73b0\u65f6\uff0c\u5e94\u8003\u8651\u91c7\u7528\u4f55\u79cd\u5b58\u50a8\u65b9\u5f0f\u7684\u7b97\u6cd5\u6548\u7387\u4f1a\u66f4\u9ad8 \u3002 \u56fe\u7684\u57fa\u672c\u64cd\u4f5c\u4e3b\u8981\u5305\u62ec(\u62bd\u8c61\u8003\u8651\uff0c\u5ffd\u7565\u5404\u53d8\u91cf\u7684\u7c7b\u578b\uff09: Adjacent (G, x , y ):\u5224\u65ad\u56fe G \u662f\u5426\u5b58\u5728\u8fb9< x, y>\u6216(x,y) Neighbors (G, x ) :\u5217\u51fa\u56fe G \u4e2d\u4e0e\u7ed3\u70b9 x \u90bb\u63a5\u7684\u8fb9 InsertVertex (G, x ) : \u5728\u56fe G \u4e2d\u63d2\u5165\u9876\u70b9 x DeleteVertex (G, x ) : \u4ece\u56fe G \u4e2d\u5220\u9664\u9876\u70b9 x AddEdge (G, x , y ): \u82e5\u65e0\u5411\u8fb9 (x, y) \u6216\u6709\u5411\u8fb9< x, y>\u4e0d\u5b58\u5728\uff0c\u5219\u5411\u56fe G \u4e2d\u6dfb\u52a0\u8be5\u8fb9\u3002 RemoveEdge (G, x , y ) : \u82e5\u65e0\u5411\u8fb9(x,y)\u6216\u6709\u5411\u8fb9< x, y>\u5b58\u5728\uff0c\u5219\u4ece\u56fe G \u4e2d\u5220\u9664\u8be5\u8fb9\u3002 FirstNeighbor (G, x ) : \u6c42\u56fe G \u4e2d\u9876\u70b9 x \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u82e5\u6709\u5219\u8fd4\u56de\u9876\u70b9\u53f7\u3002\u82e5 x \u6ca1\u6709\u90bb\u63a5\u70b9\u6216\u56fe\u4e2d\u4e0d\u5b58\u5728 x \uff0c\u5219\u8fd4\u56de-1 NextNeighbor (G, x , y ) :\u5047\u8bbe \u56fe G \u4e2d\u9876\u70b9 y \u662f\u9876\u70b9 x \u7684\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u8fd4\u56de\u9664 y \u5916\u9876\u70b9 x \u7684\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u7684\u9876\u70b9\u53f7\uff0c \u82e5 y \u662f x \u7684\u6700\u540e\u4e00\u4e2a\u90bb\u63a5\u70b9\uff0c\u5219\u8fd4\u56de-1 Get_edge_value (G , x , y ): \u83b7\u53d6\u56fe G \u4e2d\u8fb9(x,y)\u6216< x, y>\u5bf9\u5e94\u7684\u6743\u503c Set_edge_value(G , x , y , v ): \u8bbe\u7f6e\u56fe G \u4e2d\u8fb9(x,y)\u6216< x, y>\u5bf9\u5e94\u7684\u6743\u503c\u4e3a v","title":"2.3 \u56fe\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#_3","text":"\u56fe\u7684\u904d\u5386\u662f\u6307\u4ece\u56fe\u4e2d\u7684\u67d0\u4e00\u9876\u70b9\u51fa\u53d1\uff0c\u6309\u7167\u67d0\u79cd\u641c\u7d22\u65b9\u6cd5\u6cbf\u7740\u56fe\u4e2d\u7684\u8fb9\u5bf9\u56fe\u4e2d\u7684\u6240\u6709\u9876\u70b9\u8bbf\u95ee\u4e00\u6b21\u4e14\u4ec5\u8bbf\u95ee\u4e00\u6b21 \u3002 \u56fe\u7684\u904d\u5386\u7b97\u6cd5\u4e3b\u8981\u6709\u4e24\u79cd\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u548c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","title":"\u4e09\u3001\u56fe\u7684\u904d\u5386"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#31","text":"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22( Breadth-First-Search BFS ) \u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\u7b97\u6cd5\u3002\u57fa\u672c\u601d\u60f3\u662f\uff1a\u9996\u5148\u8bbf\u95ee\u8d77\u59cb\u9876\u70b9 v\uff0c\u63a5\u7740\u7531 v \u51fa\u53d1\uff0c\u4f9d\u6b21\u8bbf\u95ee v \u7684\u5404\u4e2a\u672a\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u9876\u70b9 W1,W2,...,Wi\uff0c\u7136\u540e\u4f9d\u6b21\u8bbf\u95ee W1 , W2,..., Wi \u7684\u6240\u6709\u672a\u88ab\u9632\u95ee\u8fc7\u7684\u90bb\u63a5\u9876\u70b9\uff1b\u518d\u4ece\u8fd9\u4e9b\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u51fa\u53d1\uff0c\u8bbf\u95ee\u5b83\u4eec\u6240\u6709\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u9876\u70b9\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u8fc7\u4e3a\u6b62 \u3002 \u82e5\u6b64\u65f6\u56fe\u4e2d\u5c1a\u6709\u9876\u70b9\u672a\u88ab\u8bbf\u95ee,\u5219\u53e6\u9009\u56fe\u4e2d\u4e00\u4e2a\u672a\u66fe\u88ab\u8bbf\u95ee\u7684\u9876\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u5230\u4e3a\u6b62 \u3002 \u5047\u8bbe\u6709\u4e0b\u56fe\u6240\u793a\u7684\u65e0\u5411\u56fe \u5047\u8bbe\u4ece a \u7ed3\u70b9\u5f00\u59cb\u8bbf\u95ee\uff0ca \u5148\u5165\u961f \u3002 \u6b64\u65f6\u961f\u5217\u975e\u7a7a\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 a \uff0c\u7531\u4e8e b \uff0cc \u4e0e a \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u8fc7\uff0c\u4e8e\u662f\u4f9d\u6b21\u8bbf\u95ee b\uff0cc \uff0c\u5e76\u5c06 b, c \u4f9d\u6b21\u5165\u961f \u3002\u961f\u5217\u975e\u7a7a\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 b \uff0c\u4f9d\u6b21\u8bbf\u95ee\u4e0e b \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 d, e \uff0c\u5e76\u5c06 d,e \u5165\u961f(\u6ce8\u610f : a \u4e0e b \u4e5f\u90bb\u63a5\uff0c\u4f46 a \u5df1\u7f6e\u8bbf\u95ee\u6807\u8bb0\uff0c\u6545\u4e0d\u518d\u91cd\u590d\u8bbf\u95ee) \u3002\u6b64\u65f6\u961f\u5217\u975e\u7a7a\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 c\uff0c\u8bbf \u95ee\u4e0e c \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 f , g\uff0c \u5e76\u5c06 f , g \u5165\u961f\u3002\u6b64\u65f6\uff0c\u53d6\u51fa\u961f\u5934\u5143\u7d20 d \uff0c\u4f46\u4e0e d \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9\u4e3a\u7a7a\uff0c\u6545\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u7ee7\u7eed\u53d6\u51fa\u961f\u5934\u5143\u7d20 e \uff0c\u5c06 h \u5165\u961f\u5217......\u6700\u7ec8\u53d6\u51fa\u961f\u5934\u5143\u7d20 h \u540e\uff0c \u961f\u5217\u4e3a\u7a7a\uff0c\u4ece\u800c\u5faa\u73af\u81ea\u52a8\u8df3\u51fa \u3002\u904d\u5386\u7ed3\u679c\u4e3a abcdefgh","title":"3.1 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#_4","text":"//@Author: mrsilvers@163.com //@Date: 2021-01-06 18:07:43 #include <stdio.h> #include <stdlib.h> #include <string.h> #include <unistd.h> /*\u56fe\u76f8\u5173\u7ed3\u6784\u5b9a\u4e49*/ #define MaxVertexNum 20 typedef int VertexType ; typedef struct ArcNode { int adjvex ; //\u9876\u70b9\u7f16\u53f7 struct ArcNode * next ; //\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u90bb\u8fb9 } ArcNode ; typedef struct VNode { VertexType data ; //\u9876\u70b9\u6570\u636e ArcNode * first ; //\u9876\u70b9\u7684\u7b2c\u4e00\u6761\u90bb\u8fb9 } VNode , AdjList [ 20 ]; typedef struct { AdjList vertices ; int vexnum , arcnum ; //\u9876\u70b9\u603b\u6570\u548c\u8fb9\u603b\u6570 } ALGraph ; /*\u961f\u5217\u76f8\u5173\u7ed3\u6784\u5b9a\u4e49*/ typedef int ElemType ; //\u94fe\u961f\u5217\u5b9a\u4e49 typedef struct Qnode { ElemType data ; struct Qnode * next ; } Qnode , * Queuep ; typedef struct { Queuep front ; Queuep rear ; } linkQueue ; //\u9876\u70b9\u7ed3\u679c\u8f93\u51fa\u51fd\u6570 void visit ( ALGraph * g , int v ){ printf ( \"\u904d\u5386\u5230\u9876\u70b9\uff1a%d \\n \" , g -> vertices [ v ]. data ); } bool visited [ MaxVertexNum ]; //\u8f85\u52a9\u6570\u7ec4 linkQueue l ; //\u961f\u5217 /*\u961f\u5217\u64cd\u4f5c\u65b9\u6cd5\u5b9e\u73b0*/ //\u5e26\u5934\u8282\u70b9\u94fe\u8868\u65b9\u6cd5\u5b9e\u73b0 void InitQueue ( linkQueue & l ){ printf ( \"\u521d\u59cb\u5316\u961f\u5217... \\n \" ); l . front = l . rear = ( Queuep ) malloc ( sizeof ( Qnode )); if ( ! l . front ){ perror ( \"InitQueue:\" ); exit ( -1 ); } l . front -> next = NULL ; } void EnQueue ( linkQueue & l , ElemType d ){ printf ( \"\u5143\u7d20 %d \u5165\u961f\u5217... \\n \" , d ); Queuep p ; p = ( Queuep ) malloc ( sizeof ( Qnode )); if ( ! p ){ perror ( \"EnQueue:\" ); exit ( 1 ); } p -> next = NULL ; p -> data = d ; l . rear -> next = p ; l . rear = p ; } void DeQueue ( linkQueue & l , ElemType & d ){ printf ( \"\u5143\u7d20 %d \u51fa\u961f\u5217... \\n \" , d ); Queuep p ; if ( l . front == l . rear ){ perror ( \"DeQueue:\" ); exit ( 1 ); } p = l . front -> next ; d = p -> data ; l . front -> next = p -> next ; if ( p == l . rear ) l . rear = l . front ; free ( p ); } bool IsEmpty ( linkQueue & l ){ if ( l . front == l . rear ){ return true ; } return false ; } /*\u56fe\u7684\u64cd\u4f5c\u65b9\u6cd5\u5b9e\u73b0*/ //\u8fd4\u56de\u56feG\u4e2d\u9876\u70b9v\u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u5728G\u7684\u9876\u70b9\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6ei\uff0c\u82e5v\u6ca1\u6709\u90bb\u63a5\u70b9\u6216\u8005\u56fe\u4e2d\u4e0d\u5b58\u5728v\uff0c\u5219\u8fd4\u56de-1 int FirstNeighbor ( ALGraph & g , int v ){ VNode vv ; //\u5224\u65ad\u56feg\u662f\u5426\u5b58\u5728\u9876\u70b9v if ( v < g . vexnum && v >= 0 ){ vv = g . vertices [ v ]; if ( vv . first -> adjvex < g . vexnum ){ //\u5224\u65ad\u8be5\u8fb9\u8fde\u63a5\u7684\u9876\u70b9\u662f\u5426\u5728\u56feg\u5185 printf ( \"\u9876\u70b9 %d \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f %d \\n \" , v , vv . first -> adjvex ); return vv . first -> adjvex ; } } return -1 ; } //i\u662f\u56feG\u4e2d\u9876\u70b9v\u7684\u4e00\u4e2a\u90bb\u63a5\u70b9(\u7f16\u53f7)\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u9664(\u7f16\u53f7\u662f)\u90bb\u63a5\u70b9i\u5916\u7684\u9876\u70b9v\u7684\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u7684\u7f16\u53f7\uff0c\u82e5i\u662fv\u7684\u6700\u540e\u4e00\u4e2a\u90bb\u63a5\u70b9(\u7f16\u53f7)\uff0c\u5219\u8fd4\u56de-1 int NextNeighbor ( ALGraph & g , int v , int i ){ ArcNode arc ; VNode vv ; //\u5224\u65ad\u56feg\u662f\u5426\u5b58\u5728\u9876\u70b9v if ( v < g . vexnum && v >= 0 ){ vv = g . vertices [ v ]; arc = * ( vv . first ); //\u9876\u70b9v\u7684\u7b2c\u4e00\u6761\u90bb\u8fb9 while ( arc . next != NULL ){ if ( arc . adjvex == i ){ if ( arc . next != NULL ){ printf ( \"\u9876\u70b9 %d \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 %d \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f %d \\n \" , v , i , arc . next -> adjvex ); sleep ( 1 ); return arc . next -> adjvex ; } break ; } arc = * ( arc . next ); } } return -1 ; } //\u6839\u636e\u9876\u70b9\u6570\u636e\u8fd4\u56de\u9876\u70b9\u5728\u9876\u70b9\u8868\u4e2d\u7684\u7d22\u5f15 int getIndex ( ALGraph * g , int data ){ for ( int i = 0 ; i < g -> vexnum ; i ++ ){ if ( g -> vertices [ i ]. data == data ){ printf ( \"\u6570\u636e %d \u7684\u9876\u70b9\u5e8f\u53f7\uff1a%d \\n \" , data , i ); return i ; } } return -1 ; } //\u521b\u5efa\u56fe void CreateGraph ( ALGraph & g ){ int i , index ; int temp_data ; ArcNode * arcnode ; printf ( \"\u8bf7\u8f93\u5165\u9876\u70b9\u603b\u6570\uff0820\u4e2a\u4ee5\u5185\uff09\uff1a\" ); scanf ( \"%d\" , & ( g . vexnum )); printf ( \"\u8bf7\u8f93\u5165\u603b\u7684\u8fb9\u6570\uff08190\u6761\u4ee5\u5185\uff09\uff1a\" ); scanf ( \"%d\" , & ( g . arcnum )); printf ( \" \\n\\n \u521b\u5efa\u9876\u70b9\u6570\u636e... \\n\\n \" ); for ( i = 0 ; i < g . vexnum ; i ++ ){ printf ( \"\u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a %d \u7684\u9876\u70b9\u7684\u6570\u636e: \" , i + 1 ); scanf ( \"%d\" , & ( g . vertices [ i ]. data )); g . vertices [ i ]. first = NULL ; } printf ( \" \\n\\n \u786e\u5b9a\u9876\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u5173\u7cfb... \\n\\n \" ); for ( i = 0 ; i < g . vexnum ; i ++ ){ for ( int j = 0 ; j < g . vexnum -1 ; j ++ ){ //\u4e00\u4e2a\u9876\u70b9\u6700\u591a\u6709:\uff08\u6700\u5927\u9876\u70b9\u6570-1\uff09\u4e2a\u90bb\u63a5\u70b9 printf ( \"(%d/%d)\u8f93\u5165\u6570\u636e\u4e3a %d \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9(\u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165): \" , i + 1 , g . vexnum , g . vertices [ i ]. data ); scanf ( \"%d\" , & temp_data ); if ( temp_data == 88 ){ break ; } index = getIndex ( & g , temp_data ); arcnode = ( ArcNode * ) malloc ( sizeof ( ArcNode )); if ( ! arcnode ){ perror ( \"CreateGraph:\" ); exit ( 1 ); } arcnode -> adjvex = index ; //\u5934\u63d2\u6cd5\u5efa\u7acb\u94fe\u8868 arcnode -> next = g . vertices [ i ]. first ; g . vertices [ i ]. first = arcnode ; } } printf ( \"\u56fe\u521b\u5efa\u5b8c\u6210... \\n\\n \" ); } //\u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\u6838\u5fc3 void BFS ( ALGraph * g , int v ){ int w ; visit ( g , v ) ; visited [ v ] = true ; EnQueue ( l , v ); while ( ! IsEmpty ( l )){ DeQueue ( l , v ); for ( w = FirstNeighbor ( * g , v ); w >= 0 ; w = NextNeighbor ( * g , v , w )){ if ( ! visited [ w ]){ visit ( g , w ); visited [ w ] = true ; EnQueue ( l , w ); } } } } //\u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\u5b9e\u73b0 void BFSTraverse ( ALGraph g ){ printf ( \"\u5f00\u59cb\u904d\u5386\u56fe\uff08\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff09... \\n\\n \" ); int i ; for ( i = 0 ; i < g . vexnum ; i ++ ){ visited [ i ] = false ; } InitQueue ( l ); for ( i = 0 ; i < g . vexnum ; i ++ ){ if ( ! visited [ i ]) BFS ( & g , i ); } } int main (){ ALGraph g ; CreateGraph ( g ); BFSTraverse ( g ); return 0 ; } \u7531\u4e8e\u4f7f\u7528\u4e86\u5f15\u7528\u7c7b\u578b\uff0c\u4ee3\u7801\u9700\u4fdd\u5b58\u4e3a.cpp\u6587\u4ef6\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u7ed3\u679c\u5982\u4e0b silvers@HP-ZHAN:/tmp$ ./testt \u8bf7\u8f93\u5165\u9876\u70b9\u603b\u6570\uff0820\u4e2a\u4ee5\u5185\uff09\uff1a6 \u8bf7\u8f93\u5165\u603b\u7684\u8fb9\u6570\uff08190\u6761\u4ee5\u5185\uff09\uff1a7 \u521b\u5efa\u9876\u70b9\u6570\u636e... \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 1 \u7684\u9876\u70b9\u7684\u6570\u636e: 1 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 2 \u7684\u9876\u70b9\u7684\u6570\u636e: 2 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 3 \u7684\u9876\u70b9\u7684\u6570\u636e: 3 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 4 \u7684\u9876\u70b9\u7684\u6570\u636e: 4 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 5 \u7684\u9876\u70b9\u7684\u6570\u636e: 5 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 6 \u7684\u9876\u70b9\u7684\u6570\u636e: 6 \u786e\u5b9a\u9876\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u5173\u7cfb... ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 6 \u6570\u636e 6 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a5 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 \u56fe\u521b\u5efa\u5b8c\u6210... \u5f00\u59cb\u904d\u5386\u56fe\uff08\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff09... \u521d\u59cb\u5316\u961f\u5217... \u904d\u5386\u5230\u9876\u70b9\uff1a1 \u5143\u7d20 0 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 0 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a4 \u5143\u7d20 3 \u5165\u961f\u5217... \u9876\u70b9 0 \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 3 \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a2 \u5143\u7d20 1 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 3 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u5143\u7d20 3 \u51fa\u961f\u5217... \u9876\u70b9 1 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a5 \u5143\u7d20 4 \u5165\u961f\u5217... \u5143\u7d20 1 \u51fa\u961f\u5217... \u9876\u70b9 4 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a3 \u5143\u7d20 2 \u5165\u961f\u5217... \u5143\u7d20 2 \u51fa\u961f\u5217... \u9876\u70b9 2 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a6 \u5143\u7d20 5 \u5165\u961f\u5217... \u5143\u7d20 5 \u51fa\u961f\u5217... \u9876\u70b9 5 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 5 silvers@HP-ZHAN:/tmp$ \u8fd9\u7ec4\u8f93\u5165\u521b\u5efa\u7684\u56fe\u6b63\u662f\u524d\u97622.2\u8282\u7684\u6709\u5411\u56feG\uff0c\u7a0b\u5e8f\u91cc\u9762\u4f7f\u752888\u8868\u793a\u505c\u6b62\u5f53\u524d\u9876\u70b9\u8fb9\u5173\u7cfb\u7684\u5efa\u7acb","title":"\u7b97\u6cd5\u5b9e\u73b0"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#32","text":"\u57fa\u672c\u601d\u60f3\u5982\u4e0b\uff1a\u9996\u5148\u8bbf\u95ee\u56fe\u4e2d\u67d0 \u4e00\u8d77\u59cb\u9876\u70b9 \u03bd \uff0c\u7136\u540e\u7531 v \u51fa\u53d1\uff0c\u8bbf\u95ee\u4e0e v \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u4efb\u4e00\u9876\u70b9 W1\uff0c\u518d\u8bbf\u95ee\u4e0e W1 \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u4efb\u4e00\u9876\u70b9 W2 ...... \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b \u3002\u5f53\u4e0d\u80fd\u518d\u7ee7\u7eed\u5411\u4e0b\u8bbf\u95ee\u65f6\uff0c\u4f9d\u6b21\u9000\u56de\u5230\u6700\u8fd1\u88ab\u7684\u95ee\u7684\u9876\u70b9\uff0c\u82e5\u5b83\u8fd8\u6709\u90bb\u63a5\u9876\u70b9\u672a\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5219\u4ece\u8be5\u70b9\u5f00\u59cb\u7ee7\u7eed\u4e0a\u8ff0\u641c\u7d22\u8fc7\u7a0b\uff0c \u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u5747\u88ab\u5207\u95ee\u8fc7\u4e3a\u6b62\u3002 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u904d\u5386\u8fc7\u7a0b\uff1a \u9996\u5148\u8bbf\u95ee a, \u5e76\u7f6e a \u8bbf\u95ee\u6807\u8bb0\uff1b\u7136\u540e\u8bbf\u95ee\u4e0e a \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 b \uff0c\u7f6e b \u8bbf\u95ee\u6807\u8bb0\uff1b\u7136\u540e\u8bbf\u95ee\u4e0e b \u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 d\uff0c\u7f6e d \u8bbf\u95ee\u6807\u8bb0\u3002\u6b64\u65f6 d \u5df1\u6ca1\u6709\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u90bb\u63a5\u70b9\uff0c\u6545\u8fd4\u56de\u4e0a\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9 b \uff0c\u8bbf\u95ee\u4e0e\u5176\u90bb\u63a5\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u9876\u70b9 e\uff0c\u7f6e e \u8bbf\u95ee\u6807\u8bb0......\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u81f3\u56fe\u4e2d\u6240\u6709\u7684\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u4e00\u6b21\u3002\u904d\u5386\u7ed3\u679c\u4e3a abdehcfg","title":"3.2 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/#_5","text":"//\u6df1\u5ea6\u4f18\u5148\u6838\u5fc3\u7b97\u6cd5 void DFS ( ALGraph * g , int v ){ visit ( g , v ); visited [ v ] = true ; for ( int w = FirstNeighbor ( * g , v ); w >= 0 ; w = NextNeighbor ( * g , v , w )){ if ( ! visited [ w ]){ DFS ( g , w ); } } } //\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7b97\u6cd5\u5b9e\u73b0 void DFSTraverse ( ALGraph g ){ printf ( \" \\n\\n \u5f00\u59cb\u904d\u5386\u56fe\uff08\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff09... \\n\\n \" ); for ( int i = 0 ; i < g . vexnum ; i ++ ){ visited [ i ] = false ; } for ( int i = 0 ; i < g . vexnum ; i ++ ){ if ( ! visited [ i ]){ DFS ( & g , i ); } } } \u8bfb\u8005\u53ef\u4ee5\u628a\u4e0a\u8ff0\u4ee3\u7801\u52a0\u5165\u52303.1\u8282\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7b97\u6cd5\u7684\u4ee3\u7801\u4e2d\uff0c\u5728main\u51fd\u6570\u4e2d\u52a0\u5165\u51fd\u6570DFSTraverse\u7684\u8c03\u7528\u5373\u53ef\u3002 \u4e0b\u9762\u662f\u5408\u5e76\u540e\u7684\u4ee3\u7801\u7f16\u8bd1\u8fd0\u884c\u7684\u7ed3\u679c\uff0c\u6570\u636e\u4f9d\u7136\u4f7f\u7528\u524d\u97622.2\u8282\u7684\u6709\u5411\u56feG silvers@HP-ZHAN:/tmp$ ./testt \u8bf7\u8f93\u5165\u9876\u70b9\u603b\u6570\uff0820\u4e2a\u4ee5\u5185\uff09\uff1a6 \u8bf7\u8f93\u5165\u603b\u7684\u8fb9\u6570\uff08190\u6761\u4ee5\u5185\uff09\uff1a7 \u521b\u5efa\u9876\u70b9\u6570\u636e... \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 1 \u7684\u9876\u70b9\u7684\u6570\u636e: 1 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 2 \u7684\u9876\u70b9\u7684\u6570\u636e: 2 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 3 \u7684\u9876\u70b9\u7684\u6570\u636e: 3 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 4 \u7684\u9876\u70b9\u7684\u6570\u636e: 4 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 5 \u7684\u9876\u70b9\u7684\u6570\u636e: 5 \u8bf7\u8f93\u5165\u5e8f\u53f7\u4e3a 6 \u7684\u9876\u70b9\u7684\u6570\u636e: 6 \u786e\u5b9a\u9876\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u5173\u7cfb... ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 1 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 1 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 2 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 2 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 5 \u6570\u636e 5 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a4 ( 3 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 3 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 2 \u6570\u636e 2 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a1 ( 4 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 4 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 4 \u6570\u636e 4 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a3 ( 5 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 5 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 6 \u6570\u636e 6 \u7684\u9876\u70b9\u5e8f\u53f7\uff1a5 ( 6 /6 ) \u8f93\u5165\u6570\u636e\u4e3a 6 \u7684\u9876\u70b9\u7684\u90bb\u63a5\u70b9 ( \u8f93\u516588\u8868\u793a\u7ed3\u675f\u8be5\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u5173\u7cfb\u8f93\u5165 ) : 88 \u56fe\u521b\u5efa\u5b8c\u6210... \u5f00\u59cb\u904d\u5386\u56fe\uff08\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff09... \u521d\u59cb\u5316\u961f\u5217... \u904d\u5386\u5230\u9876\u70b9\uff1a1 \u5143\u7d20 0 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 0 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a4 \u5143\u7d20 3 \u5165\u961f\u5217... \u9876\u70b9 0 \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 3 \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a2 \u5143\u7d20 1 \u5165\u961f\u5217... \u5143\u7d20 0 \u51fa\u961f\u5217... \u9876\u70b9 3 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u5143\u7d20 3 \u51fa\u961f\u5217... \u9876\u70b9 1 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a5 \u5143\u7d20 4 \u5165\u961f\u5217... \u5143\u7d20 1 \u51fa\u961f\u5217... \u9876\u70b9 4 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a3 \u5143\u7d20 2 \u5165\u961f\u5217... \u5143\u7d20 2 \u51fa\u961f\u5217... \u9876\u70b9 2 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a6 \u5143\u7d20 5 \u5165\u961f\u5217... \u5143\u7d20 5 \u51fa\u961f\u5217... \u9876\u70b9 5 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 5 \u5f00\u59cb\u904d\u5386\u56fe\uff08\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff09... \u904d\u5386\u5230\u9876\u70b9\uff1a1 \u9876\u70b9 0 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u904d\u5386\u5230\u9876\u70b9\uff1a4 \u9876\u70b9 3 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a2 \u9876\u70b9 1 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a5 \u9876\u70b9 4 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 3 \u9876\u70b9 0 \uff1a\u5f53\u524d\u90bb\u63a5\u70b9 3 \uff0c\u4e0b\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 1 \u904d\u5386\u5230\u9876\u70b9\uff1a3 \u9876\u70b9 2 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 4 \u904d\u5386\u5230\u9876\u70b9\uff1a6 \u9876\u70b9 5 \u7684\u7b2c\u4e00\u4e2a\u90bb\u63a5\u70b9\u662f 5 silvers@HP-ZHAN:/tmp$","title":"\u7b97\u6cd5\u5b9e\u73b0"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI%E5%B0%9D%E8%AF%95/","text":"\u5e8f \u00b6 \u4f7f\u7528\u767e\u5ea6\u5730\u56feAPI\u5f00\u53d1\u5e94\u7528\uff0c\u9996\u5148\u9700\u8981\u7533\u8bf7\u4e00\u4e2a\u767e\u5ea6\u5730\u56feAPI\u7684\u5bc6\u94a5\uff0c\u70b9\u51fb \u767e\u5ea6\u5f00\u53d1\u8005\u5e73\u53f0 \u8fdb\u5165\u5230\u767e\u5ea6\u5f00\u53d1\u8005\u5e73\u53f0\uff0c\u7136\u540e\u6309\u7167\u4e0b\u5217\u987a\u5e8f\u4e00\u6b65\u4e00\u6b65\u7684\u5b8c\u6210\u7533\u8bf7\uff1a 1.\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\uff0c\u586b\u5199\u5e94\u7528\u540d\u79f0 2.\u9009\u62e9\u5e94\u7528\u7c7b\u578b\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u6d4f\u89c8\u5668\u7aef\u5e94\u7528\u3002 \u76f8\u4fe1\u5f88\u591a\u4eba\u4f1a\u4e0d\u6e05\u695a\u81ea\u5df1\u5e94\u8be5\u9009\u7528\u4ec0\u4e48\u7c7b\u578b\uff0c\u8fd9\u91cc\u6211\u7ed9\u5927\u5bb6\u4e00\u4e9b\u89e3\u91ca\uff1a \u670d\u52a1\u7aefAPI\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9bhttp/https\u63a5\u53e3\uff0c\u5373\u5f00\u53d1\u8005\u901a\u8fc7http/https\u5f62\u5f0f\u53d1\u8d77\u68c0\u7d22\u8bf7\u6c42\uff0c\u83b7\u53d6\u8fd4\u56dejson\u6216xml\u683c\u5f0f\u7684\u68c0\u7d22\u6570\u636e\uff0c\u4e0d\u63d0\u4f9b\u4efb\u4f55\u7684\u56fe\u50cf\u548c\u6548\u679c\u663e\u793a\uff1b \u6d4f\u89c8\u5668\u7aefAPI\u662f\u7531JavaScript\u8bed\u8a00\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u7f51\u7ad9\u4e2d\u6784\u5efa\u529f\u80fd\u4e30\u5bcc\u3001\u4ea4\u4e92\u6027\u5f3a\u7684\u5730\u56fe\u5e94\u7528\uff0c\u652f\u6301PC\u7aef\u548c\u79fb\u52a8\u7aef\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u5730\u56fe\u5e94\u7528\u5f00\u53d1\uff0c\u4e14\u652f\u6301HTML5\u7279\u6027\u7684\u5730\u56fe\u5f00\u53d1\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7531js\u5c01\u88c5\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728html\u6216js\u6587\u4ef6\u4e2d\u76f4\u63a5\u8c03\u7528\u3002 3.OK\uff0c\u89e3\u91ca\u5b8c\u6bd5\uff0c\u4e0b\u9762\u52fe\u9009\u542f\u7528\u670d\u52a1\uff0c\u4e00\u822c\u5168\u90e8\u6253\u52fe\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002 4.\u63a5\u4e0b\u6765\u5c31\u662f\u767d\u540d\u5355\uff0c\u4ec0\u4e48\u662f\u767d\u540d\u5355\uff1f\u5c31\u662f\u53ea\u6709\u5728\u767d\u540d\u5355\u5217\u8868\u4e0a\u7684\u5730\u5740\u624d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\u3002\u5728\u672c\u5730\u5f00\u53d1\u8c03\u8bd5\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u586b\u4e2a*\u5c31\u53ef\u4ee5\u4e86\uff0c\u8868\u793a\u4efb\u4f55\u5730\u5740\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u6b63\u5f0f\u4e0a\u7ebf\u7684\u65f6\u5019\uff0c\u505a\u4e00\u4e0b\u9650\u5236\u5c31\u597d\u4e86\u3002\u63a5\u4e0b\u6765\u70b9\u51fb\u63d0\u4ea4\u5c31ok\u4e86\u3002 \u90a3\u4e48\u63a5\u4e0b\u6765\u5982\u4f55\u8c03\u7528\u767e\u5ea6\u5730\u56feAPI\uff1f 1.\u5728html\u6587\u4ef6\u7684\u5934\u90e8 <head> \u91cc\u9762\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=\u63a5\u53e3\u7248\u672c&ak=\u4f60\u7684\u5bc6\u94a5\uff08ak\uff09\"></script> 2.\u5728html\u4e2d\u521b\u5efa\u5bb9\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a <div style=\"width:680px;height:550px;border:#ccc solid 1px;font-size:12px\" id=\"map\"></div> 3.\u521b\u5efa\u5730\u56fe\u5b9e\u4f8b\uff1a\u5728js\u6587\u4ef6\u6216\u8005html\u6587\u4ef6\u7684 <script></script> \u4e4b\u95f4\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff08\u793a\u4f8b\uff09\uff1a var map = new BMap . Map ( 'map' ); //\u521b\u5efaMap\u5b9e\u4f8b var point = new BMap . Point ( 116 , 28 ); //\u521b\u5efa\u5750\u6807\u70b9 map . centerAndZoom ( point , 16 ); //\u521d\u59cb\u5316\u5730\u56fe\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e2d\u5fc3\u70b9\u548c\u5730\u56fe\u7f29\u653e\u7ea7\u522b OK\uff0c\u8fd9\u5c31\u662f\u4f7f\u7528\u767e\u5ea6\u5730\u56feAPI\u7684\u7b2c\u4e00\u6b65\uff0c\u5982\u679c\u6709\u4e9b\u5730\u65b9\u4e0d\u61c2\u7684\uff0c\u8bf7\u591a\u770b\u4e00\u4e0bhtml\u548cjs\u7684\u77e5\u8bc6\u8865\u5145\u4e00\u4e0b\u5c31\u597d\u4e86\u3002 1.\u4f7f\u7528\u767e\u5ea6\u5730\u56feapi\u5b9e\u73b0\u5730\u70b9\u6807\u6ce8 \u00b6 \u5728.html\u6587\u4ef6\u6216\u8005.js\u6587\u4ef6\u4e0b\u7684 <script> \u548c </script> \u5757\u4e4b\u95f4\u63d2\u5165\u4e0b\u5217\u4ee3\u7801 var point = new BMap . Point ( 116.038624 , 28.695625 ); //\u521b\u5efa\u6807\u6ce8\u7684\u4f4d\u7f6e var marker = new BMap . Marker ( point ); //\u521b\u5efa\u6807\u6ce8 map . addOverlay ( marker ); // \u5c06\u6807\u6ce8\u6dfb\u52a0\u5230\u5730\u56fe\u4e2d var opts = { width : 200 , // \u4fe1\u606f\u7a97\u53e3\u5bbd\u5ea6 height : 100 , // \u4fe1\u606f\u7a97\u53e3\u9ad8\u5ea6 title : \"\u5357\u660c\u5de5\u7a0b\u5b66\u9662\" , // \u4fe1\u606f\u7a97\u53e3\u6807\u9898 enableMessage : true , //\u8bbe\u7f6e\u5141\u8bb8\u4fe1\u606f\u7a97\u53d1\u9001\u77ed\u606f } var infoWindow = new BMap . InfoWindow ( \"\u5730\u5740\uff1a\u6c5f\u897f\u7701\u5357\u660c\u5e02\u5357\u660c\u5de5\u7a0b\u5b66\u9662\" , opts ); // \u521b\u5efa\u4fe1\u606f\u7a97\u53e3\u5bf9\u8c61 //\u6807\u6ce8\u589e\u52a0\u9f20\u6807\u4e8b\u4ef6\u76d1\u542c marker . addEventListener ( \"click\" , function (){ map . openInfoWindow ( infoWindow , point ); //\u5f00\u542f\u4fe1\u606f\u7a97\u53e3 }); 2.\u4f7f\u7528\u767e\u5ea6\u5730\u56feapi\u5b9e\u73b0\u8f93\u5165\u6846\u81ea\u52a8\u63d0\u793a \u00b6 \u524d\u7aefhtml\u4ee3\u7801 < html > < head > < script type = \"text/javascript\" src = \"http://api.map.baidu.com/api?v=2.0&ak=\u4f60\u7684ak\" ></ script > </ head > < body > < h4 > \u589e\u52a0\u5730\u70b9 </ h4 > < form > < div > < label > \u5730\u70b9\u540d\u5b57 </ label > < input id = \"suggestId\" name = \"sendAddress\" type = \"text\" placeholder = \"\u8f93\u5165\u5730\u540d/\u5efa\u7b51\u7269\u540d\u5b57\" > </ div > < button type = \"submit\" > Submit </ button > </ form > </ body > < script > //\u8fd9\u91cc\u63d2\u5165js\u4ee3\u7801 </ script > </ html > js\u4ee3\u7801 loadMapAutocomplete ( \"suggestId\" ); function loadMapAutocomplete ( suggestId ) { var checkValue ; Ac = new BMap . Autocomplete ( //\u5efa\u7acb\u4e00\u4e2a\u81ea\u52a8\u5b8c\u6210\u7684\u5bf9\u8c61 { \"input\" : suggestId , }); Ac . addEventListener ( \"onconfirm\" , function ( e ) { //\u9f20\u6807\u70b9\u51fb\u4e0b\u62c9\u5217\u8868\u540e\u7684\u4e8b\u4ef6 var _value = e . item . value ; checkValue = _value . province + _value . city + _value . district + _value . street + _value . business ; //\u6ce8\uff1a$(\"#\")\u662fjQuery\u7528\u6cd5\uff0c\u4f5c\u7528\u662f\u6839\u636e\u6807\u7b7eid\u83b7\u53d6\u503c\u6216\u8d4b\u503c\uff0c\u4f7f\u7528\u524d\u8bf7\u5148\u5f15\u7528jQuery $ ( \"#suggestId\" ). val ( checkValue ); //\u70b9\u51fb\u5730\u540d\u540e\u628a\u5730\u70b9\u4fe1\u606f\u663e\u793a\u5230\u8f93\u5165\u6846\u4e0a }); }","title":"\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI%E5%B0%9D%E8%AF%95/#_1","text":"\u4f7f\u7528\u767e\u5ea6\u5730\u56feAPI\u5f00\u53d1\u5e94\u7528\uff0c\u9996\u5148\u9700\u8981\u7533\u8bf7\u4e00\u4e2a\u767e\u5ea6\u5730\u56feAPI\u7684\u5bc6\u94a5\uff0c\u70b9\u51fb \u767e\u5ea6\u5f00\u53d1\u8005\u5e73\u53f0 \u8fdb\u5165\u5230\u767e\u5ea6\u5f00\u53d1\u8005\u5e73\u53f0\uff0c\u7136\u540e\u6309\u7167\u4e0b\u5217\u987a\u5e8f\u4e00\u6b65\u4e00\u6b65\u7684\u5b8c\u6210\u7533\u8bf7\uff1a 1.\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\uff0c\u586b\u5199\u5e94\u7528\u540d\u79f0 2.\u9009\u62e9\u5e94\u7528\u7c7b\u578b\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u6d4f\u89c8\u5668\u7aef\u5e94\u7528\u3002 \u76f8\u4fe1\u5f88\u591a\u4eba\u4f1a\u4e0d\u6e05\u695a\u81ea\u5df1\u5e94\u8be5\u9009\u7528\u4ec0\u4e48\u7c7b\u578b\uff0c\u8fd9\u91cc\u6211\u7ed9\u5927\u5bb6\u4e00\u4e9b\u89e3\u91ca\uff1a \u670d\u52a1\u7aefAPI\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9bhttp/https\u63a5\u53e3\uff0c\u5373\u5f00\u53d1\u8005\u901a\u8fc7http/https\u5f62\u5f0f\u53d1\u8d77\u68c0\u7d22\u8bf7\u6c42\uff0c\u83b7\u53d6\u8fd4\u56dejson\u6216xml\u683c\u5f0f\u7684\u68c0\u7d22\u6570\u636e\uff0c\u4e0d\u63d0\u4f9b\u4efb\u4f55\u7684\u56fe\u50cf\u548c\u6548\u679c\u663e\u793a\uff1b \u6d4f\u89c8\u5668\u7aefAPI\u662f\u7531JavaScript\u8bed\u8a00\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u7f51\u7ad9\u4e2d\u6784\u5efa\u529f\u80fd\u4e30\u5bcc\u3001\u4ea4\u4e92\u6027\u5f3a\u7684\u5730\u56fe\u5e94\u7528\uff0c\u652f\u6301PC\u7aef\u548c\u79fb\u52a8\u7aef\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u5730\u56fe\u5e94\u7528\u5f00\u53d1\uff0c\u4e14\u652f\u6301HTML5\u7279\u6027\u7684\u5730\u56fe\u5f00\u53d1\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7531js\u5c01\u88c5\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728html\u6216js\u6587\u4ef6\u4e2d\u76f4\u63a5\u8c03\u7528\u3002 3.OK\uff0c\u89e3\u91ca\u5b8c\u6bd5\uff0c\u4e0b\u9762\u52fe\u9009\u542f\u7528\u670d\u52a1\uff0c\u4e00\u822c\u5168\u90e8\u6253\u52fe\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002 4.\u63a5\u4e0b\u6765\u5c31\u662f\u767d\u540d\u5355\uff0c\u4ec0\u4e48\u662f\u767d\u540d\u5355\uff1f\u5c31\u662f\u53ea\u6709\u5728\u767d\u540d\u5355\u5217\u8868\u4e0a\u7684\u5730\u5740\u624d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\u3002\u5728\u672c\u5730\u5f00\u53d1\u8c03\u8bd5\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u586b\u4e2a*\u5c31\u53ef\u4ee5\u4e86\uff0c\u8868\u793a\u4efb\u4f55\u5730\u5740\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u6b63\u5f0f\u4e0a\u7ebf\u7684\u65f6\u5019\uff0c\u505a\u4e00\u4e0b\u9650\u5236\u5c31\u597d\u4e86\u3002\u63a5\u4e0b\u6765\u70b9\u51fb\u63d0\u4ea4\u5c31ok\u4e86\u3002 \u90a3\u4e48\u63a5\u4e0b\u6765\u5982\u4f55\u8c03\u7528\u767e\u5ea6\u5730\u56feAPI\uff1f 1.\u5728html\u6587\u4ef6\u7684\u5934\u90e8 <head> \u91cc\u9762\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=\u63a5\u53e3\u7248\u672c&ak=\u4f60\u7684\u5bc6\u94a5\uff08ak\uff09\"></script> 2.\u5728html\u4e2d\u521b\u5efa\u5bb9\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a <div style=\"width:680px;height:550px;border:#ccc solid 1px;font-size:12px\" id=\"map\"></div> 3.\u521b\u5efa\u5730\u56fe\u5b9e\u4f8b\uff1a\u5728js\u6587\u4ef6\u6216\u8005html\u6587\u4ef6\u7684 <script></script> \u4e4b\u95f4\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff08\u793a\u4f8b\uff09\uff1a var map = new BMap . Map ( 'map' ); //\u521b\u5efaMap\u5b9e\u4f8b var point = new BMap . Point ( 116 , 28 ); //\u521b\u5efa\u5750\u6807\u70b9 map . centerAndZoom ( point , 16 ); //\u521d\u59cb\u5316\u5730\u56fe\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e2d\u5fc3\u70b9\u548c\u5730\u56fe\u7f29\u653e\u7ea7\u522b OK\uff0c\u8fd9\u5c31\u662f\u4f7f\u7528\u767e\u5ea6\u5730\u56feAPI\u7684\u7b2c\u4e00\u6b65\uff0c\u5982\u679c\u6709\u4e9b\u5730\u65b9\u4e0d\u61c2\u7684\uff0c\u8bf7\u591a\u770b\u4e00\u4e0bhtml\u548cjs\u7684\u77e5\u8bc6\u8865\u5145\u4e00\u4e0b\u5c31\u597d\u4e86\u3002","title":"\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI%E5%B0%9D%E8%AF%95/#1api","text":"\u5728.html\u6587\u4ef6\u6216\u8005.js\u6587\u4ef6\u4e0b\u7684 <script> \u548c </script> \u5757\u4e4b\u95f4\u63d2\u5165\u4e0b\u5217\u4ee3\u7801 var point = new BMap . Point ( 116.038624 , 28.695625 ); //\u521b\u5efa\u6807\u6ce8\u7684\u4f4d\u7f6e var marker = new BMap . Marker ( point ); //\u521b\u5efa\u6807\u6ce8 map . addOverlay ( marker ); // \u5c06\u6807\u6ce8\u6dfb\u52a0\u5230\u5730\u56fe\u4e2d var opts = { width : 200 , // \u4fe1\u606f\u7a97\u53e3\u5bbd\u5ea6 height : 100 , // \u4fe1\u606f\u7a97\u53e3\u9ad8\u5ea6 title : \"\u5357\u660c\u5de5\u7a0b\u5b66\u9662\" , // \u4fe1\u606f\u7a97\u53e3\u6807\u9898 enableMessage : true , //\u8bbe\u7f6e\u5141\u8bb8\u4fe1\u606f\u7a97\u53d1\u9001\u77ed\u606f } var infoWindow = new BMap . InfoWindow ( \"\u5730\u5740\uff1a\u6c5f\u897f\u7701\u5357\u660c\u5e02\u5357\u660c\u5de5\u7a0b\u5b66\u9662\" , opts ); // \u521b\u5efa\u4fe1\u606f\u7a97\u53e3\u5bf9\u8c61 //\u6807\u6ce8\u589e\u52a0\u9f20\u6807\u4e8b\u4ef6\u76d1\u542c marker . addEventListener ( \"click\" , function (){ map . openInfoWindow ( infoWindow , point ); //\u5f00\u542f\u4fe1\u606f\u7a97\u53e3 });","title":"1.\u4f7f\u7528\u767e\u5ea6\u5730\u56feapi\u5b9e\u73b0\u5730\u70b9\u6807\u6ce8"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI%E5%B0%9D%E8%AF%95/#2api","text":"\u524d\u7aefhtml\u4ee3\u7801 < html > < head > < script type = \"text/javascript\" src = \"http://api.map.baidu.com/api?v=2.0&ak=\u4f60\u7684ak\" ></ script > </ head > < body > < h4 > \u589e\u52a0\u5730\u70b9 </ h4 > < form > < div > < label > \u5730\u70b9\u540d\u5b57 </ label > < input id = \"suggestId\" name = \"sendAddress\" type = \"text\" placeholder = \"\u8f93\u5165\u5730\u540d/\u5efa\u7b51\u7269\u540d\u5b57\" > </ div > < button type = \"submit\" > Submit </ button > </ form > </ body > < script > //\u8fd9\u91cc\u63d2\u5165js\u4ee3\u7801 </ script > </ html > js\u4ee3\u7801 loadMapAutocomplete ( \"suggestId\" ); function loadMapAutocomplete ( suggestId ) { var checkValue ; Ac = new BMap . Autocomplete ( //\u5efa\u7acb\u4e00\u4e2a\u81ea\u52a8\u5b8c\u6210\u7684\u5bf9\u8c61 { \"input\" : suggestId , }); Ac . addEventListener ( \"onconfirm\" , function ( e ) { //\u9f20\u6807\u70b9\u51fb\u4e0b\u62c9\u5217\u8868\u540e\u7684\u4e8b\u4ef6 var _value = e . item . value ; checkValue = _value . province + _value . city + _value . district + _value . street + _value . business ; //\u6ce8\uff1a$(\"#\")\u662fjQuery\u7528\u6cd5\uff0c\u4f5c\u7528\u662f\u6839\u636e\u6807\u7b7eid\u83b7\u53d6\u503c\u6216\u8d4b\u503c\uff0c\u4f7f\u7528\u524d\u8bf7\u5148\u5f15\u7528jQuery $ ( \"#suggestId\" ). val ( checkValue ); //\u70b9\u51fb\u5730\u540d\u540e\u628a\u5730\u70b9\u4fe1\u606f\u663e\u793a\u5230\u8f93\u5165\u6846\u4e0a }); }","title":"2.\u4f7f\u7528\u767e\u5ea6\u5730\u56feapi\u5b9e\u73b0\u8f93\u5165\u6846\u81ea\u52a8\u63d0\u793a"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","text":"\u4ee5\u4e0b\u5185\u5bb9\u90e8\u5206\u53c2\u8003\u300a\u738b\u9053\u6570\u636e\u7ed3\u67842020\u300b \u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5 \u00b6 \u6392\u5e8f\u7b97\u6cd5\u4e00\u822c\u5206\u4e3a\u4e24\u5927\u7c7b\uff0c\u4e00\u7c7b\u662f\u5916\u90e8\u6392\u5e8f\uff0c\u8fd9\u79cd\u6392\u5e8f\u7684\u89c4\u6a21\u5f80\u5f80\u6bd4\u8f83\u5927\uff0c\u8981\u6392\u5e8f\u7684\u6570\u636e\u65e0\u6cd5\u540c\u65f6\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5fc5\u987b\u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7684\u5728\u5185\u5916\u5b58\u4e4b\u95f4\u79fb\u52a8\uff1b\u53e6\u4e00\u7c7b\u662f\u5185\u90e8\u6392\u5e8f\uff0c\u89c4\u6a21\u8f83\u5c0f\u3002\u53ef\u4ee5\u5728\u5b8c\u5168\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u3002\u4eca\u5929\u4e3b\u8981\u5b9e\u73b0\u7684\u662f\u5185\u90e8\u6392\u5e8f\uff0c\u5e38\u89c1\u7684\u5185\u90e8\u6392\u5e8f\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e94\u5927\u7c7b\uff1a\u63d2\u5165\u6392\u5e8f\u3001\u4ea4\u6362\u6392\u5e8f\u3001\u9009\u62e9\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u3001\u57fa\u6570\u6392\u5e8f\u3002 \u4e00\u3001\u63d2\u5165\u6392\u5e8f \u00b6 1.1 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f \u00b6 \u4e3b\u8981\u601d\u60f3 \u00b6 \u6bcf\u6b21\u5c06\u4e00\u4e2a\u5f85\u6392\u5e8f\u7684\u8bb0\u5f55\uff0c\u63d2\u5165\u5230\u524d\u9762\u5df2\u7ecf\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u4e2d\u7684\u6070\u5f53\u4f4d\u7f6e\uff0c\u76f4\u5230\u5168\u90e8\u8bb0\u5f55\u63d2\u5165\u5b8c\u6210 \u5177\u4f53\u6b65\u9aa4\uff1a \u67e5\u627eL(i)\u5728L(1...i-1)\u9002\u5f53\u7684\u63d2\u5165\u4f4d\u7f6ek \u4eceL(k)\u5f00\u59cb\uff0c\u6240\u6709\u5143\u7d20\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e \u5c06L(i)\u590d\u5236\u5230L(k) \u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09 \u00b6 #include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; int insertsort ( List & l ) { int i , j ; for ( i = 1 ; i <= l . length ; i ++ ) { l . r [ 0 ] = l . r [ i ]; //r[0]\u4f4d\u7f6e\u505a\u54e8\u5175 for ( j = i -1 ; j >= 0 && l . r [ 0 ] < l . r [ j ]; j -- ) //\u57281...i-1\u4e4b\u95f4\u627e\u5230\u5408\u9002\u7684\u63d2\u5165\u4f4d\u7f6e\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u9700\u8981\u5411\u540e\u79fb\u52a8\u5143\u7d20\u7684\u4f4d\u7f6e { l . r [ j + 1 ] = l . r [ j ]; //\u5411\u540e\u79fb\u52a8\u5143\u7d20\u7684\u4f4d\u7f6e } l . r [ j + 1 ] = l . r [ 0 ]; //\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u63d2\u5165 } return 1 ; } //\u521d\u59cb\u5316\u6570\u7ec4 void initial ( List & l ) { int i ; printf ( \"please input size:\" ); scanf ( \"%d\" , & l . length ); printf ( \"input data:\" ); for ( i = 1 ; i <= l . length ; i ++ ) scanf ( \"%d\" , & l . r [ i ]); } main () { List l ; int i ; initial ( l ); insertsort ( l ); printf ( \"data output:\" ); for ( i = 1 ; i <= l . length ; i ++ ) printf ( \"%d \" , l . r [ i ]); } \u4e8c\u3001\u4ea4\u6362\u6392\u5e8f \u00b6 2.1 \u5192\u6ce1\u6392\u5e8f \u00b6 \u4e3b\u8981\u601d\u60f3 \u00b6 1.\u7b80\u8ff0\uff1a\u4ece\u524d\u5f80\u540e\uff08\u6216\u4ece\u540e\u5f80\u524d\uff09\u4e24\u4e24\u6bd4\u8f83\u76f8\u90bb\u5143\u7d20\u7684\u503c\uff0c\u82e5\u4e3a\u9006\u5e8f\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\uff0c\u76f4\u5230\u5e8f\u5217\u6bd4\u8f83\u5b8c\u6bd5\uff0c\u8fd9\u662f\u4e00\u8d9f\u5192\u6ce1\u6392\u5e8f\uff0c\u7ed3\u679c\u5c06\u6700\u5927\u7684\u5143\u7d20\u4ea4\u6362\u5230\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u786e\u5b9a\u4e86\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002 2.\u8be6\u8ff0\uff1a\u4ece\u524d\u5f80\u540e\uff08\u6216\u4ece\u540e\u5f80\u524d\uff09\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u4e0e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6bd4\u8f83\u5b83\u4eec\u7684\u503c\u5927\u5c0f\uff0c\u82e5\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4ece\u7b2c\u4e8c\u4e2a\u5f00\u59cb\u548c\u7b2c\u4e09\u4e2a\u6bd4\u8f83...\u76f4\u5230\u7b2cn-1\u4e2a\u5143\u7d20\u548c\u7b2cn\u4e2a\u5143\u7d20\u6bd4\u8f83\u5b8c\u6bd5\uff0c\u4e00\u8d9f\u4e0b\u6765\uff0c\u53ef\u4ee5\u786e\u5b9a\u6700\u5927\u7684\u5143\u7d20\u5df2\u7ecf\u5728\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u6392\u5e8f\u5c31\u4e0d\u7528\u518d\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6bd4\u8f83\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684\u4f4d\u7f6e\u5df2\u7ecf\u662f\u6b63\u786e\u7684\u4e86\uff0c\u6240\u4ee5\u7b2c\u4e8c\u6b21\u53ea\u9700\u8981\u6bd4\u8f83n-1\u6b21\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u6bcf\u5b8c\u6210\u4e00\u8d9f\u6392\u5e8f\uff0c\u5f85\u6392\u5e8f\u5143\u7d20\u4fbf\u5c11\u4e86\u4e00\u4e2a\u3002 \u56fe\u4e3a\u5192\u6ce1\u6392\u5e8f\u7684\u8fc7\u7a0b\uff0c\u7b2c\u4e00\u8d9f\u5192\u6ce1\u65f627 < 49 , \u4e0d\u4ea4\u6362; 13 < 27 \uff0c\u4e0d\u4ea4\u6362: 76 > 13\uff0c\u4ea4\u6362 : 97 > 13\uff0c\u4ea4\u6362: 65 > 13\uff0c\u4ea4\u6362\uff1b38 > 13\uff0c\u4ea4\u6362: 49 > 13\uff0c\u4ea4\u6362\u3002\u901a\u8fc7\u7b2c\u4e00\u8d9f\u5192\u6ce1\u540e\uff0c\u6700\u5c0f\u5143\u7d20\u5df1\u4ea4\u6362\u5230\u7b2c\u4e00\u4e2a\u4f4d\u7f6e \uff0c\u4e5f\u662f\u5b83\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u7b2c\u4e8c\u8d9f\u5192\u6ce1\u65f6\u5bf9\u5269\u4f59\u5b50\u5e8f\u5217\u91c7\u7528\u540c\u6837\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f,\u4ee5\u6b64\u7c7b\u63a8,\u5230\u7b2c\u516d\u8d9f\u7ed3\u675f\u540e\u6ca1\u6709\u53d1\u751f\u4ea4\u6362\uff0c\u8bf4\u660e\u8868\u5df1\u6709\u5e8f\uff0c\u5192\u6ce1\u6392\u5e8f\u7ed3\u675f\u3002 \u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09 \u00b6 #include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; int bubblesort ( List & l ) { int i , j , t ; for ( i = 0 ; i < l . length ; i ++ ) for ( j = 0 ; j < l . length - i -1 ; j ++ ) if ( l . r [ j ] > l . r [ j + 1 ]) { t = l . r [ j ]; l . r [ j ] = l . r [ j + 1 ]; l . r [ j + 1 ] = t ; } return 1 ; } int initial ( List & l ) { int i ; printf ( \"input size:\" ); scanf ( \"%d\" , & l . length ); printf ( \"input data please:\" ); for ( i = 0 ; i < l . length ; i ++ ) { scanf ( \"%d\" , & l . r [ i ]); } return 1 ; } main () { List l ; int i ; initial ( l ); bubblesort ( l ); printf ( \"output data:\" ); for ( i = 0 ; i < l . length ; i ++ ) printf ( \"%d \" , l . r [ i ]); } 2.2\u5feb\u901f\u6392\u5e8f \u00b6 \u4e3b\u8981\u601d\u60f3 \u00b6 \u5feb\u901f\u6392\u5e8f\u662f\u57fa\u4e8e\u5206\u6cbb\u6cd5\u7684\uff1a\u5728\u5f85\u6392\u5e8f\u8868 L[l\u2026n ]\u4e2d\u4efb\u53d6\u4e00\u4e2a\u5143\u7d20 pivot \u4f5c\u4e3a\u67a2\u8f74(\u6216\u57fa\u51c6,\u901a\u5e38\u53d6\u9996\u5143\u7d20)\uff0c\u901a\u8fc7\u4e00\u8d9f\u6392\u5e8f\uff0c\u5c06\u5f85\u6392\u5e8f\u8868\u5212\u5206\u4e3a\u72ec\u7acb\u7684\u4e24\u90e8\u5206 L[l\u2026k-1 ] \u548c [k+l\u2026n]\uff0c\u4f7f\u5f97 L[l\u2026k - 1 ] \u4e2d\u7684\u6240\u6709\u5143\u7d20\u5c0f\u4e8e pivot\uff0cL [k+ l\u2026 n ] \u4e2d\u7684\u6240\u6709\u5143\u7d20\u5927\u4e8e\u7b49\u4e8e pivot\uff0c\u5219 pivot \u653e\u5728\u4e86\u5176\u6700\u7ec8\u4f4d\u7f6e L ( k ) \u4e0a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u4e00\u8d9f\u5feb\u901f\u6392\u5e8f(\u6216\u4e00\u6b21\u5212\u5206)\u3002\u7136\u540e\u5206\u522b\u9012\u5f52\u5730\u5bf9\u4e24\u4e2a\u5b50\u8868\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u81f3\u6bcf\u90e8\u5206\u5185\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u6216\u7a7a\u4e3a\u6b62\uff0c\u5373\u6240\u6709\u5143\u7d20\u653e\u5728\u4e86\u5176\u6700\u7ec8\u4f4d\u7f6e\u4e0a \u3002 \u4e00\u8d9f\u5feb\u901f\u6392\u5e8f\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u4ea4\u66ff\u641c\u7d22\u548c\u4ea4\u6362\u7684\u8fc7\u7a0b\uff0c\u4e0b\u9762\u901a\u8fc7\u5b9e\u4f8b\u6765\u4ecb\u7ecd\u3002 \u5982\u56fe\u6240\u793a\uff0c\u5047\u8bbe\u4e24\u4e2a\u6307\u9488 i \u548c j\uff0c\u521d\u503c\u5206\u522b\u4e3a low \u548c high \uff0c\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20 49 \u4e3a\u67a2\u8f74\u8d4b\u503c\u5230\u53d8\u91cf pivot \u3002\u6307\u9488 j \u4ece high \u5f80\u524d\u641c\u7d22\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u67a2\u8f74\u7684\u5143\u7d20 27 , \u5c06 27 \u4ea4\u6362\u5230 i \u6240\u6307\u4f4d\u7f6e \u3002 \u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09 \u00b6 #include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; void QuickSort ( List * l , int low , int high ){ if ( low < high ){ //\u9012\u5f52\u8df3\u51fa\u7684\u6761\u4ef6 int pivotpos = Partition ( l , low , high ); //\u5212\u5206 QuickSort ( l , low , pivotpos -1 ); //\u4f9d\u6b21\u5bf9\u4e24\u4e2a\u5b50\u8868\u8fdb\u884c\u9012\u5f52\u64cd\u4f5c QuickSort ( l , pivotpos + 1 , high ); } } int Partition ( List * l , int low , int high ){ int pivot = l -> r [ low ]; while ( low < high ){ while ( low < high && l -> r [ high ] >= pivot ) -- high ; l -> r [ low ] = l -> r [ high ]; while ( low < high && l -> r [ low ] <= pivot ) ++ low ; l -> r [ high ] = l -> r [ low ]; } l -> r [ low ] = pivot ; return low ; } void Print ( List l ){ for ( int i = 0 ; i < l . length ; i ++ ){ printf ( \"%d \" , l . r [ i ]); } printf ( \" \\n \" ); } void main (){ List l = {{ 49 , 38 , 65 , 97 , 76 , 13 , 27 , 49 }, 8 }; Print ( l ); QuickSort ( & l , 0 , 7 ); Print ( l ); } \u7a33\u5b9a\u6027 \u00b6 \u5728\u5212\u5206\u7b97\u6cd5\u4e2d\uff0c\u82e5\u53f3\u7aef\u533a\u95f4\u6709\u4e24\u4e2a\u5173\u952e\u5b57\u76f8\u540c\uff0c\u4e14\u5747\u5c0f\u4e8e\u57fa\u51c6\u503c\u7684\u8bb0\u5f55\uff0c\u5219\u5728\u4ea4\u6362\u5230\u5de6\u7aef\u533a\u95f4\u540e\uff0c\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5373\u5feb\u901f\u6392\u5e8f\u662f\u4e00\u79cd\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\u3002\u4f8b\u5982 , \u8868 l = { 3, 2 , 2 }\uff0c\u7ecf\u8fc7\u4e00\u8d9f\u6392\u5e8f\u540e l = { 2, 2, 3 }\uff0c\u6700\u7ec8\u6392\u5e8f\u5e8f\u5217\u4e5f\u662f l = { 2 , 2, 3 }\uff0c\u663e\u7136 \uff0c2 \u4e0e 2 \u7684\u76f8\u5bf9\u6b21\u5e8f\u5df1\u53d1\u751f\u4e86\u53d8\u5316 \u3002 \u4e09\u3001\u9009\u62e9\u6392\u5e8f \u00b6 3.1 \u7b80\u5355\u9009\u62e9\u6392\u5e8f \u00b6 \u4e3b\u8981\u601d\u60f3 \u00b6 \u5047\u8bbe\u8981\u6392\u5e8f\u7684\u5e8f\u5217\u662fL(1...n)\uff0c\u7b2ci\u8d9f\u6392\u5e8f\u4eceL(i...n)\u91cc\u9762\u9009\u51fa\u6700\u5c0f\u7684\u5143\u7d20\u4e0eL(i)\u4ea4\u6362\uff0c\u6bcf\u4e00\u8d9f\u6392\u5e8f\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u7ec8\u4f4d\u7f6e\uff0c\u5f85\u6392\u5e8f\u5143\u7d20\u4e5f\u5c31\u5c11\u4e86\u4e00\u4e2a\uff0c\u7ecf\u8fc7n-1\u8d9f\u6392\u5e8f\u540e\u5e8f\u5217\u6709\u5e8f\u3002 \u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09 \u00b6 #include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; void selectsort ( List & l ) //mian idear is remmber the number of smallest element after every compare with others { int k , i , j , t ; for ( i = 1 ; i < l . length ; i ++ ) //\u4e3a\u4e86\u4e0b\u6807\u4e0e\u5143\u7d20\u5e8f\u53f7\u7684\u7edf\u4e00\u6027\uff0c\u8fd9\u91cc\u8bbe\u7f6el.r[0]\u6ca1\u6709\u5b58\u653e\u6570\u636e\uff0c\u4ecel.r[1]\u5f00\u59cb\u5b58\u653e\u6570\u636e { k = i ; for ( j = i + 1 ; j <= l . length ; j ++ ) if ( l . r [ j ] < l . r [ k ]) k = j ; if ( k != i ) { t = l . r [ k ]; l . r [ k ] = l . r [ i ]; l . r [ i ] = t ; } } } int initial ( List & l ) { int i ; printf ( \"input size:\" ); scanf ( \"%d\" , & l . length ); printf ( \"input data please:\" ); for ( i = 1 ; i <= l . length ; i ++ ) { scanf ( \"%d\" , & l . r [ i ]); } return 1 ; } main () { List l ; int i ; initial ( l ); selectsort ( l ); printf ( \"output data:\" ); for ( i = 1 ; i <= l . length ; i ++ ) printf ( \"%d \" , l . r [ i ]); }","title":"\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_1","text":"\u6392\u5e8f\u7b97\u6cd5\u4e00\u822c\u5206\u4e3a\u4e24\u5927\u7c7b\uff0c\u4e00\u7c7b\u662f\u5916\u90e8\u6392\u5e8f\uff0c\u8fd9\u79cd\u6392\u5e8f\u7684\u89c4\u6a21\u5f80\u5f80\u6bd4\u8f83\u5927\uff0c\u8981\u6392\u5e8f\u7684\u6570\u636e\u65e0\u6cd5\u540c\u65f6\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u5fc5\u987b\u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7684\u5728\u5185\u5916\u5b58\u4e4b\u95f4\u79fb\u52a8\uff1b\u53e6\u4e00\u7c7b\u662f\u5185\u90e8\u6392\u5e8f\uff0c\u89c4\u6a21\u8f83\u5c0f\u3002\u53ef\u4ee5\u5728\u5b8c\u5168\u5728\u5185\u5b58\u4e2d\u8fdb\u884c\u3002\u4eca\u5929\u4e3b\u8981\u5b9e\u73b0\u7684\u662f\u5185\u90e8\u6392\u5e8f\uff0c\u5e38\u89c1\u7684\u5185\u90e8\u6392\u5e8f\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e94\u5927\u7c7b\uff1a\u63d2\u5165\u6392\u5e8f\u3001\u4ea4\u6362\u6392\u5e8f\u3001\u9009\u62e9\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u3001\u57fa\u6570\u6392\u5e8f\u3002","title":"\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_2","text":"","title":"\u4e00\u3001\u63d2\u5165\u6392\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#11","text":"","title":"1.1 \u76f4\u63a5\u63d2\u5165\u6392\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_3","text":"\u6bcf\u6b21\u5c06\u4e00\u4e2a\u5f85\u6392\u5e8f\u7684\u8bb0\u5f55\uff0c\u63d2\u5165\u5230\u524d\u9762\u5df2\u7ecf\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u4e2d\u7684\u6070\u5f53\u4f4d\u7f6e\uff0c\u76f4\u5230\u5168\u90e8\u8bb0\u5f55\u63d2\u5165\u5b8c\u6210 \u5177\u4f53\u6b65\u9aa4\uff1a \u67e5\u627eL(i)\u5728L(1...i-1)\u9002\u5f53\u7684\u63d2\u5165\u4f4d\u7f6ek \u4eceL(k)\u5f00\u59cb\uff0c\u6240\u6709\u5143\u7d20\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e \u5c06L(i)\u590d\u5236\u5230L(k)","title":"\u4e3b\u8981\u601d\u60f3"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#c","text":"#include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; int insertsort ( List & l ) { int i , j ; for ( i = 1 ; i <= l . length ; i ++ ) { l . r [ 0 ] = l . r [ i ]; //r[0]\u4f4d\u7f6e\u505a\u54e8\u5175 for ( j = i -1 ; j >= 0 && l . r [ 0 ] < l . r [ j ]; j -- ) //\u57281...i-1\u4e4b\u95f4\u627e\u5230\u5408\u9002\u7684\u63d2\u5165\u4f4d\u7f6e\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u9700\u8981\u5411\u540e\u79fb\u52a8\u5143\u7d20\u7684\u4f4d\u7f6e { l . r [ j + 1 ] = l . r [ j ]; //\u5411\u540e\u79fb\u52a8\u5143\u7d20\u7684\u4f4d\u7f6e } l . r [ j + 1 ] = l . r [ 0 ]; //\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\u63d2\u5165 } return 1 ; } //\u521d\u59cb\u5316\u6570\u7ec4 void initial ( List & l ) { int i ; printf ( \"please input size:\" ); scanf ( \"%d\" , & l . length ); printf ( \"input data:\" ); for ( i = 1 ; i <= l . length ; i ++ ) scanf ( \"%d\" , & l . r [ i ]); } main () { List l ; int i ; initial ( l ); insertsort ( l ); printf ( \"data output:\" ); for ( i = 1 ; i <= l . length ; i ++ ) printf ( \"%d \" , l . r [ i ]); }","title":"\u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_4","text":"","title":"\u4e8c\u3001\u4ea4\u6362\u6392\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#21","text":"","title":"2.1 \u5192\u6ce1\u6392\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_5","text":"1.\u7b80\u8ff0\uff1a\u4ece\u524d\u5f80\u540e\uff08\u6216\u4ece\u540e\u5f80\u524d\uff09\u4e24\u4e24\u6bd4\u8f83\u76f8\u90bb\u5143\u7d20\u7684\u503c\uff0c\u82e5\u4e3a\u9006\u5e8f\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\uff0c\u76f4\u5230\u5e8f\u5217\u6bd4\u8f83\u5b8c\u6bd5\uff0c\u8fd9\u662f\u4e00\u8d9f\u5192\u6ce1\u6392\u5e8f\uff0c\u7ed3\u679c\u5c06\u6700\u5927\u7684\u5143\u7d20\u4ea4\u6362\u5230\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u786e\u5b9a\u4e86\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002 2.\u8be6\u8ff0\uff1a\u4ece\u524d\u5f80\u540e\uff08\u6216\u4ece\u540e\u5f80\u524d\uff09\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u4e0e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6bd4\u8f83\u5b83\u4eec\u7684\u503c\u5927\u5c0f\uff0c\u82e5\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4ece\u7b2c\u4e8c\u4e2a\u5f00\u59cb\u548c\u7b2c\u4e09\u4e2a\u6bd4\u8f83...\u76f4\u5230\u7b2cn-1\u4e2a\u5143\u7d20\u548c\u7b2cn\u4e2a\u5143\u7d20\u6bd4\u8f83\u5b8c\u6bd5\uff0c\u4e00\u8d9f\u4e0b\u6765\uff0c\u53ef\u4ee5\u786e\u5b9a\u6700\u5927\u7684\u5143\u7d20\u5df2\u7ecf\u5728\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u6392\u5e8f\u5c31\u4e0d\u7528\u518d\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6bd4\u8f83\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684\u4f4d\u7f6e\u5df2\u7ecf\u662f\u6b63\u786e\u7684\u4e86\uff0c\u6240\u4ee5\u7b2c\u4e8c\u6b21\u53ea\u9700\u8981\u6bd4\u8f83n-1\u6b21\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u6bcf\u5b8c\u6210\u4e00\u8d9f\u6392\u5e8f\uff0c\u5f85\u6392\u5e8f\u5143\u7d20\u4fbf\u5c11\u4e86\u4e00\u4e2a\u3002 \u56fe\u4e3a\u5192\u6ce1\u6392\u5e8f\u7684\u8fc7\u7a0b\uff0c\u7b2c\u4e00\u8d9f\u5192\u6ce1\u65f627 < 49 , \u4e0d\u4ea4\u6362; 13 < 27 \uff0c\u4e0d\u4ea4\u6362: 76 > 13\uff0c\u4ea4\u6362 : 97 > 13\uff0c\u4ea4\u6362: 65 > 13\uff0c\u4ea4\u6362\uff1b38 > 13\uff0c\u4ea4\u6362: 49 > 13\uff0c\u4ea4\u6362\u3002\u901a\u8fc7\u7b2c\u4e00\u8d9f\u5192\u6ce1\u540e\uff0c\u6700\u5c0f\u5143\u7d20\u5df1\u4ea4\u6362\u5230\u7b2c\u4e00\u4e2a\u4f4d\u7f6e \uff0c\u4e5f\u662f\u5b83\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u7b2c\u4e8c\u8d9f\u5192\u6ce1\u65f6\u5bf9\u5269\u4f59\u5b50\u5e8f\u5217\u91c7\u7528\u540c\u6837\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f,\u4ee5\u6b64\u7c7b\u63a8,\u5230\u7b2c\u516d\u8d9f\u7ed3\u675f\u540e\u6ca1\u6709\u53d1\u751f\u4ea4\u6362\uff0c\u8bf4\u660e\u8868\u5df1\u6709\u5e8f\uff0c\u5192\u6ce1\u6392\u5e8f\u7ed3\u675f\u3002","title":"\u4e3b\u8981\u601d\u60f3"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#c_1","text":"#include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; int bubblesort ( List & l ) { int i , j , t ; for ( i = 0 ; i < l . length ; i ++ ) for ( j = 0 ; j < l . length - i -1 ; j ++ ) if ( l . r [ j ] > l . r [ j + 1 ]) { t = l . r [ j ]; l . r [ j ] = l . r [ j + 1 ]; l . r [ j + 1 ] = t ; } return 1 ; } int initial ( List & l ) { int i ; printf ( \"input size:\" ); scanf ( \"%d\" , & l . length ); printf ( \"input data please:\" ); for ( i = 0 ; i < l . length ; i ++ ) { scanf ( \"%d\" , & l . r [ i ]); } return 1 ; } main () { List l ; int i ; initial ( l ); bubblesort ( l ); printf ( \"output data:\" ); for ( i = 0 ; i < l . length ; i ++ ) printf ( \"%d \" , l . r [ i ]); }","title":"\u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#22","text":"","title":"2.2\u5feb\u901f\u6392\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_6","text":"\u5feb\u901f\u6392\u5e8f\u662f\u57fa\u4e8e\u5206\u6cbb\u6cd5\u7684\uff1a\u5728\u5f85\u6392\u5e8f\u8868 L[l\u2026n ]\u4e2d\u4efb\u53d6\u4e00\u4e2a\u5143\u7d20 pivot \u4f5c\u4e3a\u67a2\u8f74(\u6216\u57fa\u51c6,\u901a\u5e38\u53d6\u9996\u5143\u7d20)\uff0c\u901a\u8fc7\u4e00\u8d9f\u6392\u5e8f\uff0c\u5c06\u5f85\u6392\u5e8f\u8868\u5212\u5206\u4e3a\u72ec\u7acb\u7684\u4e24\u90e8\u5206 L[l\u2026k-1 ] \u548c [k+l\u2026n]\uff0c\u4f7f\u5f97 L[l\u2026k - 1 ] \u4e2d\u7684\u6240\u6709\u5143\u7d20\u5c0f\u4e8e pivot\uff0cL [k+ l\u2026 n ] \u4e2d\u7684\u6240\u6709\u5143\u7d20\u5927\u4e8e\u7b49\u4e8e pivot\uff0c\u5219 pivot \u653e\u5728\u4e86\u5176\u6700\u7ec8\u4f4d\u7f6e L ( k ) \u4e0a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u4e00\u8d9f\u5feb\u901f\u6392\u5e8f(\u6216\u4e00\u6b21\u5212\u5206)\u3002\u7136\u540e\u5206\u522b\u9012\u5f52\u5730\u5bf9\u4e24\u4e2a\u5b50\u8868\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u81f3\u6bcf\u90e8\u5206\u5185\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u6216\u7a7a\u4e3a\u6b62\uff0c\u5373\u6240\u6709\u5143\u7d20\u653e\u5728\u4e86\u5176\u6700\u7ec8\u4f4d\u7f6e\u4e0a \u3002 \u4e00\u8d9f\u5feb\u901f\u6392\u5e8f\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u4ea4\u66ff\u641c\u7d22\u548c\u4ea4\u6362\u7684\u8fc7\u7a0b\uff0c\u4e0b\u9762\u901a\u8fc7\u5b9e\u4f8b\u6765\u4ecb\u7ecd\u3002 \u5982\u56fe\u6240\u793a\uff0c\u5047\u8bbe\u4e24\u4e2a\u6307\u9488 i \u548c j\uff0c\u521d\u503c\u5206\u522b\u4e3a low \u548c high \uff0c\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20 49 \u4e3a\u67a2\u8f74\u8d4b\u503c\u5230\u53d8\u91cf pivot \u3002\u6307\u9488 j \u4ece high \u5f80\u524d\u641c\u7d22\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u67a2\u8f74\u7684\u5143\u7d20 27 , \u5c06 27 \u4ea4\u6362\u5230 i \u6240\u6307\u4f4d\u7f6e \u3002","title":"\u4e3b\u8981\u601d\u60f3"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#c_2","text":"#include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; void QuickSort ( List * l , int low , int high ){ if ( low < high ){ //\u9012\u5f52\u8df3\u51fa\u7684\u6761\u4ef6 int pivotpos = Partition ( l , low , high ); //\u5212\u5206 QuickSort ( l , low , pivotpos -1 ); //\u4f9d\u6b21\u5bf9\u4e24\u4e2a\u5b50\u8868\u8fdb\u884c\u9012\u5f52\u64cd\u4f5c QuickSort ( l , pivotpos + 1 , high ); } } int Partition ( List * l , int low , int high ){ int pivot = l -> r [ low ]; while ( low < high ){ while ( low < high && l -> r [ high ] >= pivot ) -- high ; l -> r [ low ] = l -> r [ high ]; while ( low < high && l -> r [ low ] <= pivot ) ++ low ; l -> r [ high ] = l -> r [ low ]; } l -> r [ low ] = pivot ; return low ; } void Print ( List l ){ for ( int i = 0 ; i < l . length ; i ++ ){ printf ( \"%d \" , l . r [ i ]); } printf ( \" \\n \" ); } void main (){ List l = {{ 49 , 38 , 65 , 97 , 76 , 13 , 27 , 49 }, 8 }; Print ( l ); QuickSort ( & l , 0 , 7 ); Print ( l ); }","title":"\u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_7","text":"\u5728\u5212\u5206\u7b97\u6cd5\u4e2d\uff0c\u82e5\u53f3\u7aef\u533a\u95f4\u6709\u4e24\u4e2a\u5173\u952e\u5b57\u76f8\u540c\uff0c\u4e14\u5747\u5c0f\u4e8e\u57fa\u51c6\u503c\u7684\u8bb0\u5f55\uff0c\u5219\u5728\u4ea4\u6362\u5230\u5de6\u7aef\u533a\u95f4\u540e\uff0c\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5373\u5feb\u901f\u6392\u5e8f\u662f\u4e00\u79cd\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\u3002\u4f8b\u5982 , \u8868 l = { 3, 2 , 2 }\uff0c\u7ecf\u8fc7\u4e00\u8d9f\u6392\u5e8f\u540e l = { 2, 2, 3 }\uff0c\u6700\u7ec8\u6392\u5e8f\u5e8f\u5217\u4e5f\u662f l = { 2 , 2, 3 }\uff0c\u663e\u7136 \uff0c2 \u4e0e 2 \u7684\u76f8\u5bf9\u6b21\u5e8f\u5df1\u53d1\u751f\u4e86\u53d8\u5316 \u3002","title":"\u7a33\u5b9a\u6027"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_8","text":"","title":"\u4e09\u3001\u9009\u62e9\u6392\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#31","text":"","title":"3.1 \u7b80\u5355\u9009\u62e9\u6392\u5e8f"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#_9","text":"\u5047\u8bbe\u8981\u6392\u5e8f\u7684\u5e8f\u5217\u662fL(1...n)\uff0c\u7b2ci\u8d9f\u6392\u5e8f\u4eceL(i...n)\u91cc\u9762\u9009\u51fa\u6700\u5c0f\u7684\u5143\u7d20\u4e0eL(i)\u4ea4\u6362\uff0c\u6bcf\u4e00\u8d9f\u6392\u5e8f\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u7ec8\u4f4d\u7f6e\uff0c\u5f85\u6392\u5e8f\u5143\u7d20\u4e5f\u5c31\u5c11\u4e86\u4e00\u4e2a\uff0c\u7ecf\u8fc7n-1\u8d9f\u6392\u5e8f\u540e\u5e8f\u5217\u6709\u5e8f\u3002","title":"\u4e3b\u8981\u601d\u60f3"},{"location":"blog/01_%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/#c_3","text":"#include <stdio.h> #define MAX 30 //\u5b9a\u4e49\u6570\u7ec4 typedef struct { int r [ MAX ]; int length ; } List ; void selectsort ( List & l ) //mian idear is remmber the number of smallest element after every compare with others { int k , i , j , t ; for ( i = 1 ; i < l . length ; i ++ ) //\u4e3a\u4e86\u4e0b\u6807\u4e0e\u5143\u7d20\u5e8f\u53f7\u7684\u7edf\u4e00\u6027\uff0c\u8fd9\u91cc\u8bbe\u7f6el.r[0]\u6ca1\u6709\u5b58\u653e\u6570\u636e\uff0c\u4ecel.r[1]\u5f00\u59cb\u5b58\u653e\u6570\u636e { k = i ; for ( j = i + 1 ; j <= l . length ; j ++ ) if ( l . r [ j ] < l . r [ k ]) k = j ; if ( k != i ) { t = l . r [ k ]; l . r [ k ] = l . r [ i ]; l . r [ i ] = t ; } } } int initial ( List & l ) { int i ; printf ( \"input size:\" ); scanf ( \"%d\" , & l . length ); printf ( \"input data please:\" ); for ( i = 1 ; i <= l . length ; i ++ ) { scanf ( \"%d\" , & l . r [ i ]); } return 1 ; } main () { List l ; int i ; initial ( l ); selectsort ( l ); printf ( \"output data:\" ); for ( i = 1 ; i <= l . length ; i ++ ) printf ( \"%d \" , l . r [ i ]); }","title":"\u7b97\u6cd5\u5b9e\u73b0\uff08C\u8bed\u8a00\uff09"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/","text":"\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c\uff08\u4e00\uff09 \u00b6 \u53c2\u8003\u6587\u6863\u8bf4\u660e\uff1a TS33127 clause 6.2 \u63cf\u8ff0\u5404\u4e2a\u7f51\u5143\uff08\u6839\u636eX1\u6307\u4ee4\uff09\u7684\u76d1\u542c\u6d88\u606f\u7c7b\u578b\uff08\u5982AMF\u7684Registration\u6d88\u606f\u3001SMF\u7684pDUSessionModification\u6d88\u606f\u7b49\uff09 TS33128 clause 6.2 \u63cf\u8ff0\u5404\u4e2a\u7f51\u5143\u63a5\u6536\u7684X1\u6d88\u606f\u683c\u5f0f\u53ca\u5e94\u4ea7\u751f\u7684X2\u6216X3\u6d88\u606f\u683c\u5f0f ETSI TS103 280 \u63cf\u8ff0LI\u63a5\u53e3\u7684\u516c\u5171\u53c2\u6570\u53ca\u53c2\u6570\u6821\u9a8c\u89c4\u5219 ETSI TS102 221-1 \u63cf\u8ff0X1\u6d88\u606f ETSI TS102 221-2 \u63cf\u8ff0X\u2154\u6d88\u606f TS_103_28_v020701.xsd \u901a\u7528xs\u7c7b\u578b\u89e3\u91ca TS_103_221_-1_v010601.xsd X1\u534f\u8bae\u4e13\u6709xs\u7c7b\u578b\u89e3\u91ca \u672c\u6587\u5c06\u7b80\u5355\u63cf\u8ff05G\u6838\u5fc3\u7f51\u7684\u5408\u6cd5\u76d1\u542c\uff0c\u540e\u7eed\u5c06\u8bb2\u89e3\u5408\u6cd5\u76d1\u542cX1\u548cX2/X3\u6d88\u606f\u7684\u6784\u9020\u53ca\u7f16\u7801 \u4e00\u3001 \u4ec0\u4e48\u662f\u5408\u6cd5\u76d1\u542c\uff1f \u00b6 \u5408\u6cd5\u76d1\u542c\u662f\u653f\u5e9c\u5f3a\u5236\u8981\u6c42\u7684\uff0c\u8fd0\u8425\u5546\u9700\u8981\u63d0\u4f9b\u4e00\u5957\u63a5\u53e3\u7ed9\u6709\u5173\u90e8\u95e8\u8c03\u7528\uff0c\u4ee5\u76d1\u542c\u7528\u6237\u7684\u884c\u4e3a\u3002\u5408\u6cd5\u76d1\u542c\u5728\u6838\u5fc3\u7f51\u5c42\u9762\u6d89\u53ca\u5230X\u00bd/3\uff0cT\u2154\u63a5\u53e3\uff0c \u4e8c\u3001 \u5408\u6cd5\u76d1\u542c\u5728\u6838\u5fc3\u7f51\u91cc\u9762\u6d89\u53ca\u5230\u4ec0\u4e48\u5185\u5bb9\uff1f \u00b6 ADMF: Administration Function, \u63d0\u4f9bCSP\u7684\u5408\u6cd5\u76d1\u542c\u7684\u7ba1\u7406\u529f\u80fd TF: \u7531LIPF\u63d0\u4f9b\uff0c\u8d1f\u8d23\u89e6\u53d1POI\uff0c\u53d1\u9001\u62e6\u622a\u89c4\u5219\u3001\u8f6c\u53d1\u89c4\u5219\u3001\u76ee\u6807\u6807\u8bc6\u548c\u76f8\u5173\u4fe1\u606f\uff08\u7ed9POI\uff09 POI(NF/NE): \u5408\u6cd5\u76d1\u542c\u529f\u80fd\u7684\u5b9e\u65bd\u8005\uff0c\u8d1f\u8d23\u6309ADMF\u7684\u8981\u6c42\u91c7\u96c6\u6570\u636e\uff0c\u5e76\u901a\u8fc7X\u2154\u63a5\u53e3\u53d1\u9001\u7ed9LEMF\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u4e00\u79cd\u662fIRI-POI\uff0c\u4ea7\u751fxIRI\uff08Intercept Related Information\uff09\u6d88\u606f\u901a\u8fc7X2\u63a5\u53e3\u53d1\u7ed9MDF2\uff1b\u4e00\u79cd\u662fCC-POI\uff0c\u4ea7\u751fxCC\uff08Content of Communication\uff09\u6d88\u606f\u901a\u8fc7X3\u63a5\u53e3\u53d1\u7ed9MDF3 MDF: \u8c03\u89e3\u548c\u4ea4\u4ed8\u529f\u80fd\uff0c\u6267\u884c\u5fc5\u8981\u7684\u7ffb\u8bd1\u3001\u5173\u8054\u548c\u8c03\u89e3\uff0c\u901a\u8fc7HI2\u548cHI3\u63a5\u53e3\u5c06\u6750\u6599\uff08IRI/CC\uff09\u79fb\u4ea4\u7ed9LEMF\uff0c\u8fd9\u90e8\u5206\u529f\u80fd\u53ef\u76f4\u63a5\u7531NF/NE\u5b9e\u73b0 LI\u5728\u6838\u5fc3\u7f51\u7684\u5177\u4f53\u67b6\u6784\uff1a \u6838\u5fc3\u7f51\u9700\u8981\u5173\u6ce8\u7684\u6d41\u7a0b\uff08\u4e3e\u4f8b\uff09 \u00b6 Intercept-Related Information (IRI) from 5GC NFs Intercept-related information also referred to as Events are triggered by activities detected at the Network Function and provided to the LI. The IRI Event are generated based on SUCI or PEI or GPSI (Generic Public Subscription Identifier) Identities. IRI Event applicable to the AMF are: Registration Deregistration Location update Start of interception with already registered UE. Unsuccessful communication attempt. IRI Event applicable to SMF/UPF include: PDU Session establishment PDU Session modification PDU Session release Start of interception with an established PDU Session Using above information Target identity, Time stamp , Correlation information, Location information , Session related information is provided to Law Enforcement Facility via MDF function. \u4e09\u3001X1\u63a5\u53e3\u53ca\u901a\u4fe1\u6a21\u578b \u00b6 a. \u6d88\u606f\u4f20\u9012 \u00b6 NE\u6216\u8005ADMF\u90fd\u53ef\u80fd\u4e3b\u52a8\u53d1\u8d77\u8bf7\u6c42\uff0c\u5927\u591a\u6570\u60c5\u51b5\u90fd\u662fADMF\u4e3b\u52a8\u53d1\u8d77Request\uff0c\u5c11\u6570\u60c5\u51b5NE\u4f1a\u53d1\u8d77Request\u7528\u4e8e\u4f20\u9012fault reports\u7b49\u6d88\u606f. \u6d88\u606f\u5bb9\u5668 \uff1aRequestContainer\u3001ResponseContainer \u4e00\u4e2a\u5bb9\u5668\u5185\u7684\u6240\u6709\u6d88\u606f\u662f\u540c\u4e00\u65f6\u95f4\uff08\u6ca1\u6709\u5148\u540e\u987a\u5e8f\uff09\u4ea4\u4ed8\u7684\uff08\u4ece\u540c\u4e00\u4e2aRequester\u5230\u540c\u4e00\u4e2aResponder\u6216\u4ece\u540c\u4e00\u4e2aResponder\u5230\u540c\u4e00\u4e2aRequester\uff09 \u6ce8\u610f \uff1a\u53ea\u6709\u4e00\u4e2arequest\u6216response\u6d88\u606f\u4e5f\u53ef\u4ee5container\u5185\u4f20\u9001 b. \u65f6\u95f4\u8981\u6c42\u53ca\u884c\u4e3a \u00b6 Requester\u53d1\u9001\u8bf7\u6c42\u6d88\u606f\u7ed9Responder\uff0c\u8981\u6c42Responder\u5728TIME1\u65f6\u95f4\u5185\u8fd4\u56deResponse\uff0cTIME1\u901a\u5e38\u53ef\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a5s\uff0cRequester\u4f1a\u7b49\u5f85TIME2\u65f6\u95f4\uff0cTIME2\u65f6\u95f4\u901a\u5e38\u53ef\u914d\u7f6e\uff0c\u81f3\u5c11\u662f2\u500d\u7684TIME1\uff0c\u9ed8\u8ba4\u4e3a15s \u82e5\u5728TIME1\u65f6\u95f4\u5185\uff0cResponder\u6ca1\u6709\u5904\u7406\u5b8cTask\u6216\u8005Task\u5904\u7406\u5931\u8d25\uff0c\u5219\u8fd4\u56deOK - Acknowledged\uff0c\u4e00\u65e6action\u5b8c\u6210\u6216\u8005Task\u5931\u8d25\uff0cResponder\uff08\u901a\u5e38\u662fNE\uff09\u8981\u4e3b\u52a8\u53d1status report\u7ed9\u5bf9\u65b9\uff0c\u4f7f\u7528\u76f8\u540c\u7684XID\u6216\u8005DID\uff0c\u4f46\u8fd9\u6761\u6d88\u606f\u62e5\u6709\u81ea\u5df1\u7684X1TrancationID\uff08\u7531\u62a5\u544a\u65b9\u751f\u6210\uff09 \u6ce8\u610f \uff1aOK-Acknowledged\u6d88\u606f\u53ea\u80fd\u7528\u4e8eTask\u7684Activating\u3001Modifying\u3001Deleting\u6216\u8005\u5176\u4ed6Task\uff0c\u5bf9\u4e8e\u901a\u8fc7\u201cRequestContainer\u201d\u4f20\u8f93\u7684\u8bf7\u6c42\u6536\u5230\u7684\u6bcf\u4e2a\u201cOK - Acknowledged\u201d\u54cd\u5e94\uff0c\u8bf7\u6c42\u8005\uff08\u901a\u5e38\u662fADMF\uff09\u5e94\u5b9e\u65bd\u903b\u8f91\u4ee5\u786e\u4fdd\u6536\u5230\u76f8\u5173\u72b6\u6001\u62a5\u544a\uff08\u901a\u5e38\u6765\u81eaNE\uff09\u5e76\u5b8c\u6210\u4ea4\u6613\u6216\u542f\u52a8\u6062\u590d\u7a0b\u5e8f\uff08\u5411NE\u53d1\u8d77\u65b0\u7684Activating\u6216Modifying\u6216Deleting\u7b49\u8bf7\u6c42\uff09\u3002 \u82e5\u5728TIME2\u65f6\u95f4\u5185\uff0cRequester\u6ca1\u6709\u6536\u5230Responder\u7684Response\uff0c\u6216\u8005\u6ca1\u6709\u6536\u5230NE\u7684status report\uff08OK-Acknowledge\uff09\uff0cRequester\u5c06\u5047\u8bbeRequest\u53d1\u9001\u5931\u8d25\u6216\u8005Response\u63a5\u6536\u5931\u8d25\u3002\u6b64\u65f6Requester\u53ef\u4ee5\u8003\u8651\u4e24\u79cd\u505a\u6cd5\uff1a1. \u8bf7\u6c42\u4e0a\u4e2aTask\u7684XID\u7684status\uff0c\u8003\u8651\u662f\u5426\u9700\u8981ActivateTask\u3001ModifyTask\u3001DeactivateTask\u3001DeactivateAllTasks\uff1b2. Requester\u8003\u8651Re-send the Task\uff08\u7528\u65b0\u7684Request\u4ee5\u53ca\u65b0\u7684X1TransactionID\uff09 c. \u544a\u8b66\u548c\u9519\u8bef(fault)(TS103 221-1 clause 5.3) \u00b6 \uff081\uff09\u544a\u8b66\u662f\u4e00\u6b21\u6027\u95ee\u9898\uff0c\u5373\u7531NE\u53d1\u7ed9ADMF\uff0c\u7136\u540e\u4e0d\u518d\u5360\u7528X1\u63a5\u53e3\u3002\u544a\u8b66\u4e0d\u7528\u4e8e\u5f71\u54cd\u6d41\u91cf\u7684issue\uff08\u4f8b\u5982\u4e22\u5931content\u6216\u8005intercept-related-related\u4fe1\u606f\uff09\u3002\u4f8b\u5982\u8d44\u6e90\u5373\u5c06\u8017\u5c3d\uff08\u8be5\u6d88\u606f\u4e0d\u80fd\u5f71\u54cd\u6d41\u91cf\uff09\u3001\u8bc1\u4e66/\u5bc6\u94a5\u5373\u5c06\u5230\u671f\u7b49\u60c5\u51b5 \u6ce8\u610f \uff1a\u544a\u8b66\u9700\u8981\u4f7f\u7528issue-reporting messages\u7c7b\u578b\u7684\u6d88\u606f\u800c\u4e0d\u80fd\u7528Status-Getting messages\u3002\u51fa\u4e8e\u5ba1\u67e5\u539f\u56e0\uff0cNE\u9700\u8981\u8bb0\u5f55\u6240\u6709\u7684\u544a\u8b66 \uff082\uff09fault\uff1aNE\u53d1\u73b0\u95ee\u9898\u5e76\u4e14\u5c1d\u8bd5\u7ba1\u7406\u6216\u7ea0\u6b63\u8be5\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u6d41\u91cf\u4e22\u5931\u7684\u95ee\u9898\u88ab\u5f52\u7c7b\u4e3afault \u56db\u3001X1\u6d88\u606f \u00b6 4.1 Basic Message \u00b6 Field Description Format M/O/C ADMF Identifier \u5bf9NE\u7684\u552f\u4e00\u6807\u8bc6\u7b26 ,Required to match the details provided Recommendation [3]\uff0cthe ADMF's X.509 certificate (see clause 8) xs:token M NE Identifier \u5bf9ADMF\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0cequired to match the details provided Recommendation [3]\uff0cthe ADMF's X.509 certificate (see clause 8) xs:token M Message Timestamp \u6307\u793aRequester\u53d1\u9001\u8be5\u6d88\u606f\u7684time QualifiedMicrosecondDateTime xs:dateTime 2017-10-06T18:46:21.247432Z M Version \u7528\u4e8e\u7f16\u7801\u65f6\u6807\u8bc6\u534f\u8bae\u6587\u6863\u7684\u7248\u672c v1.7.1 M X1 TranscationID \u7528\u4e8e\u5173\u8054Request\u548cResponse UUIDv4 C 4.2 Message Type \u00b6 4.2.1 Task Control\uff1a \u00b6 ActivateTask ModifyTask DeactivateTask DeactivateAllTasks 4.2.2 Destination Control\uff1a \u00b6 CreateDestination ModifyDestination RemoveDestination RemoveAllDestinations 4.2.3 Getting Information from NE\uff1a \u00b6 GetTaskDetails GetDestinationDetails GetNEStatus GetAllDetails ListAllDetails 4.2.4 Reporting issues from the NE \u00b6 ReportTaskIssue on given XID ReportDestinationIssue on given DID ReportNEIssue 4.2.5 Pings and Keepalives \u00b6 Ping Keepalive 4.3 Message Definitions: task control \u00b6 Direction : ADMF to NE Request : Field Description Format M/C/O TaskDetails \u76ee\u6807\u548c\u76d1\u542c\u7ec6\u8282 \u89c1\u4e0b\u8868 M Field Description Format M/C/O XID \u4efb\u52a1\u7684\u552f\u4e00\u6807\u8bc6 UUIDv4 M TargetIdentifiers \u6807\u8bc6\u8981\u62e6\u622a\u7684\u6d41\u91cf\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u6807\u51c6\uff0c\u5219\u9700\u8981\u5339\u914d\u6240\u6709\u6807\u51c6\u3002\u5982\u679c NE \u4e0d\u80fd\u6839\u636e\u6307\u5b9a\u7684\u6807\u51c6\u8fdb\u884c\u5b9a\u4f4d\uff08\u4f8b\u5982\uff0c\u7531\u4e8e\u4e0d\u652f\u6301\u7684\u683c\u5f0f\u6216\u6807\u8bc6\u7b26\u7684\u4e0d\u9002\u5f53\u7ec4\u5408\uff09\uff0c\u5219 NE \u5e94\u4ee5\u9002\u5f53\u7684\u9519\u8bef\u62d2\u7edd\u8be5\u8bf7\u6c42 \u89c1\u4e0b\u8868 M DeliveryType \u6807\u8bc6\u6570\u636e\u4ea4\u4ed8\u7684\u65f6\u5019\u662f\u7528X2\u8fd8\u662fX3\u63a5\u53e3 Enumerated value - one of \"X2Only\",\"X3Only\" and \"X2andX3\". M ListOfDIDs \u6570\u636e\u4ea4\u4ed8\u7684\u76ee\u7684\u5730ID\uff08DID\uff09\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2aDID\uff08\u5982\u679cNE\u652f\u6301\uff09 M ListOfMediationDetails C CorrelationID \u5206\u914d\u7ed9\u6b64\u4efb\u52a1\u7684\u622a\u83b7\u6750\u6599\u7684\u76f8\u5173\u6807\u8bc6\u7b26\u3002 \u7528\u4e8e\u89e6\u53d1\u573a\u666f\uff0c\u975e\u4e2d\u4ecb\u529f\u80fd\u7f51\u5143\u5e94\u5ffd\u7565\u3002 Unsigned integer O ImplicitDeactivationAllowed \u6307\u793a\u5f53Task\u5df2\u7ecf\u5b8c\u6210\u7684\u65f6\u5019\uff0cNE\u53ef\u4ee5\u81ea\u52a8deactivate\u8be5Task\uff0c\u5f53Task\u88abNE\u81ea\u52a8deactivate\u7684\u65f6\u5019\uff0cNE\u9700\u8981\u62a5\u544a\u5408\u9002\u7684TaskReportType\u7684ReportTaskIssue\u6d88\u606f Boolean O ProductID \u63d0\u4f9b\u65f6\uff0c\u63a5\u6536\u5b9e\u4f53\u5e94\u6839\u636eETSI TS 103 221-2 clause5.2.7\u8282\u4f7f\u7528\u5b83\u6765\u586b\u5145X2/X3 XID\u62a5\u5934\uff0c\u800c\u4e0d\u662f\u4efb\u52a1\u7684XID\u3002\u5982\u679c\u672a\u63d0\u4f9b\uff0c\u5219\u5e94\u4f7f\u7528\u4efb\u52a1\u7684XID UUIDv4 O TaskDetailsExtensions \u62d3\u5c55\u5360\u4f4d\u7b26\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09 O \u6ce8\u610f \uff1aIf a Task has an invalid combination of DeliveryType and Destinations (e.g. \"X2andX3\" delivery specified, but only an X2 Destination given), then the NE shall reject the ActivateTaskRequest with an appropriate error. \u8868 TargetIdentifier Formats:\uff08\u4e0d\u5168\uff09 Field Description Format M/C/O IMSI IMEI MAC Address IPv4 Address IPv6 Address TCP Port UDP Port TCP PortRange UDP PortRange EmailAddress IMPU IMPI NAI GTPUTunnelId GTPCTunnelId SUPIIMSI SUPINAI SUCI Response : Field Description Format M/C/O OK or Error M \u4e00\u822c\u6765\u8bf4\uff0cAMF\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981XID\u3001Targetdentifiers\u3001DeliveryType\u3001ListOfDIDs\u3001TaskDetailsExtensions(IdentifierAssociationExtensions) \u8be6\u60c5\u89c1TS33128 clause 6.2.2 4.4 Message Definitions: destination control \u00b6 Direction : ADMF to NE Request : Field Description Format M/C/O Destination details \u65b0\u76ee\u7684\u5730\u7684\u8be6\u60c5 M Field Description Format M/C/O DID UUIDv4 M FriendlyName string O DeliveryType \u6807\u8bc6\u6570\u636e\u4ea4\u4ed8\u7684\u65f6\u5019\u662f\u7528X2\u8fd8\u662fX3\u63a5\u53e3 Enumerated value - one of \"X2Only\", \"X3Only\" and \"X2andX3\"\uff0cX2Only\u548cX3Only\u6700\u5e38\u7528 M DeliveryAddress \u4ea4\u4ed8\u5730\u5740 \u89c1\u4e0b\u8868 M DestinationDetailsExtensions \u62d3\u5c55\u5360\u4f4d\u7b26\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09 O Field Description Format IPAddressAndPort \u9700\u652f\u6301IPv4/IPv6\uff0c\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u5730\u5740\u548c\u7aef\u53e3 E164Number E.164 \u76ee\u7684\u5730 URI \u5982FQDN\u6216\u8005\u5176\u4ed6\u5f62\u5f0f\u7684URI EmailAddress Email \u5730\u5740 Response : Field Description Format M/C/O OK or Error M 4.5 Message Definitions: getting information from NE \u00b6 4.6 Message Definitions: reporting issues from the NE \u00b6 4.7 Message Definitions: Pings and Keepalives \u00b6 4.8 X1 Error Response Message \u00b6 Field Description Format M/C/O RequestMessageType \u6307\u793a\u5bf9\u5e94\u7684\u662f\u54ea\u4e2aRequest One of the following: \"ActivateTask\", \"ModifyTask\", \"DeactivateTask\", \"DeactivateAllTasks\", \"GetTaskDetails\", \"CreateDestination\", \"ModifyDestination\", \"RemoveDestination\", \"RemoveAllDestinations\", \"GetDestinationDetails\", \"GetNEStatus\", \"GetAllDetails\", \"ListAllDetails\", \"ReportTaskIssue\", \"ReportDestinationIssue\", \"ReportNEIssue\", \"Ping\", \"Keepalive\" M ErrorInformation \u9519\u8bef\u7801\u53ca\u53ef\u9009\u7684\u9519\u8bef\u63cf\u8ff0 \u89c1\u4e0b\u8868 M Field Description Format M/C/O ErrorCode \u6807\u8bc6\u54ea\u79cd\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u89c1ETSI TS103221-1 caluse 6.7, Table 46 Integer M ErrorDescription Free text field giving further details of the error. Implementers are encouraged to avoid placing sensitive information (such as personally identifiably information or sensitive details of the network) in error messages. UTF-8 string C 4.9 \u4e00\u4e2a\u57fa\u672c\u7684x1\u6d88\u606f\u6d41\u7a0b \u00b6 \u4ece\u672c\u7ae0\u7684c\u8282\u90e8\u5206\u5bf9task\u6d88\u606f\u7684\u5b9a\u4e49\u63cf\u8ff0\u770b\uff0c\u4e00\u4e2atask\u5728\u88abactivate\u7684\u65f6\u5019\u4f1a\u6307\u5b9adestination\u7684id\u5217\u8868\uff0c\u4e5f\u5c31\u662fListOfDIDs\uff0c\u800cDID\u662fuuid\u6807\u8bc6\uff0c\u4e0d\u662f\u76ee\u6807\u673a\u5668\u7684ip\u6216\u8005\u57df\u540d\uff0cNE\u8fd9\u4e2a\u65f6\u5019\u662f\u65e0\u6cd5\u628a\u751f\u6210\u7684xIRI\u6216xCC\u6d88\u606f\u53d1\u7ed9\u6307\u5b9a\u7684\u76ee\u6807\u7684\u3002 x1\u534f\u8bae\u8fd8\u5b9a\u4e49\u4e86\u4e00\u79cd\u6d88\u606f\u7c7b\u578b\u53ebdestination control\uff0c\u672c\u7ae0\u7684d\u8282\u90e8\u5206\u662f\u5bf9destination\u7684\u63cf\u8ff0\uff0cdestination\u652f\u6301ip\u5730\u5740\u3001email\u7b49\u65b9\u5f0f\u6307\u5b9a\u76ee\u6807\u673a\u5668\u3002 \u6240\u4ee5\uff0c\u5728activate\u4e00\u4e2atask\u4e4b\u524d\uff0c\u9700\u8981\u5148create\u4e00\u4e2adestination\uff0c\u544a\u8bc9NE\u6240\u6709\u53ef\u80fd\u63a5\u6536x\u2154\u6d88\u606f\u7684\u76ee\u6807\u7684ID\u548c\u771f\u5b9e\u5730\u5740\uff0cNE\u56de\u590d\u4e00\u4e2aresp\uff0c\u7136\u540e\u624d\u5bf9NE\u4e0b\u8fbe\u5177\u4f53\u7684\u76d1\u542c\u4efb\u52a1\uff0c\u6307\u5b9a\u9700\u8981\u4ea4\u4ed8\u7684\u76ee\u6807\u7684id\uff0cNE\u56de\u590d\u4e00\u4e2aresp\u3002\u8fd9\u6837\uff0c\u4e00\u4e2a\u6700\u57fa\u672c\u7684X1\u6d88\u606f\u6d41\u7a0b\u5c31\u5b8c\u6210\u4e86 4.10 X1\u6d88\u606f\u4f20\u8f93\u65b9\u5f0f \u00b6 \u4f7f\u7528HTTPS\u8fdb\u884c\u4f20\u8f93\u3002\u5176\u4e2d\uff0cHTTPS\u4f7f\u7528\u57fa\u4e8eHTTP+TLS\u7684\u65b9\u6848\uff0cHTTP\u9700\u4f7f\u7528HTTP1.1\u6216HTTP2 \u6ce8\u610f\uff1a HTTP \u72b6\u6001\u7801\u4ec5\u7528\u4e8e\u8868\u793aHTTP\u5c42\u7684\u4f20\u8f93\u7ed3\u679c\uff0c\u4e0d\u4f5c\u4e3aX1\u7684Error Message\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u65e0\u8bbaX1\u6d88\u606f\u5185\u5bb9\u5982\u4f55\uff0cHTTP Status \u90fd\u5e94\u8be5\u4e3a200 OK \u4e94\u3001LI_T\u2154\u63a5\u53e3 \u00b6 LI_T\u2154\u9002\u7528\u4e8eTriggering deployment model\uff0c\u5373\u89e6\u53d1\u5668\u6a21\u578b\uff0c\u5982\u4e0b\u6240\u793a LI_T\u2154\u63a5\u53e3\u540c\u6837\u4f7f\u7528X1\u6d88\u606f\u8fdb\u884c\u901a\u4fe1\u3002\u56e0\u4e3a\u4e00\u4e9b\u6570\u636e\u7684\u4ea7\u751f\u662f\u9700\u8981\u6761\u4ef6\u89e6\u53d1\u7684\uff0c\u4f8b\u5982\u5f53SMF\u68c0\u6d4b\u5230UE\u5efa\u7acb\u4e86\u4e00\u6761PDU session\u7684\u65f6\u5019\uff0cSMF\u9700\u8981\u89e6\u53d1UPF\u8fdb\u884c\u8be5UE\u7684\u5408\u6cd5\u76d1\u542c\uff08When the CC-TF in the SMF detects that a PDU session is being established for a target UE (i.e. when the SMF sends the N4: Session Establishment Request), it shall send an activation message to the CC-POI in the UPF over the LI_T3 interface. \uff09 \u5982\u4f55\u786e\u5b9a\u4f7f\u7528T2\u8fd8\u662fT3\u63a5\u53e3\uff1f \u9996\u5148\uff0cLEA\u4e0d\u8981\u6c42\u76d1\u542c\u901a\u4fe1\u5185\u5bb9\uff0c\u4f46\u53ef\u80fd\u8981\u6c42\u9700\u8981\u7528\u6237\u9762\u6570\u636e\u5305\u7684IRI\u6d88\u606f\uff08\u8fd9\u4e9b\u6d88\u606f\u5fc5\u987b\u4ece\u7528\u6237\u9762\u6570\u636e\u5305\u4e2d\u5bfc\u51fa\uff09 To support the generation of related xIRI (i.e. that requires access to the user plane packets), the present document supports two implementation approaches:\uff08TS33127-h20 clause 7.12.2.3\uff09 - In approach 1, xIRI (that includes the correlation number and the target identity) is generated by the IRI-POI in the UP Entity. The IRI-POI generates the xIRI from the user plane packets and sends it to the MDF2. The MDF2 generates the IRI messages and sends them to the LEMF. In approach 2, xCC is generated by the CC-POI in the UP Entity as if the warrant involves the interception of communication contents. To enable this, the CC-POI is presumed to be present and provisioned in the UP Entity even when the warrant does not require the interception of communication contents. The CC-POI generates the xCC and sends it to the MDF3. The MDF3 (based on the provisioned intercept information) does not generate and deliver the CC to the LEMF. Instead, the MDF3 forwards the xCC to the MDF2 over LI_MDF interface. The MDF2 then generates the IRI messages from xCC and delivers those IRI messages to the LEMF. In 5GS and CUPS EPS, the POI in the UP Entity requires a trigger to enable it to detect the user plane packets. The corresponding Triggering Function (IRI-TF or CC-TF) resides in the CP Entity that has the IRI-POI for the generation of other xIRI. The trigger sent by the IRI-TF or CC-TF to the corresponding POI includes the following: User plane packet detection rules. Target identity. Correlation information. MDF2 (in approach 1) or MDF3 (in approach 2) address. \u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u4ea7\u751fxIRI\u6d88\u606f\uff0c\u5982\u679c\u662fapproach1\uff0c\u5219\u4f7f\u7528LI_T2\u63a5\u53e3\uff1b\u5982\u679c\u662fapproach2\uff0c\u5219\u4f7f\u7528LI_T3\u63a5\u53e3\u3002 SMF\u4f7f\u7528T2\u6216T3\u63a5\u53e3\u7684\u8be6\u60c5\u89c1TS33128 caluse 6.2.3.3\u53caTS33128 caluse 6.2.3.4 UPF\u7684\u751f\u6210xCC\u53caxIRI\u6d88\u606f\u7684\u8be6\u60c5\u89c1TS33128 caluse 6.2.3.5\u53caTS33128 caluse 6.2.3.6 \u516d\u3001X\u2154\u6d88\u606f \u00b6 5G\u6838\u5fc3\u7f51\u57fa\u672c\u4e8b\u4ef6\uff1a AMF\uff08TS33128 clause\uff09 SMF\uff08TS33128 clause6.2.3.2\uff09 UDM\uff08TS33128 clause\uff09 UPF\uff08TS33128 clause\uff09 AMFRegistration SMFPDUSessionEstablishment UDMServingSystemMessage PDHeaderReport AMFDeregistration SMFPDUSessionModification PDSummaryReport AMFLocationUpdate SMFPDUSessionRelease AMFStartOfInterceptionWithRegisteredUE SMFStartOfInterceptionWithEstablishedPDUSession AMFUnsuccessfulProcedure SMFUnsuccessfulProcedure \u6761\u4ef6\u4e8b\u4ef6\uff08\u4e0d\u5168\uff09\uff1a AMF SMF UDM UPF AMFIdentifierAssociation SMFMAPDUSessionEstablishment UDMSubscriberRecordChangeMessage SMFMAPDUSessionModification UDMCancelLocationMessage SMFMAPDUSessionRelease SMFMAUnsuccessfulProcedure SMFPDUtoMAPDUSessionModification xIRI\u6d88\u606f\u7684\u66f4\u591a\u8be6\u60c5\u53ef\u4ee5\u67e5\u96053GPP TS33128\u534f\u8baeAnnex A\u7ae0\u8282ASN.1\u63cf\u8ff0\u53caETSI TS103221-2\u6587\u6863 \u9644\u5f55 A - X1\u6d88\u606f\u5b9e\u4f8b \u00b6 <?xml version=\"1.0\" ?> <ns1:X1Request xmlns:ns1= \"http://uri.etsi.org/03221/X1/2017/10\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" > <ns1:x1RequestMessage xsi:type= \"ns1:ActivateTaskRequest\" > <ns1:admfIdentifier> admfID </ns1:admfIdentifier> <ns1:neIdentifier> neID </ns1:neIdentifier> <ns1:messageTimestamp> 2017-10-06T18:46:21.247432Z </ns1:messageTimestamp> <ns1:version> v1.6.1 </ns1:version> <ns1:x1TransactionId> 3741800e-971b-4aa9-85f4-466d2b1adc7f </ns1:x1TransactionId> <ns1:taskDetails> <ns1:xId> 29f28e1c-f230-486a-a860-f5a784ab9172 </ns1:xId> <ns1:targetIdentifiers> <ns1:targetIdentifier> <ns1:e164Number> 447700900000 </ns1:e164Number> </ns1:targetIdentifier> </ns1:targetIdentifiers> <ns1:deliveryType> X2andX3 </ns1:deliveryType> <ns1:listOfDIDs> <ns1:dId> 19867c20-8c94-473e-b9cd-8b72b7b05fd4 </ns1:dId> </ns1:listOfDIDs> </ns1:taskDetails> </ns1:x1RequestMessage> </ns1:X1Request>","title":"\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c\uff08\u4e00\uff09"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#_1","text":"\u53c2\u8003\u6587\u6863\u8bf4\u660e\uff1a TS33127 clause 6.2 \u63cf\u8ff0\u5404\u4e2a\u7f51\u5143\uff08\u6839\u636eX1\u6307\u4ee4\uff09\u7684\u76d1\u542c\u6d88\u606f\u7c7b\u578b\uff08\u5982AMF\u7684Registration\u6d88\u606f\u3001SMF\u7684pDUSessionModification\u6d88\u606f\u7b49\uff09 TS33128 clause 6.2 \u63cf\u8ff0\u5404\u4e2a\u7f51\u5143\u63a5\u6536\u7684X1\u6d88\u606f\u683c\u5f0f\u53ca\u5e94\u4ea7\u751f\u7684X2\u6216X3\u6d88\u606f\u683c\u5f0f ETSI TS103 280 \u63cf\u8ff0LI\u63a5\u53e3\u7684\u516c\u5171\u53c2\u6570\u53ca\u53c2\u6570\u6821\u9a8c\u89c4\u5219 ETSI TS102 221-1 \u63cf\u8ff0X1\u6d88\u606f ETSI TS102 221-2 \u63cf\u8ff0X\u2154\u6d88\u606f TS_103_28_v020701.xsd \u901a\u7528xs\u7c7b\u578b\u89e3\u91ca TS_103_221_-1_v010601.xsd X1\u534f\u8bae\u4e13\u6709xs\u7c7b\u578b\u89e3\u91ca \u672c\u6587\u5c06\u7b80\u5355\u63cf\u8ff05G\u6838\u5fc3\u7f51\u7684\u5408\u6cd5\u76d1\u542c\uff0c\u540e\u7eed\u5c06\u8bb2\u89e3\u5408\u6cd5\u76d1\u542cX1\u548cX2/X3\u6d88\u606f\u7684\u6784\u9020\u53ca\u7f16\u7801","title":"\u6838\u5fc3\u7f51\u5408\u6cd5\u76d1\u542c\uff08\u4e00\uff09"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#_2","text":"\u5408\u6cd5\u76d1\u542c\u662f\u653f\u5e9c\u5f3a\u5236\u8981\u6c42\u7684\uff0c\u8fd0\u8425\u5546\u9700\u8981\u63d0\u4f9b\u4e00\u5957\u63a5\u53e3\u7ed9\u6709\u5173\u90e8\u95e8\u8c03\u7528\uff0c\u4ee5\u76d1\u542c\u7528\u6237\u7684\u884c\u4e3a\u3002\u5408\u6cd5\u76d1\u542c\u5728\u6838\u5fc3\u7f51\u5c42\u9762\u6d89\u53ca\u5230X\u00bd/3\uff0cT\u2154\u63a5\u53e3\uff0c","title":"\u4e00\u3001 \u4ec0\u4e48\u662f\u5408\u6cd5\u76d1\u542c\uff1f"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#_3","text":"ADMF: Administration Function, \u63d0\u4f9bCSP\u7684\u5408\u6cd5\u76d1\u542c\u7684\u7ba1\u7406\u529f\u80fd TF: \u7531LIPF\u63d0\u4f9b\uff0c\u8d1f\u8d23\u89e6\u53d1POI\uff0c\u53d1\u9001\u62e6\u622a\u89c4\u5219\u3001\u8f6c\u53d1\u89c4\u5219\u3001\u76ee\u6807\u6807\u8bc6\u548c\u76f8\u5173\u4fe1\u606f\uff08\u7ed9POI\uff09 POI(NF/NE): \u5408\u6cd5\u76d1\u542c\u529f\u80fd\u7684\u5b9e\u65bd\u8005\uff0c\u8d1f\u8d23\u6309ADMF\u7684\u8981\u6c42\u91c7\u96c6\u6570\u636e\uff0c\u5e76\u901a\u8fc7X\u2154\u63a5\u53e3\u53d1\u9001\u7ed9LEMF\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u4e00\u79cd\u662fIRI-POI\uff0c\u4ea7\u751fxIRI\uff08Intercept Related Information\uff09\u6d88\u606f\u901a\u8fc7X2\u63a5\u53e3\u53d1\u7ed9MDF2\uff1b\u4e00\u79cd\u662fCC-POI\uff0c\u4ea7\u751fxCC\uff08Content of Communication\uff09\u6d88\u606f\u901a\u8fc7X3\u63a5\u53e3\u53d1\u7ed9MDF3 MDF: \u8c03\u89e3\u548c\u4ea4\u4ed8\u529f\u80fd\uff0c\u6267\u884c\u5fc5\u8981\u7684\u7ffb\u8bd1\u3001\u5173\u8054\u548c\u8c03\u89e3\uff0c\u901a\u8fc7HI2\u548cHI3\u63a5\u53e3\u5c06\u6750\u6599\uff08IRI/CC\uff09\u79fb\u4ea4\u7ed9LEMF\uff0c\u8fd9\u90e8\u5206\u529f\u80fd\u53ef\u76f4\u63a5\u7531NF/NE\u5b9e\u73b0 LI\u5728\u6838\u5fc3\u7f51\u7684\u5177\u4f53\u67b6\u6784\uff1a","title":"\u4e8c\u3001 \u5408\u6cd5\u76d1\u542c\u5728\u6838\u5fc3\u7f51\u91cc\u9762\u6d89\u53ca\u5230\u4ec0\u4e48\u5185\u5bb9\uff1f"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#_4","text":"Intercept-Related Information (IRI) from 5GC NFs Intercept-related information also referred to as Events are triggered by activities detected at the Network Function and provided to the LI. The IRI Event are generated based on SUCI or PEI or GPSI (Generic Public Subscription Identifier) Identities. IRI Event applicable to the AMF are: Registration Deregistration Location update Start of interception with already registered UE. Unsuccessful communication attempt. IRI Event applicable to SMF/UPF include: PDU Session establishment PDU Session modification PDU Session release Start of interception with an established PDU Session Using above information Target identity, Time stamp , Correlation information, Location information , Session related information is provided to Law Enforcement Facility via MDF function.","title":"\u6838\u5fc3\u7f51\u9700\u8981\u5173\u6ce8\u7684\u6d41\u7a0b\uff08\u4e3e\u4f8b\uff09"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#x1","text":"","title":"\u4e09\u3001X1\u63a5\u53e3\u53ca\u901a\u4fe1\u6a21\u578b"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#a","text":"NE\u6216\u8005ADMF\u90fd\u53ef\u80fd\u4e3b\u52a8\u53d1\u8d77\u8bf7\u6c42\uff0c\u5927\u591a\u6570\u60c5\u51b5\u90fd\u662fADMF\u4e3b\u52a8\u53d1\u8d77Request\uff0c\u5c11\u6570\u60c5\u51b5NE\u4f1a\u53d1\u8d77Request\u7528\u4e8e\u4f20\u9012fault reports\u7b49\u6d88\u606f. \u6d88\u606f\u5bb9\u5668 \uff1aRequestContainer\u3001ResponseContainer \u4e00\u4e2a\u5bb9\u5668\u5185\u7684\u6240\u6709\u6d88\u606f\u662f\u540c\u4e00\u65f6\u95f4\uff08\u6ca1\u6709\u5148\u540e\u987a\u5e8f\uff09\u4ea4\u4ed8\u7684\uff08\u4ece\u540c\u4e00\u4e2aRequester\u5230\u540c\u4e00\u4e2aResponder\u6216\u4ece\u540c\u4e00\u4e2aResponder\u5230\u540c\u4e00\u4e2aRequester\uff09 \u6ce8\u610f \uff1a\u53ea\u6709\u4e00\u4e2arequest\u6216response\u6d88\u606f\u4e5f\u53ef\u4ee5container\u5185\u4f20\u9001","title":"a. \u6d88\u606f\u4f20\u9012"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#b","text":"Requester\u53d1\u9001\u8bf7\u6c42\u6d88\u606f\u7ed9Responder\uff0c\u8981\u6c42Responder\u5728TIME1\u65f6\u95f4\u5185\u8fd4\u56deResponse\uff0cTIME1\u901a\u5e38\u53ef\u914d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a5s\uff0cRequester\u4f1a\u7b49\u5f85TIME2\u65f6\u95f4\uff0cTIME2\u65f6\u95f4\u901a\u5e38\u53ef\u914d\u7f6e\uff0c\u81f3\u5c11\u662f2\u500d\u7684TIME1\uff0c\u9ed8\u8ba4\u4e3a15s \u82e5\u5728TIME1\u65f6\u95f4\u5185\uff0cResponder\u6ca1\u6709\u5904\u7406\u5b8cTask\u6216\u8005Task\u5904\u7406\u5931\u8d25\uff0c\u5219\u8fd4\u56deOK - Acknowledged\uff0c\u4e00\u65e6action\u5b8c\u6210\u6216\u8005Task\u5931\u8d25\uff0cResponder\uff08\u901a\u5e38\u662fNE\uff09\u8981\u4e3b\u52a8\u53d1status report\u7ed9\u5bf9\u65b9\uff0c\u4f7f\u7528\u76f8\u540c\u7684XID\u6216\u8005DID\uff0c\u4f46\u8fd9\u6761\u6d88\u606f\u62e5\u6709\u81ea\u5df1\u7684X1TrancationID\uff08\u7531\u62a5\u544a\u65b9\u751f\u6210\uff09 \u6ce8\u610f \uff1aOK-Acknowledged\u6d88\u606f\u53ea\u80fd\u7528\u4e8eTask\u7684Activating\u3001Modifying\u3001Deleting\u6216\u8005\u5176\u4ed6Task\uff0c\u5bf9\u4e8e\u901a\u8fc7\u201cRequestContainer\u201d\u4f20\u8f93\u7684\u8bf7\u6c42\u6536\u5230\u7684\u6bcf\u4e2a\u201cOK - Acknowledged\u201d\u54cd\u5e94\uff0c\u8bf7\u6c42\u8005\uff08\u901a\u5e38\u662fADMF\uff09\u5e94\u5b9e\u65bd\u903b\u8f91\u4ee5\u786e\u4fdd\u6536\u5230\u76f8\u5173\u72b6\u6001\u62a5\u544a\uff08\u901a\u5e38\u6765\u81eaNE\uff09\u5e76\u5b8c\u6210\u4ea4\u6613\u6216\u542f\u52a8\u6062\u590d\u7a0b\u5e8f\uff08\u5411NE\u53d1\u8d77\u65b0\u7684Activating\u6216Modifying\u6216Deleting\u7b49\u8bf7\u6c42\uff09\u3002 \u82e5\u5728TIME2\u65f6\u95f4\u5185\uff0cRequester\u6ca1\u6709\u6536\u5230Responder\u7684Response\uff0c\u6216\u8005\u6ca1\u6709\u6536\u5230NE\u7684status report\uff08OK-Acknowledge\uff09\uff0cRequester\u5c06\u5047\u8bbeRequest\u53d1\u9001\u5931\u8d25\u6216\u8005Response\u63a5\u6536\u5931\u8d25\u3002\u6b64\u65f6Requester\u53ef\u4ee5\u8003\u8651\u4e24\u79cd\u505a\u6cd5\uff1a1. \u8bf7\u6c42\u4e0a\u4e2aTask\u7684XID\u7684status\uff0c\u8003\u8651\u662f\u5426\u9700\u8981ActivateTask\u3001ModifyTask\u3001DeactivateTask\u3001DeactivateAllTasks\uff1b2. Requester\u8003\u8651Re-send the Task\uff08\u7528\u65b0\u7684Request\u4ee5\u53ca\u65b0\u7684X1TransactionID\uff09","title":"b. \u65f6\u95f4\u8981\u6c42\u53ca\u884c\u4e3a"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#c-faultts103-221-1-clause-53","text":"\uff081\uff09\u544a\u8b66\u662f\u4e00\u6b21\u6027\u95ee\u9898\uff0c\u5373\u7531NE\u53d1\u7ed9ADMF\uff0c\u7136\u540e\u4e0d\u518d\u5360\u7528X1\u63a5\u53e3\u3002\u544a\u8b66\u4e0d\u7528\u4e8e\u5f71\u54cd\u6d41\u91cf\u7684issue\uff08\u4f8b\u5982\u4e22\u5931content\u6216\u8005intercept-related-related\u4fe1\u606f\uff09\u3002\u4f8b\u5982\u8d44\u6e90\u5373\u5c06\u8017\u5c3d\uff08\u8be5\u6d88\u606f\u4e0d\u80fd\u5f71\u54cd\u6d41\u91cf\uff09\u3001\u8bc1\u4e66/\u5bc6\u94a5\u5373\u5c06\u5230\u671f\u7b49\u60c5\u51b5 \u6ce8\u610f \uff1a\u544a\u8b66\u9700\u8981\u4f7f\u7528issue-reporting messages\u7c7b\u578b\u7684\u6d88\u606f\u800c\u4e0d\u80fd\u7528Status-Getting messages\u3002\u51fa\u4e8e\u5ba1\u67e5\u539f\u56e0\uff0cNE\u9700\u8981\u8bb0\u5f55\u6240\u6709\u7684\u544a\u8b66 \uff082\uff09fault\uff1aNE\u53d1\u73b0\u95ee\u9898\u5e76\u4e14\u5c1d\u8bd5\u7ba1\u7406\u6216\u7ea0\u6b63\u8be5\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u6d41\u91cf\u4e22\u5931\u7684\u95ee\u9898\u88ab\u5f52\u7c7b\u4e3afault","title":"c. \u544a\u8b66\u548c\u9519\u8bef(fault)(TS103 221-1 clause 5.3)"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#x1_1","text":"","title":"\u56db\u3001X1\u6d88\u606f"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#41-basic-message","text":"Field Description Format M/O/C ADMF Identifier \u5bf9NE\u7684\u552f\u4e00\u6807\u8bc6\u7b26 ,Required to match the details provided Recommendation [3]\uff0cthe ADMF's X.509 certificate (see clause 8) xs:token M NE Identifier \u5bf9ADMF\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0cequired to match the details provided Recommendation [3]\uff0cthe ADMF's X.509 certificate (see clause 8) xs:token M Message Timestamp \u6307\u793aRequester\u53d1\u9001\u8be5\u6d88\u606f\u7684time QualifiedMicrosecondDateTime xs:dateTime 2017-10-06T18:46:21.247432Z M Version \u7528\u4e8e\u7f16\u7801\u65f6\u6807\u8bc6\u534f\u8bae\u6587\u6863\u7684\u7248\u672c v1.7.1 M X1 TranscationID \u7528\u4e8e\u5173\u8054Request\u548cResponse UUIDv4 C","title":"4.1 Basic Message"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#42-message-type","text":"","title":"4.2 Message Type"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#421-task-control","text":"ActivateTask ModifyTask DeactivateTask DeactivateAllTasks","title":"4.2.1 Task Control\uff1a"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#422-destination-control","text":"CreateDestination ModifyDestination RemoveDestination RemoveAllDestinations","title":"4.2.2 Destination Control\uff1a"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#423-getting-information-from-ne","text":"GetTaskDetails GetDestinationDetails GetNEStatus GetAllDetails ListAllDetails","title":"4.2.3 Getting Information from NE\uff1a"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#424-reporting-issues-from-the-ne","text":"ReportTaskIssue on given XID ReportDestinationIssue on given DID ReportNEIssue","title":"4.2.4 Reporting issues from the NE"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#425-pings-and-keepalives","text":"Ping Keepalive","title":"4.2.5 Pings and Keepalives"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#43-message-definitions-task-control","text":"Direction : ADMF to NE Request : Field Description Format M/C/O TaskDetails \u76ee\u6807\u548c\u76d1\u542c\u7ec6\u8282 \u89c1\u4e0b\u8868 M Field Description Format M/C/O XID \u4efb\u52a1\u7684\u552f\u4e00\u6807\u8bc6 UUIDv4 M TargetIdentifiers \u6807\u8bc6\u8981\u62e6\u622a\u7684\u6d41\u91cf\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u6807\u51c6\uff0c\u5219\u9700\u8981\u5339\u914d\u6240\u6709\u6807\u51c6\u3002\u5982\u679c NE \u4e0d\u80fd\u6839\u636e\u6307\u5b9a\u7684\u6807\u51c6\u8fdb\u884c\u5b9a\u4f4d\uff08\u4f8b\u5982\uff0c\u7531\u4e8e\u4e0d\u652f\u6301\u7684\u683c\u5f0f\u6216\u6807\u8bc6\u7b26\u7684\u4e0d\u9002\u5f53\u7ec4\u5408\uff09\uff0c\u5219 NE \u5e94\u4ee5\u9002\u5f53\u7684\u9519\u8bef\u62d2\u7edd\u8be5\u8bf7\u6c42 \u89c1\u4e0b\u8868 M DeliveryType \u6807\u8bc6\u6570\u636e\u4ea4\u4ed8\u7684\u65f6\u5019\u662f\u7528X2\u8fd8\u662fX3\u63a5\u53e3 Enumerated value - one of \"X2Only\",\"X3Only\" and \"X2andX3\". M ListOfDIDs \u6570\u636e\u4ea4\u4ed8\u7684\u76ee\u7684\u5730ID\uff08DID\uff09\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2aDID\uff08\u5982\u679cNE\u652f\u6301\uff09 M ListOfMediationDetails C CorrelationID \u5206\u914d\u7ed9\u6b64\u4efb\u52a1\u7684\u622a\u83b7\u6750\u6599\u7684\u76f8\u5173\u6807\u8bc6\u7b26\u3002 \u7528\u4e8e\u89e6\u53d1\u573a\u666f\uff0c\u975e\u4e2d\u4ecb\u529f\u80fd\u7f51\u5143\u5e94\u5ffd\u7565\u3002 Unsigned integer O ImplicitDeactivationAllowed \u6307\u793a\u5f53Task\u5df2\u7ecf\u5b8c\u6210\u7684\u65f6\u5019\uff0cNE\u53ef\u4ee5\u81ea\u52a8deactivate\u8be5Task\uff0c\u5f53Task\u88abNE\u81ea\u52a8deactivate\u7684\u65f6\u5019\uff0cNE\u9700\u8981\u62a5\u544a\u5408\u9002\u7684TaskReportType\u7684ReportTaskIssue\u6d88\u606f Boolean O ProductID \u63d0\u4f9b\u65f6\uff0c\u63a5\u6536\u5b9e\u4f53\u5e94\u6839\u636eETSI TS 103 221-2 clause5.2.7\u8282\u4f7f\u7528\u5b83\u6765\u586b\u5145X2/X3 XID\u62a5\u5934\uff0c\u800c\u4e0d\u662f\u4efb\u52a1\u7684XID\u3002\u5982\u679c\u672a\u63d0\u4f9b\uff0c\u5219\u5e94\u4f7f\u7528\u4efb\u52a1\u7684XID UUIDv4 O TaskDetailsExtensions \u62d3\u5c55\u5360\u4f4d\u7b26\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09 O \u6ce8\u610f \uff1aIf a Task has an invalid combination of DeliveryType and Destinations (e.g. \"X2andX3\" delivery specified, but only an X2 Destination given), then the NE shall reject the ActivateTaskRequest with an appropriate error. \u8868 TargetIdentifier Formats:\uff08\u4e0d\u5168\uff09 Field Description Format M/C/O IMSI IMEI MAC Address IPv4 Address IPv6 Address TCP Port UDP Port TCP PortRange UDP PortRange EmailAddress IMPU IMPI NAI GTPUTunnelId GTPCTunnelId SUPIIMSI SUPINAI SUCI Response : Field Description Format M/C/O OK or Error M \u4e00\u822c\u6765\u8bf4\uff0cAMF\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981XID\u3001Targetdentifiers\u3001DeliveryType\u3001ListOfDIDs\u3001TaskDetailsExtensions(IdentifierAssociationExtensions) \u8be6\u60c5\u89c1TS33128 clause 6.2.2","title":"4.3 Message Definitions: task control"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#44-message-definitions-destination-control","text":"Direction : ADMF to NE Request : Field Description Format M/C/O Destination details \u65b0\u76ee\u7684\u5730\u7684\u8be6\u60c5 M Field Description Format M/C/O DID UUIDv4 M FriendlyName string O DeliveryType \u6807\u8bc6\u6570\u636e\u4ea4\u4ed8\u7684\u65f6\u5019\u662f\u7528X2\u8fd8\u662fX3\u63a5\u53e3 Enumerated value - one of \"X2Only\", \"X3Only\" and \"X2andX3\"\uff0cX2Only\u548cX3Only\u6700\u5e38\u7528 M DeliveryAddress \u4ea4\u4ed8\u5730\u5740 \u89c1\u4e0b\u8868 M DestinationDetailsExtensions \u62d3\u5c55\u5360\u4f4d\u7b26\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09 O Field Description Format IPAddressAndPort \u9700\u652f\u6301IPv4/IPv6\uff0c\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u5730\u5740\u548c\u7aef\u53e3 E164Number E.164 \u76ee\u7684\u5730 URI \u5982FQDN\u6216\u8005\u5176\u4ed6\u5f62\u5f0f\u7684URI EmailAddress Email \u5730\u5740 Response : Field Description Format M/C/O OK or Error M","title":"4.4 Message Definitions: destination control"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#45-message-definitions-getting-information-from-ne","text":"","title":"4.5 Message Definitions: getting information from NE"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#46-message-definitions-reporting-issues-from-the-ne","text":"","title":"4.6 Message Definitions: reporting issues from the NE"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#47-message-definitions-pings-and-keepalives","text":"","title":"4.7 Message Definitions: Pings and Keepalives"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#48-x1-error-response-message","text":"Field Description Format M/C/O RequestMessageType \u6307\u793a\u5bf9\u5e94\u7684\u662f\u54ea\u4e2aRequest One of the following: \"ActivateTask\", \"ModifyTask\", \"DeactivateTask\", \"DeactivateAllTasks\", \"GetTaskDetails\", \"CreateDestination\", \"ModifyDestination\", \"RemoveDestination\", \"RemoveAllDestinations\", \"GetDestinationDetails\", \"GetNEStatus\", \"GetAllDetails\", \"ListAllDetails\", \"ReportTaskIssue\", \"ReportDestinationIssue\", \"ReportNEIssue\", \"Ping\", \"Keepalive\" M ErrorInformation \u9519\u8bef\u7801\u53ca\u53ef\u9009\u7684\u9519\u8bef\u63cf\u8ff0 \u89c1\u4e0b\u8868 M Field Description Format M/C/O ErrorCode \u6807\u8bc6\u54ea\u79cd\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u89c1ETSI TS103221-1 caluse 6.7, Table 46 Integer M ErrorDescription Free text field giving further details of the error. Implementers are encouraged to avoid placing sensitive information (such as personally identifiably information or sensitive details of the network) in error messages. UTF-8 string C","title":"4.8 X1 Error Response Message"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#49-x1","text":"\u4ece\u672c\u7ae0\u7684c\u8282\u90e8\u5206\u5bf9task\u6d88\u606f\u7684\u5b9a\u4e49\u63cf\u8ff0\u770b\uff0c\u4e00\u4e2atask\u5728\u88abactivate\u7684\u65f6\u5019\u4f1a\u6307\u5b9adestination\u7684id\u5217\u8868\uff0c\u4e5f\u5c31\u662fListOfDIDs\uff0c\u800cDID\u662fuuid\u6807\u8bc6\uff0c\u4e0d\u662f\u76ee\u6807\u673a\u5668\u7684ip\u6216\u8005\u57df\u540d\uff0cNE\u8fd9\u4e2a\u65f6\u5019\u662f\u65e0\u6cd5\u628a\u751f\u6210\u7684xIRI\u6216xCC\u6d88\u606f\u53d1\u7ed9\u6307\u5b9a\u7684\u76ee\u6807\u7684\u3002 x1\u534f\u8bae\u8fd8\u5b9a\u4e49\u4e86\u4e00\u79cd\u6d88\u606f\u7c7b\u578b\u53ebdestination control\uff0c\u672c\u7ae0\u7684d\u8282\u90e8\u5206\u662f\u5bf9destination\u7684\u63cf\u8ff0\uff0cdestination\u652f\u6301ip\u5730\u5740\u3001email\u7b49\u65b9\u5f0f\u6307\u5b9a\u76ee\u6807\u673a\u5668\u3002 \u6240\u4ee5\uff0c\u5728activate\u4e00\u4e2atask\u4e4b\u524d\uff0c\u9700\u8981\u5148create\u4e00\u4e2adestination\uff0c\u544a\u8bc9NE\u6240\u6709\u53ef\u80fd\u63a5\u6536x\u2154\u6d88\u606f\u7684\u76ee\u6807\u7684ID\u548c\u771f\u5b9e\u5730\u5740\uff0cNE\u56de\u590d\u4e00\u4e2aresp\uff0c\u7136\u540e\u624d\u5bf9NE\u4e0b\u8fbe\u5177\u4f53\u7684\u76d1\u542c\u4efb\u52a1\uff0c\u6307\u5b9a\u9700\u8981\u4ea4\u4ed8\u7684\u76ee\u6807\u7684id\uff0cNE\u56de\u590d\u4e00\u4e2aresp\u3002\u8fd9\u6837\uff0c\u4e00\u4e2a\u6700\u57fa\u672c\u7684X1\u6d88\u606f\u6d41\u7a0b\u5c31\u5b8c\u6210\u4e86","title":"4.9 \u4e00\u4e2a\u57fa\u672c\u7684x1\u6d88\u606f\u6d41\u7a0b"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#410-x1","text":"\u4f7f\u7528HTTPS\u8fdb\u884c\u4f20\u8f93\u3002\u5176\u4e2d\uff0cHTTPS\u4f7f\u7528\u57fa\u4e8eHTTP+TLS\u7684\u65b9\u6848\uff0cHTTP\u9700\u4f7f\u7528HTTP1.1\u6216HTTP2 \u6ce8\u610f\uff1a HTTP \u72b6\u6001\u7801\u4ec5\u7528\u4e8e\u8868\u793aHTTP\u5c42\u7684\u4f20\u8f93\u7ed3\u679c\uff0c\u4e0d\u4f5c\u4e3aX1\u7684Error Message\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u65e0\u8bbaX1\u6d88\u606f\u5185\u5bb9\u5982\u4f55\uff0cHTTP Status \u90fd\u5e94\u8be5\u4e3a200 OK","title":"4.10 X1\u6d88\u606f\u4f20\u8f93\u65b9\u5f0f"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#li_t23","text":"LI_T\u2154\u9002\u7528\u4e8eTriggering deployment model\uff0c\u5373\u89e6\u53d1\u5668\u6a21\u578b\uff0c\u5982\u4e0b\u6240\u793a LI_T\u2154\u63a5\u53e3\u540c\u6837\u4f7f\u7528X1\u6d88\u606f\u8fdb\u884c\u901a\u4fe1\u3002\u56e0\u4e3a\u4e00\u4e9b\u6570\u636e\u7684\u4ea7\u751f\u662f\u9700\u8981\u6761\u4ef6\u89e6\u53d1\u7684\uff0c\u4f8b\u5982\u5f53SMF\u68c0\u6d4b\u5230UE\u5efa\u7acb\u4e86\u4e00\u6761PDU session\u7684\u65f6\u5019\uff0cSMF\u9700\u8981\u89e6\u53d1UPF\u8fdb\u884c\u8be5UE\u7684\u5408\u6cd5\u76d1\u542c\uff08When the CC-TF in the SMF detects that a PDU session is being established for a target UE (i.e. when the SMF sends the N4: Session Establishment Request), it shall send an activation message to the CC-POI in the UPF over the LI_T3 interface. \uff09 \u5982\u4f55\u786e\u5b9a\u4f7f\u7528T2\u8fd8\u662fT3\u63a5\u53e3\uff1f \u9996\u5148\uff0cLEA\u4e0d\u8981\u6c42\u76d1\u542c\u901a\u4fe1\u5185\u5bb9\uff0c\u4f46\u53ef\u80fd\u8981\u6c42\u9700\u8981\u7528\u6237\u9762\u6570\u636e\u5305\u7684IRI\u6d88\u606f\uff08\u8fd9\u4e9b\u6d88\u606f\u5fc5\u987b\u4ece\u7528\u6237\u9762\u6570\u636e\u5305\u4e2d\u5bfc\u51fa\uff09 To support the generation of related xIRI (i.e. that requires access to the user plane packets), the present document supports two implementation approaches:\uff08TS33127-h20 clause 7.12.2.3\uff09 - In approach 1, xIRI (that includes the correlation number and the target identity) is generated by the IRI-POI in the UP Entity. The IRI-POI generates the xIRI from the user plane packets and sends it to the MDF2. The MDF2 generates the IRI messages and sends them to the LEMF. In approach 2, xCC is generated by the CC-POI in the UP Entity as if the warrant involves the interception of communication contents. To enable this, the CC-POI is presumed to be present and provisioned in the UP Entity even when the warrant does not require the interception of communication contents. The CC-POI generates the xCC and sends it to the MDF3. The MDF3 (based on the provisioned intercept information) does not generate and deliver the CC to the LEMF. Instead, the MDF3 forwards the xCC to the MDF2 over LI_MDF interface. The MDF2 then generates the IRI messages from xCC and delivers those IRI messages to the LEMF. In 5GS and CUPS EPS, the POI in the UP Entity requires a trigger to enable it to detect the user plane packets. The corresponding Triggering Function (IRI-TF or CC-TF) resides in the CP Entity that has the IRI-POI for the generation of other xIRI. The trigger sent by the IRI-TF or CC-TF to the corresponding POI includes the following: User plane packet detection rules. Target identity. Correlation information. MDF2 (in approach 1) or MDF3 (in approach 2) address. \u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u4ea7\u751fxIRI\u6d88\u606f\uff0c\u5982\u679c\u662fapproach1\uff0c\u5219\u4f7f\u7528LI_T2\u63a5\u53e3\uff1b\u5982\u679c\u662fapproach2\uff0c\u5219\u4f7f\u7528LI_T3\u63a5\u53e3\u3002 SMF\u4f7f\u7528T2\u6216T3\u63a5\u53e3\u7684\u8be6\u60c5\u89c1TS33128 caluse 6.2.3.3\u53caTS33128 caluse 6.2.3.4 UPF\u7684\u751f\u6210xCC\u53caxIRI\u6d88\u606f\u7684\u8be6\u60c5\u89c1TS33128 caluse 6.2.3.5\u53caTS33128 caluse 6.2.3.6","title":"\u4e94\u3001LI_T2/3\u63a5\u53e3"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#x23","text":"5G\u6838\u5fc3\u7f51\u57fa\u672c\u4e8b\u4ef6\uff1a AMF\uff08TS33128 clause\uff09 SMF\uff08TS33128 clause6.2.3.2\uff09 UDM\uff08TS33128 clause\uff09 UPF\uff08TS33128 clause\uff09 AMFRegistration SMFPDUSessionEstablishment UDMServingSystemMessage PDHeaderReport AMFDeregistration SMFPDUSessionModification PDSummaryReport AMFLocationUpdate SMFPDUSessionRelease AMFStartOfInterceptionWithRegisteredUE SMFStartOfInterceptionWithEstablishedPDUSession AMFUnsuccessfulProcedure SMFUnsuccessfulProcedure \u6761\u4ef6\u4e8b\u4ef6\uff08\u4e0d\u5168\uff09\uff1a AMF SMF UDM UPF AMFIdentifierAssociation SMFMAPDUSessionEstablishment UDMSubscriberRecordChangeMessage SMFMAPDUSessionModification UDMCancelLocationMessage SMFMAPDUSessionRelease SMFMAUnsuccessfulProcedure SMFPDUtoMAPDUSessionModification xIRI\u6d88\u606f\u7684\u66f4\u591a\u8be6\u60c5\u53ef\u4ee5\u67e5\u96053GPP TS33128\u534f\u8baeAnnex A\u7ae0\u8282ASN.1\u63cf\u8ff0\u53caETSI TS103221-2\u6587\u6863","title":"\u516d\u3001X2/3\u6d88\u606f"},{"location":"blog/02_5G%E9%80%9A%E4%BF%A1/5G%E6%A0%B8%E5%BF%83%E7%BD%91%E5%90%88%E6%B3%95%E7%9B%91%E5%90%AC1/#a-x1","text":"<?xml version=\"1.0\" ?> <ns1:X1Request xmlns:ns1= \"http://uri.etsi.org/03221/X1/2017/10\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" > <ns1:x1RequestMessage xsi:type= \"ns1:ActivateTaskRequest\" > <ns1:admfIdentifier> admfID </ns1:admfIdentifier> <ns1:neIdentifier> neID </ns1:neIdentifier> <ns1:messageTimestamp> 2017-10-06T18:46:21.247432Z </ns1:messageTimestamp> <ns1:version> v1.6.1 </ns1:version> <ns1:x1TransactionId> 3741800e-971b-4aa9-85f4-466d2b1adc7f </ns1:x1TransactionId> <ns1:taskDetails> <ns1:xId> 29f28e1c-f230-486a-a860-f5a784ab9172 </ns1:xId> <ns1:targetIdentifiers> <ns1:targetIdentifier> <ns1:e164Number> 447700900000 </ns1:e164Number> </ns1:targetIdentifier> </ns1:targetIdentifiers> <ns1:deliveryType> X2andX3 </ns1:deliveryType> <ns1:listOfDIDs> <ns1:dId> 19867c20-8c94-473e-b9cd-8b72b7b05fd4 </ns1:dId> </ns1:listOfDIDs> </ns1:taskDetails> </ns1:x1RequestMessage> </ns1:X1Request>","title":"\u9644\u5f55 A - X1\u6d88\u606f\u5b9e\u4f8b"},{"location":"blog/03_%E9%80%9A%E4%BF%A1/SNMP%E5%8D%8F%E8%AE%AE%E5%8F%8A%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/","text":"","title":"SNMP\u534f\u8bae\u53ca\u7b80\u5355\u5e94\u7528"}]}